{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport _mergeJSXProps from \"@vue/babel-helper-vue-jsx-merge-props\";\nimport { createNamespace, addUnit } from '../utils';\nimport { BORDER_TOP, BORDER_LEFT } from '../utils/constant';\nimport { PopupMixin } from '../mixins/popup';\nimport Button from '../button';\nimport GoodsAction from '../goods-action';\nimport GoodsActionButton from '../goods-action-button';\n\nvar _createNamespace = createNamespace('dialog'),\n    createComponent = _createNamespace[0],\n    bem = _createNamespace[1],\n    t = _createNamespace[2];\n\nexport default createComponent({\n  mixins: [PopupMixin()],\n  props: {\n    title: String,\n    theme: String,\n    width: [Number, String],\n    message: String,\n    className: null,\n    callback: Function,\n    beforeClose: Function,\n    messageAlign: String,\n    cancelButtonText: String,\n    cancelButtonColor: String,\n    confirmButtonText: String,\n    confirmButtonColor: String,\n    showCancelButton: Boolean,\n    overlay: {\n      type: Boolean,\n      default: true\n    },\n    allowHtml: {\n      type: Boolean,\n      default: true\n    },\n    transition: {\n      type: String,\n      default: 'van-dialog-bounce'\n    },\n    showConfirmButton: {\n      type: Boolean,\n      default: true\n    },\n    closeOnPopstate: {\n      type: Boolean,\n      default: true\n    },\n    closeOnClickOverlay: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      loading: {\n        confirm: false,\n        cancel: false\n      }\n    };\n  },\n  methods: {\n    onClickOverlay: function onClickOverlay() {\n      this.handleAction('overlay');\n    },\n    handleAction: function handleAction(action) {\n      var _this = this;\n\n      this.$emit(action); // show not trigger close event when hidden\n\n      if (!this.value) {\n        return;\n      }\n\n      if (this.beforeClose) {\n        this.loading[action] = true;\n        this.beforeClose(action, function (state) {\n          if (state !== false && _this.loading[action]) {\n            _this.onClose(action);\n          }\n\n          _this.loading.confirm = false;\n          _this.loading.cancel = false;\n        });\n      } else {\n        this.onClose(action);\n      }\n    },\n    onClose: function onClose(action) {\n      this.close();\n\n      if (this.callback) {\n        this.callback(action);\n      }\n    },\n    onOpened: function onOpened() {\n      this.$emit('opened');\n    },\n    onClosed: function onClosed() {\n      this.$emit('closed');\n    },\n    genRoundButtons: function genRoundButtons() {\n      var _this2 = this;\n\n      var h = this.$createElement;\n      return h(GoodsAction, {\n        \"class\": bem('footer')\n      }, [this.showCancelButton && h(GoodsActionButton, {\n        \"attrs\": {\n          \"size\": \"large\",\n          \"type\": \"warning\",\n          \"text\": this.cancelButtonText || t('cancel'),\n          \"color\": this.cancelButtonColor,\n          \"loading\": this.loading.cancel\n        },\n        \"class\": bem('cancel'),\n        \"on\": {\n          \"click\": function click() {\n            _this2.handleAction('cancel');\n          }\n        }\n      }), this.showConfirmButton && h(GoodsActionButton, {\n        \"attrs\": {\n          \"size\": \"large\",\n          \"type\": \"danger\",\n          \"text\": this.confirmButtonText || t('confirm'),\n          \"color\": this.confirmButtonColor,\n          \"loading\": this.loading.confirm\n        },\n        \"class\": bem('confirm'),\n        \"on\": {\n          \"click\": function click() {\n            _this2.handleAction('confirm');\n          }\n        }\n      })]);\n    },\n    genButtons: function genButtons() {\n      var _this3 = this,\n          _ref;\n\n      var h = this.$createElement;\n      var multiple = this.showCancelButton && this.showConfirmButton;\n      return h(\"div\", {\n        \"class\": [BORDER_TOP, bem('footer')]\n      }, [this.showCancelButton && h(Button, {\n        \"attrs\": {\n          \"size\": \"large\",\n          \"loading\": this.loading.cancel,\n          \"text\": this.cancelButtonText || t('cancel')\n        },\n        \"class\": bem('cancel'),\n        \"style\": {\n          color: this.cancelButtonColor\n        },\n        \"on\": {\n          \"click\": function click() {\n            _this3.handleAction('cancel');\n          }\n        }\n      }), this.showConfirmButton && h(Button, {\n        \"attrs\": {\n          \"size\": \"large\",\n          \"loading\": this.loading.confirm,\n          \"text\": this.confirmButtonText || t('confirm')\n        },\n        \"class\": [bem('confirm'), (_ref = {}, _ref[BORDER_LEFT] = multiple, _ref)],\n        \"style\": {\n          color: this.confirmButtonColor\n        },\n        \"on\": {\n          \"click\": function click() {\n            _this3.handleAction('confirm');\n          }\n        }\n      })]);\n    },\n    genContent: function genContent(hasTitle, messageSlot) {\n      var h = this.$createElement;\n\n      if (messageSlot) {\n        return h(\"div\", {\n          \"class\": bem('content')\n        }, [messageSlot]);\n      }\n\n      var message = this.message,\n          messageAlign = this.messageAlign;\n\n      if (message) {\n        var _bem, _domProps;\n\n        var data = {\n          class: bem('message', (_bem = {\n            'has-title': hasTitle\n          }, _bem[messageAlign] = messageAlign, _bem)),\n          domProps: (_domProps = {}, _domProps[this.allowHtml ? 'innerHTML' : 'textContent'] = message, _domProps)\n        };\n        return h(\"div\", {\n          \"class\": bem('content', {\n            isolated: !hasTitle\n          })\n        }, [h(\"div\", _mergeJSXProps([{}, data]))]);\n      }\n    }\n  },\n  render: function render() {\n    var h = arguments[0];\n\n    if (!this.shouldRender) {\n      return;\n    }\n\n    var message = this.message;\n    var messageSlot = this.slots();\n    var title = this.slots('title') || this.title;\n    var Title = title && h(\"div\", {\n      \"class\": bem('header', {\n        isolated: !message && !messageSlot\n      })\n    }, [title]);\n    return h(\"transition\", {\n      \"attrs\": {\n        \"name\": this.transition\n      },\n      \"on\": {\n        \"afterEnter\": this.onOpened,\n        \"afterLeave\": this.onClosed\n      }\n    }, [h(\"div\", {\n      \"directives\": [{\n        name: \"show\",\n        value: this.value\n      }],\n      \"attrs\": {\n        \"role\": \"dialog\",\n        \"aria-labelledby\": this.title || message\n      },\n      \"class\": [bem([this.theme]), this.className],\n      \"style\": {\n        width: addUnit(this.width)\n      }\n    }, [Title, this.genContent(title, messageSlot), this.theme === 'round-button' ? this.genRoundButtons() : this.genButtons()])]);\n  }\n});","map":{"version":3,"sources":["C:/Users/Lisp/Desktop/items/node_modules/vant/es/dialog/Dialog.js"],"names":["_mergeJSXProps","createNamespace","addUnit","BORDER_TOP","BORDER_LEFT","PopupMixin","Button","GoodsAction","GoodsActionButton","_createNamespace","createComponent","bem","t","mixins","props","title","String","theme","width","Number","message","className","callback","Function","beforeClose","messageAlign","cancelButtonText","cancelButtonColor","confirmButtonText","confirmButtonColor","showCancelButton","Boolean","overlay","type","default","allowHtml","transition","showConfirmButton","closeOnPopstate","closeOnClickOverlay","data","loading","confirm","cancel","methods","onClickOverlay","handleAction","action","_this","$emit","value","state","onClose","close","onOpened","onClosed","genRoundButtons","_this2","h","$createElement","click","genButtons","_this3","_ref","multiple","color","genContent","hasTitle","messageSlot","_bem","_domProps","class","domProps","isolated","render","arguments","shouldRender","slots","Title","name"],"mappings":"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","sourcesContent":["import _mergeJSXProps from \"@vue/babel-helper-vue-jsx-merge-props\";\nimport { createNamespace, addUnit } from '../utils';\nimport { BORDER_TOP, BORDER_LEFT } from '../utils/constant';\nimport { PopupMixin } from '../mixins/popup';\nimport Button from '../button';\nimport GoodsAction from '../goods-action';\nimport GoodsActionButton from '../goods-action-button';\n\nvar _createNamespace = createNamespace('dialog'),\n    createComponent = _createNamespace[0],\n    bem = _createNamespace[1],\n    t = _createNamespace[2];\n\nexport default createComponent({\n  mixins: [PopupMixin()],\n  props: {\n    title: String,\n    theme: String,\n    width: [Number, String],\n    message: String,\n    className: null,\n    callback: Function,\n    beforeClose: Function,\n    messageAlign: String,\n    cancelButtonText: String,\n    cancelButtonColor: String,\n    confirmButtonText: String,\n    confirmButtonColor: String,\n    showCancelButton: Boolean,\n    overlay: {\n      type: Boolean,\n      default: true\n    },\n    allowHtml: {\n      type: Boolean,\n      default: true\n    },\n    transition: {\n      type: String,\n      default: 'van-dialog-bounce'\n    },\n    showConfirmButton: {\n      type: Boolean,\n      default: true\n    },\n    closeOnPopstate: {\n      type: Boolean,\n      default: true\n    },\n    closeOnClickOverlay: {\n      type: Boolean,\n      default: false\n    }\n  },\n  data: function data() {\n    return {\n      loading: {\n        confirm: false,\n        cancel: false\n      }\n    };\n  },\n  methods: {\n    onClickOverlay: function onClickOverlay() {\n      this.handleAction('overlay');\n    },\n    handleAction: function handleAction(action) {\n      var _this = this;\n\n      this.$emit(action); // show not trigger close event when hidden\n\n      if (!this.value) {\n        return;\n      }\n\n      if (this.beforeClose) {\n        this.loading[action] = true;\n        this.beforeClose(action, function (state) {\n          if (state !== false && _this.loading[action]) {\n            _this.onClose(action);\n          }\n\n          _this.loading.confirm = false;\n          _this.loading.cancel = false;\n        });\n      } else {\n        this.onClose(action);\n      }\n    },\n    onClose: function onClose(action) {\n      this.close();\n\n      if (this.callback) {\n        this.callback(action);\n      }\n    },\n    onOpened: function onOpened() {\n      this.$emit('opened');\n    },\n    onClosed: function onClosed() {\n      this.$emit('closed');\n    },\n    genRoundButtons: function genRoundButtons() {\n      var _this2 = this;\n\n      var h = this.$createElement;\n      return h(GoodsAction, {\n        \"class\": bem('footer')\n      }, [this.showCancelButton && h(GoodsActionButton, {\n        \"attrs\": {\n          \"size\": \"large\",\n          \"type\": \"warning\",\n          \"text\": this.cancelButtonText || t('cancel'),\n          \"color\": this.cancelButtonColor,\n          \"loading\": this.loading.cancel\n        },\n        \"class\": bem('cancel'),\n        \"on\": {\n          \"click\": function click() {\n            _this2.handleAction('cancel');\n          }\n        }\n      }), this.showConfirmButton && h(GoodsActionButton, {\n        \"attrs\": {\n          \"size\": \"large\",\n          \"type\": \"danger\",\n          \"text\": this.confirmButtonText || t('confirm'),\n          \"color\": this.confirmButtonColor,\n          \"loading\": this.loading.confirm\n        },\n        \"class\": bem('confirm'),\n        \"on\": {\n          \"click\": function click() {\n            _this2.handleAction('confirm');\n          }\n        }\n      })]);\n    },\n    genButtons: function genButtons() {\n      var _this3 = this,\n          _ref;\n\n      var h = this.$createElement;\n      var multiple = this.showCancelButton && this.showConfirmButton;\n      return h(\"div\", {\n        \"class\": [BORDER_TOP, bem('footer')]\n      }, [this.showCancelButton && h(Button, {\n        \"attrs\": {\n          \"size\": \"large\",\n          \"loading\": this.loading.cancel,\n          \"text\": this.cancelButtonText || t('cancel')\n        },\n        \"class\": bem('cancel'),\n        \"style\": {\n          color: this.cancelButtonColor\n        },\n        \"on\": {\n          \"click\": function click() {\n            _this3.handleAction('cancel');\n          }\n        }\n      }), this.showConfirmButton && h(Button, {\n        \"attrs\": {\n          \"size\": \"large\",\n          \"loading\": this.loading.confirm,\n          \"text\": this.confirmButtonText || t('confirm')\n        },\n        \"class\": [bem('confirm'), (_ref = {}, _ref[BORDER_LEFT] = multiple, _ref)],\n        \"style\": {\n          color: this.confirmButtonColor\n        },\n        \"on\": {\n          \"click\": function click() {\n            _this3.handleAction('confirm');\n          }\n        }\n      })]);\n    },\n    genContent: function genContent(hasTitle, messageSlot) {\n      var h = this.$createElement;\n\n      if (messageSlot) {\n        return h(\"div\", {\n          \"class\": bem('content')\n        }, [messageSlot]);\n      }\n\n      var message = this.message,\n          messageAlign = this.messageAlign;\n\n      if (message) {\n        var _bem, _domProps;\n\n        var data = {\n          class: bem('message', (_bem = {\n            'has-title': hasTitle\n          }, _bem[messageAlign] = messageAlign, _bem)),\n          domProps: (_domProps = {}, _domProps[this.allowHtml ? 'innerHTML' : 'textContent'] = message, _domProps)\n        };\n        return h(\"div\", {\n          \"class\": bem('content', {\n            isolated: !hasTitle\n          })\n        }, [h(\"div\", _mergeJSXProps([{}, data]))]);\n      }\n    }\n  },\n  render: function render() {\n    var h = arguments[0];\n\n    if (!this.shouldRender) {\n      return;\n    }\n\n    var message = this.message;\n    var messageSlot = this.slots();\n    var title = this.slots('title') || this.title;\n    var Title = title && h(\"div\", {\n      \"class\": bem('header', {\n        isolated: !message && !messageSlot\n      })\n    }, [title]);\n    return h(\"transition\", {\n      \"attrs\": {\n        \"name\": this.transition\n      },\n      \"on\": {\n        \"afterEnter\": this.onOpened,\n        \"afterLeave\": this.onClosed\n      }\n    }, [h(\"div\", {\n      \"directives\": [{\n        name: \"show\",\n        value: this.value\n      }],\n      \"attrs\": {\n        \"role\": \"dialog\",\n        \"aria-labelledby\": this.title || message\n      },\n      \"class\": [bem([this.theme]), this.className],\n      \"style\": {\n        width: addUnit(this.width)\n      }\n    }, [Title, this.genContent(title, messageSlot), this.theme === 'round-button' ? this.genRoundButtons() : this.genButtons()])]);\n  }\n});"]},"metadata":{},"sourceType":"module"}