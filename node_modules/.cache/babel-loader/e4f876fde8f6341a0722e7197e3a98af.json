{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport { isDef, isObject } from '.';\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction assignKey(to, from, key) {\n  var val = from[key];\n\n  if (!isDef(val)) {\n    return;\n  }\n\n  if (!hasOwnProperty.call(to, key) || !isObject(val)) {\n    to[key] = val;\n  } else {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    to[key] = deepAssign(Object(to[key]), from[key]);\n  }\n}\n\nexport function deepAssign(to, from) {\n  Object.keys(from).forEach(function (key) {\n    assignKey(to, from, key);\n  });\n  return to;\n}","map":{"version":3,"sources":["C:/Users/Lisp/Desktop/items/node_modules/vant/es/utils/deep-assign.js"],"names":["isDef","isObject","hasOwnProperty","Object","prototype","assignKey","to","from","key","val","call","deepAssign","keys","forEach"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,QAAhB,QAAgC,GAAhC;AACA,IAAIC,cAAc,GAAGC,MAAM,CAACC,SAAP,CAAiBF,cAAtC;;AAEA,SAASG,SAAT,CAAmBC,EAAnB,EAAuBC,IAAvB,EAA6BC,GAA7B,EAAkC;AAChC,MAAIC,GAAG,GAAGF,IAAI,CAACC,GAAD,CAAd;;AAEA,MAAI,CAACR,KAAK,CAACS,GAAD,CAAV,EAAiB;AACf;AACD;;AAED,MAAI,CAACP,cAAc,CAACQ,IAAf,CAAoBJ,EAApB,EAAwBE,GAAxB,CAAD,IAAiC,CAACP,QAAQ,CAACQ,GAAD,CAA9C,EAAqD;AACnDH,IAAAA,EAAE,CAACE,GAAD,CAAF,GAAUC,GAAV;AACD,GAFD,MAEO;AACL;AACAH,IAAAA,EAAE,CAACE,GAAD,CAAF,GAAUG,UAAU,CAACR,MAAM,CAACG,EAAE,CAACE,GAAD,CAAH,CAAP,EAAkBD,IAAI,CAACC,GAAD,CAAtB,CAApB;AACD;AACF;;AAED,OAAO,SAASG,UAAT,CAAoBL,EAApB,EAAwBC,IAAxB,EAA8B;AACnCJ,EAAAA,MAAM,CAACS,IAAP,CAAYL,IAAZ,EAAkBM,OAAlB,CAA0B,UAAUL,GAAV,EAAe;AACvCH,IAAAA,SAAS,CAACC,EAAD,EAAKC,IAAL,EAAWC,GAAX,CAAT;AACD,GAFD;AAGA,SAAOF,EAAP;AACD","sourcesContent":["import { isDef, isObject } from '.';\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction assignKey(to, from, key) {\n  var val = from[key];\n\n  if (!isDef(val)) {\n    return;\n  }\n\n  if (!hasOwnProperty.call(to, key) || !isObject(val)) {\n    to[key] = val;\n  } else {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    to[key] = deepAssign(Object(to[key]), from[key]);\n  }\n}\n\nexport function deepAssign(to, from) {\n  Object.keys(from).forEach(function (key) {\n    assignKey(to, from, key);\n  });\n  return to;\n}"]},"metadata":{},"sourceType":"module"}