{"ast":null,"code":"// Utils\nimport { createNamespace, addUnit } from '../utils';\nimport { switchProps } from './shared'; // Mixins\n\nimport { FieldMixin } from '../mixins/field'; // Components\n\nimport Loading from '../loading';\n\nvar _createNamespace = createNamespace('switch'),\n    createComponent = _createNamespace[0],\n    bem = _createNamespace[1];\n\nexport default createComponent({\n  mixins: [FieldMixin],\n  props: switchProps,\n  computed: {\n    checked: function checked() {\n      return this.value === this.activeValue;\n    },\n    style: function style() {\n      return {\n        fontSize: addUnit(this.size),\n        backgroundColor: this.checked ? this.activeColor : this.inactiveColor\n      };\n    }\n  },\n  methods: {\n    onClick: function onClick(event) {\n      this.$emit('click', event);\n\n      if (!this.disabled && !this.loading) {\n        var newValue = this.checked ? this.inactiveValue : this.activeValue;\n        this.$emit('input', newValue);\n        this.$emit('change', newValue);\n      }\n    },\n    genLoading: function genLoading() {\n      var h = this.$createElement;\n\n      if (this.loading) {\n        var color = this.checked ? this.activeColor : this.inactiveColor;\n        return h(Loading, {\n          \"class\": bem('loading'),\n          \"attrs\": {\n            \"color\": color\n          }\n        });\n      }\n    }\n  },\n  render: function render() {\n    var h = arguments[0];\n    var checked = this.checked,\n        loading = this.loading,\n        disabled = this.disabled;\n    return h(\"div\", {\n      \"class\": bem({\n        on: checked,\n        loading: loading,\n        disabled: disabled\n      }),\n      \"attrs\": {\n        \"role\": \"switch\",\n        \"aria-checked\": String(checked)\n      },\n      \"style\": this.style,\n      \"on\": {\n        \"click\": this.onClick\n      }\n    }, [h(\"div\", {\n      \"class\": bem('node')\n    }, [this.genLoading()])]);\n  }\n});","map":{"version":3,"sources":["C:/Users/Lisp/Desktop/items/node_modules/vant/es/switch/index.js"],"names":["createNamespace","addUnit","switchProps","FieldMixin","Loading","_createNamespace","createComponent","bem","mixins","props","computed","checked","value","activeValue","style","fontSize","size","backgroundColor","activeColor","inactiveColor","methods","onClick","event","$emit","disabled","loading","newValue","inactiveValue","genLoading","h","$createElement","color","render","arguments","on","String"],"mappings":"AAAA;AACA,SAASA,eAAT,EAA0BC,OAA1B,QAAyC,UAAzC;AACA,SAASC,WAAT,QAA4B,UAA5B,C,CAAwC;;AAExC,SAASC,UAAT,QAA2B,iBAA3B,C,CAA8C;;AAE9C,OAAOC,OAAP,MAAoB,YAApB;;AAEA,IAAIC,gBAAgB,GAAGL,eAAe,CAAC,QAAD,CAAtC;AAAA,IACIM,eAAe,GAAGD,gBAAgB,CAAC,CAAD,CADtC;AAAA,IAEIE,GAAG,GAAGF,gBAAgB,CAAC,CAAD,CAF1B;;AAIA,eAAeC,eAAe,CAAC;AAC7BE,EAAAA,MAAM,EAAE,CAACL,UAAD,CADqB;AAE7BM,EAAAA,KAAK,EAAEP,WAFsB;AAG7BQ,EAAAA,QAAQ,EAAE;AACRC,IAAAA,OAAO,EAAE,SAASA,OAAT,GAAmB;AAC1B,aAAO,KAAKC,KAAL,KAAe,KAAKC,WAA3B;AACD,KAHO;AAIRC,IAAAA,KAAK,EAAE,SAASA,KAAT,GAAiB;AACtB,aAAO;AACLC,QAAAA,QAAQ,EAAEd,OAAO,CAAC,KAAKe,IAAN,CADZ;AAELC,QAAAA,eAAe,EAAE,KAAKN,OAAL,GAAe,KAAKO,WAApB,GAAkC,KAAKC;AAFnD,OAAP;AAID;AATO,GAHmB;AAc7BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,OAAO,EAAE,SAASA,OAAT,CAAiBC,KAAjB,EAAwB;AAC/B,WAAKC,KAAL,CAAW,OAAX,EAAoBD,KAApB;;AAEA,UAAI,CAAC,KAAKE,QAAN,IAAkB,CAAC,KAAKC,OAA5B,EAAqC;AACnC,YAAIC,QAAQ,GAAG,KAAKf,OAAL,GAAe,KAAKgB,aAApB,GAAoC,KAAKd,WAAxD;AACA,aAAKU,KAAL,CAAW,OAAX,EAAoBG,QAApB;AACA,aAAKH,KAAL,CAAW,QAAX,EAAqBG,QAArB;AACD;AACF,KATM;AAUPE,IAAAA,UAAU,EAAE,SAASA,UAAT,GAAsB;AAChC,UAAIC,CAAC,GAAG,KAAKC,cAAb;;AAEA,UAAI,KAAKL,OAAT,EAAkB;AAChB,YAAIM,KAAK,GAAG,KAAKpB,OAAL,GAAe,KAAKO,WAApB,GAAkC,KAAKC,aAAnD;AACA,eAAOU,CAAC,CAACzB,OAAD,EAAU;AAChB,mBAASG,GAAG,CAAC,SAAD,CADI;AAEhB,mBAAS;AACP,qBAASwB;AADF;AAFO,SAAV,CAAR;AAMD;AACF;AAtBM,GAdoB;AAsC7BC,EAAAA,MAAM,EAAE,SAASA,MAAT,GAAkB;AACxB,QAAIH,CAAC,GAAGI,SAAS,CAAC,CAAD,CAAjB;AACA,QAAItB,OAAO,GAAG,KAAKA,OAAnB;AAAA,QACIc,OAAO,GAAG,KAAKA,OADnB;AAAA,QAEID,QAAQ,GAAG,KAAKA,QAFpB;AAGA,WAAOK,CAAC,CAAC,KAAD,EAAQ;AACd,eAAStB,GAAG,CAAC;AACX2B,QAAAA,EAAE,EAAEvB,OADO;AAEXc,QAAAA,OAAO,EAAEA,OAFE;AAGXD,QAAAA,QAAQ,EAAEA;AAHC,OAAD,CADE;AAMd,eAAS;AACP,gBAAQ,QADD;AAEP,wBAAgBW,MAAM,CAACxB,OAAD;AAFf,OANK;AAUd,eAAS,KAAKG,KAVA;AAWd,YAAM;AACJ,iBAAS,KAAKO;AADV;AAXQ,KAAR,EAcL,CAACQ,CAAC,CAAC,KAAD,EAAQ;AACX,eAAStB,GAAG,CAAC,MAAD;AADD,KAAR,EAEF,CAAC,KAAKqB,UAAL,EAAD,CAFE,CAAF,CAdK,CAAR;AAiBD;AA5D4B,CAAD,CAA9B","sourcesContent":["// Utils\nimport { createNamespace, addUnit } from '../utils';\nimport { switchProps } from './shared'; // Mixins\n\nimport { FieldMixin } from '../mixins/field'; // Components\n\nimport Loading from '../loading';\n\nvar _createNamespace = createNamespace('switch'),\n    createComponent = _createNamespace[0],\n    bem = _createNamespace[1];\n\nexport default createComponent({\n  mixins: [FieldMixin],\n  props: switchProps,\n  computed: {\n    checked: function checked() {\n      return this.value === this.activeValue;\n    },\n    style: function style() {\n      return {\n        fontSize: addUnit(this.size),\n        backgroundColor: this.checked ? this.activeColor : this.inactiveColor\n      };\n    }\n  },\n  methods: {\n    onClick: function onClick(event) {\n      this.$emit('click', event);\n\n      if (!this.disabled && !this.loading) {\n        var newValue = this.checked ? this.inactiveValue : this.activeValue;\n        this.$emit('input', newValue);\n        this.$emit('change', newValue);\n      }\n    },\n    genLoading: function genLoading() {\n      var h = this.$createElement;\n\n      if (this.loading) {\n        var color = this.checked ? this.activeColor : this.inactiveColor;\n        return h(Loading, {\n          \"class\": bem('loading'),\n          \"attrs\": {\n            \"color\": color\n          }\n        });\n      }\n    }\n  },\n  render: function render() {\n    var h = arguments[0];\n    var checked = this.checked,\n        loading = this.loading,\n        disabled = this.disabled;\n    return h(\"div\", {\n      \"class\": bem({\n        on: checked,\n        loading: loading,\n        disabled: disabled\n      }),\n      \"attrs\": {\n        \"role\": \"switch\",\n        \"aria-checked\": String(checked)\n      },\n      \"style\": this.style,\n      \"on\": {\n        \"click\": this.onClick\n      }\n    }, [h(\"div\", {\n      \"class\": bem('node')\n    }, [this.genLoading()])]);\n  }\n});"]},"metadata":{},"sourceType":"module"}