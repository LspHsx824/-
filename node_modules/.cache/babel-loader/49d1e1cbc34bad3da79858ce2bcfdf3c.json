{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.function.name.js\";\n// Utils\nimport { createNamespace } from '../utils';\nimport { range } from '../utils/format/number';\nimport { preventDefault } from '../utils/dom/event'; // Mixins\n\nimport { TouchMixin } from '../mixins/touch';\nimport { ClickOutsideMixin } from '../mixins/click-outside';\n\nvar _createNamespace = createNamespace('swipe-cell'),\n    createComponent = _createNamespace[0],\n    bem = _createNamespace[1];\n\nvar THRESHOLD = 0.15;\nexport default createComponent({\n  mixins: [TouchMixin, ClickOutsideMixin({\n    event: 'touchstart',\n    method: 'onClick'\n  })],\n  props: {\n    // @deprecated\n    // should be removed in next major version, use beforeClose instead\n    onClose: Function,\n    disabled: Boolean,\n    leftWidth: [Number, String],\n    rightWidth: [Number, String],\n    beforeClose: Function,\n    stopPropagation: Boolean,\n    name: {\n      type: [Number, String],\n      default: ''\n    }\n  },\n  data: function data() {\n    return {\n      offset: 0,\n      dragging: false\n    };\n  },\n  computed: {\n    computedLeftWidth: function computedLeftWidth() {\n      return +this.leftWidth || this.getWidthByRef('left');\n    },\n    computedRightWidth: function computedRightWidth() {\n      return +this.rightWidth || this.getWidthByRef('right');\n    }\n  },\n  mounted: function mounted() {\n    this.bindTouchEvent(this.$el);\n  },\n  methods: {\n    getWidthByRef: function getWidthByRef(ref) {\n      if (this.$refs[ref]) {\n        var rect = this.$refs[ref].getBoundingClientRect();\n        return rect.width;\n      }\n\n      return 0;\n    },\n    // @exposed-api\n    open: function open(position) {\n      var offset = position === 'left' ? this.computedLeftWidth : -this.computedRightWidth;\n      this.opened = true;\n      this.offset = offset;\n      this.$emit('open', {\n        position: position,\n        name: this.name,\n        // @deprecated\n        // should be removed in next major version\n        detail: this.name\n      });\n    },\n    // @exposed-api\n    close: function close(position) {\n      this.offset = 0;\n\n      if (this.opened) {\n        this.opened = false;\n        this.$emit('close', {\n          position: position,\n          name: this.name\n        });\n      }\n    },\n    onTouchStart: function onTouchStart(event) {\n      if (this.disabled) {\n        return;\n      }\n\n      this.startOffset = this.offset;\n      this.touchStart(event);\n    },\n    onTouchMove: function onTouchMove(event) {\n      if (this.disabled) {\n        return;\n      }\n\n      this.touchMove(event);\n\n      if (this.direction === 'horizontal') {\n        this.dragging = true;\n        this.lockClick = true;\n        var isPrevent = !this.opened || this.deltaX * this.startOffset < 0;\n\n        if (isPrevent) {\n          preventDefault(event, this.stopPropagation);\n        }\n\n        this.offset = range(this.deltaX + this.startOffset, -this.computedRightWidth, this.computedLeftWidth);\n      }\n    },\n    onTouchEnd: function onTouchEnd() {\n      var _this = this;\n\n      if (this.disabled) {\n        return;\n      }\n\n      if (this.dragging) {\n        this.toggle(this.offset > 0 ? 'left' : 'right');\n        this.dragging = false; // compatible with desktop scenario\n\n        setTimeout(function () {\n          _this.lockClick = false;\n        }, 0);\n      }\n    },\n    toggle: function toggle(direction) {\n      var offset = Math.abs(this.offset);\n      var threshold = this.opened ? 1 - THRESHOLD : THRESHOLD;\n      var computedLeftWidth = this.computedLeftWidth,\n          computedRightWidth = this.computedRightWidth;\n\n      if (computedRightWidth && direction === 'right' && offset > computedRightWidth * threshold) {\n        this.open('right');\n      } else if (computedLeftWidth && direction === 'left' && offset > computedLeftWidth * threshold) {\n        this.open('left');\n      } else {\n        this.close();\n      }\n    },\n    onClick: function onClick(position) {\n      if (position === void 0) {\n        position = 'outside';\n      }\n\n      this.$emit('click', position);\n\n      if (this.opened && !this.lockClick) {\n        if (this.beforeClose) {\n          this.beforeClose({\n            position: position,\n            name: this.name,\n            instance: this\n          });\n        } else if (this.onClose) {\n          this.onClose(position, this, {\n            name: this.name\n          });\n        } else {\n          this.close(position);\n        }\n      }\n    },\n    getClickHandler: function getClickHandler(position, stop) {\n      var _this2 = this;\n\n      return function (event) {\n        if (stop) {\n          event.stopPropagation();\n        }\n\n        _this2.onClick(position);\n      };\n    },\n    genLeftPart: function genLeftPart() {\n      var h = this.$createElement;\n      var content = this.slots('left');\n\n      if (content) {\n        return h(\"div\", {\n          \"ref\": \"left\",\n          \"class\": bem('left'),\n          \"on\": {\n            \"click\": this.getClickHandler('left', true)\n          }\n        }, [content]);\n      }\n    },\n    genRightPart: function genRightPart() {\n      var h = this.$createElement;\n      var content = this.slots('right');\n\n      if (content) {\n        return h(\"div\", {\n          \"ref\": \"right\",\n          \"class\": bem('right'),\n          \"on\": {\n            \"click\": this.getClickHandler('right', true)\n          }\n        }, [content]);\n      }\n    }\n  },\n  render: function render() {\n    var h = arguments[0];\n    var wrapperStyle = {\n      transform: \"translate3d(\" + this.offset + \"px, 0, 0)\",\n      transitionDuration: this.dragging ? '0s' : '.6s'\n    };\n    return h(\"div\", {\n      \"class\": bem(),\n      \"on\": {\n        \"click\": this.getClickHandler('cell')\n      }\n    }, [h(\"div\", {\n      \"class\": bem('wrapper'),\n      \"style\": wrapperStyle\n    }, [this.genLeftPart(), this.slots(), this.genRightPart()])]);\n  }\n});","map":{"version":3,"sources":["C:/Users/Lisp/Desktop/items/node_modules/vant/es/swipe-cell/index.js"],"names":["createNamespace","range","preventDefault","TouchMixin","ClickOutsideMixin","_createNamespace","createComponent","bem","THRESHOLD","mixins","event","method","props","onClose","Function","disabled","Boolean","leftWidth","Number","String","rightWidth","beforeClose","stopPropagation","name","type","default","data","offset","dragging","computed","computedLeftWidth","getWidthByRef","computedRightWidth","mounted","bindTouchEvent","$el","methods","ref","$refs","rect","getBoundingClientRect","width","open","position","opened","$emit","detail","close","onTouchStart","startOffset","touchStart","onTouchMove","touchMove","direction","lockClick","isPrevent","deltaX","onTouchEnd","_this","toggle","setTimeout","Math","abs","threshold","onClick","instance","getClickHandler","stop","_this2","genLeftPart","h","$createElement","content","slots","genRightPart","render","arguments","wrapperStyle","transform","transitionDuration"],"mappings":"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","sourcesContent":["// Utils\nimport { createNamespace } from '../utils';\nimport { range } from '../utils/format/number';\nimport { preventDefault } from '../utils/dom/event'; // Mixins\n\nimport { TouchMixin } from '../mixins/touch';\nimport { ClickOutsideMixin } from '../mixins/click-outside';\n\nvar _createNamespace = createNamespace('swipe-cell'),\n    createComponent = _createNamespace[0],\n    bem = _createNamespace[1];\n\nvar THRESHOLD = 0.15;\nexport default createComponent({\n  mixins: [TouchMixin, ClickOutsideMixin({\n    event: 'touchstart',\n    method: 'onClick'\n  })],\n  props: {\n    // @deprecated\n    // should be removed in next major version, use beforeClose instead\n    onClose: Function,\n    disabled: Boolean,\n    leftWidth: [Number, String],\n    rightWidth: [Number, String],\n    beforeClose: Function,\n    stopPropagation: Boolean,\n    name: {\n      type: [Number, String],\n      default: ''\n    }\n  },\n  data: function data() {\n    return {\n      offset: 0,\n      dragging: false\n    };\n  },\n  computed: {\n    computedLeftWidth: function computedLeftWidth() {\n      return +this.leftWidth || this.getWidthByRef('left');\n    },\n    computedRightWidth: function computedRightWidth() {\n      return +this.rightWidth || this.getWidthByRef('right');\n    }\n  },\n  mounted: function mounted() {\n    this.bindTouchEvent(this.$el);\n  },\n  methods: {\n    getWidthByRef: function getWidthByRef(ref) {\n      if (this.$refs[ref]) {\n        var rect = this.$refs[ref].getBoundingClientRect();\n        return rect.width;\n      }\n\n      return 0;\n    },\n    // @exposed-api\n    open: function open(position) {\n      var offset = position === 'left' ? this.computedLeftWidth : -this.computedRightWidth;\n      this.opened = true;\n      this.offset = offset;\n      this.$emit('open', {\n        position: position,\n        name: this.name,\n        // @deprecated\n        // should be removed in next major version\n        detail: this.name\n      });\n    },\n    // @exposed-api\n    close: function close(position) {\n      this.offset = 0;\n\n      if (this.opened) {\n        this.opened = false;\n        this.$emit('close', {\n          position: position,\n          name: this.name\n        });\n      }\n    },\n    onTouchStart: function onTouchStart(event) {\n      if (this.disabled) {\n        return;\n      }\n\n      this.startOffset = this.offset;\n      this.touchStart(event);\n    },\n    onTouchMove: function onTouchMove(event) {\n      if (this.disabled) {\n        return;\n      }\n\n      this.touchMove(event);\n\n      if (this.direction === 'horizontal') {\n        this.dragging = true;\n        this.lockClick = true;\n        var isPrevent = !this.opened || this.deltaX * this.startOffset < 0;\n\n        if (isPrevent) {\n          preventDefault(event, this.stopPropagation);\n        }\n\n        this.offset = range(this.deltaX + this.startOffset, -this.computedRightWidth, this.computedLeftWidth);\n      }\n    },\n    onTouchEnd: function onTouchEnd() {\n      var _this = this;\n\n      if (this.disabled) {\n        return;\n      }\n\n      if (this.dragging) {\n        this.toggle(this.offset > 0 ? 'left' : 'right');\n        this.dragging = false; // compatible with desktop scenario\n\n        setTimeout(function () {\n          _this.lockClick = false;\n        }, 0);\n      }\n    },\n    toggle: function toggle(direction) {\n      var offset = Math.abs(this.offset);\n      var threshold = this.opened ? 1 - THRESHOLD : THRESHOLD;\n      var computedLeftWidth = this.computedLeftWidth,\n          computedRightWidth = this.computedRightWidth;\n\n      if (computedRightWidth && direction === 'right' && offset > computedRightWidth * threshold) {\n        this.open('right');\n      } else if (computedLeftWidth && direction === 'left' && offset > computedLeftWidth * threshold) {\n        this.open('left');\n      } else {\n        this.close();\n      }\n    },\n    onClick: function onClick(position) {\n      if (position === void 0) {\n        position = 'outside';\n      }\n\n      this.$emit('click', position);\n\n      if (this.opened && !this.lockClick) {\n        if (this.beforeClose) {\n          this.beforeClose({\n            position: position,\n            name: this.name,\n            instance: this\n          });\n        } else if (this.onClose) {\n          this.onClose(position, this, {\n            name: this.name\n          });\n        } else {\n          this.close(position);\n        }\n      }\n    },\n    getClickHandler: function getClickHandler(position, stop) {\n      var _this2 = this;\n\n      return function (event) {\n        if (stop) {\n          event.stopPropagation();\n        }\n\n        _this2.onClick(position);\n      };\n    },\n    genLeftPart: function genLeftPart() {\n      var h = this.$createElement;\n      var content = this.slots('left');\n\n      if (content) {\n        return h(\"div\", {\n          \"ref\": \"left\",\n          \"class\": bem('left'),\n          \"on\": {\n            \"click\": this.getClickHandler('left', true)\n          }\n        }, [content]);\n      }\n    },\n    genRightPart: function genRightPart() {\n      var h = this.$createElement;\n      var content = this.slots('right');\n\n      if (content) {\n        return h(\"div\", {\n          \"ref\": \"right\",\n          \"class\": bem('right'),\n          \"on\": {\n            \"click\": this.getClickHandler('right', true)\n          }\n        }, [content]);\n      }\n    }\n  },\n  render: function render() {\n    var h = arguments[0];\n    var wrapperStyle = {\n      transform: \"translate3d(\" + this.offset + \"px, 0, 0)\",\n      transitionDuration: this.dragging ? '0s' : '.6s'\n    };\n    return h(\"div\", {\n      \"class\": bem(),\n      \"on\": {\n        \"click\": this.getClickHandler('cell')\n      }\n    }, [h(\"div\", {\n      \"class\": bem('wrapper'),\n      \"style\": wrapperStyle\n    }, [this.genLeftPart(), this.slots(), this.genRightPart()])]);\n  }\n});"]},"metadata":{},"sourceType":"module"}