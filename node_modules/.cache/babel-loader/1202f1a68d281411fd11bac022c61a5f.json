{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\n// Utils\nimport { createNamespace } from '../../utils'; // Components\n\nimport Uploader from '../../uploader';\nvar namespace = createNamespace('sku-img-uploader');\nvar createComponent = namespace[0];\nvar t = namespace[2];\nexport default createComponent({\n  props: {\n    value: String,\n    uploadImg: Function,\n    customUpload: Function,\n    maxSize: {\n      type: Number,\n      default: 6\n    }\n  },\n  data: function data() {\n    return {\n      fileList: []\n    };\n  },\n  watch: {\n    value: function value(val) {\n      if (val) {\n        this.fileList = [{\n          url: val,\n          isImage: true\n        }];\n      } else {\n        this.fileList = [];\n      }\n    }\n  },\n  methods: {\n    afterReadFile: function afterReadFile(file) {\n      var _this = this;\n\n      file.status = 'uploading';\n      file.message = t('uploading');\n      this.uploadImg(file.file, file.content).then(function (img) {\n        file.status = 'done';\n\n        _this.$emit('input', img);\n      }).catch(function () {\n        file.status = 'failed';\n        file.message = t('fail');\n      });\n    },\n    onOversize: function onOversize() {\n      this.$toast(t('oversize', this.maxSize));\n    },\n    onDelete: function onDelete() {\n      this.$emit('input', '');\n    },\n    onClickUpload: function onClickUpload() {\n      var _this2 = this;\n\n      if (this.customUpload) {\n        this.customUpload().then(function (url) {\n          _this2.fileList.push({\n            url: url\n          });\n\n          _this2.$emit('input', url);\n        });\n      }\n    }\n  },\n  render: function render() {\n    var _this3 = this;\n\n    var h = arguments[0];\n    return h(Uploader, {\n      \"attrs\": {\n        \"maxCount\": 1,\n        \"readonly\": !!this.customUpload,\n        \"maxSize\": this.maxSize * 1024 * 1024,\n        \"afterRead\": this.afterReadFile\n      },\n      \"on\": {\n        \"oversize\": this.onOversize,\n        \"delete\": this.onDelete,\n        \"click-upload\": this.onClickUpload\n      },\n      \"model\": {\n        value: _this3.fileList,\n        callback: function callback($$v) {\n          _this3.fileList = $$v;\n        }\n      }\n    });\n  }\n});","map":{"version":3,"sources":["C:/Users/Lisp/Desktop/items/node_modules/vant/es/sku/components/SkuImgUploader.js"],"names":["createNamespace","Uploader","namespace","createComponent","t","props","value","String","uploadImg","Function","customUpload","maxSize","type","Number","default","data","fileList","watch","val","url","isImage","methods","afterReadFile","file","_this","status","message","content","then","img","$emit","catch","onOversize","$toast","onDelete","onClickUpload","_this2","push","render","_this3","h","arguments","callback","$$v"],"mappings":"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","sourcesContent":["// Utils\nimport { createNamespace } from '../../utils'; // Components\n\nimport Uploader from '../../uploader';\nvar namespace = createNamespace('sku-img-uploader');\nvar createComponent = namespace[0];\nvar t = namespace[2];\nexport default createComponent({\n  props: {\n    value: String,\n    uploadImg: Function,\n    customUpload: Function,\n    maxSize: {\n      type: Number,\n      default: 6\n    }\n  },\n  data: function data() {\n    return {\n      fileList: []\n    };\n  },\n  watch: {\n    value: function value(val) {\n      if (val) {\n        this.fileList = [{\n          url: val,\n          isImage: true\n        }];\n      } else {\n        this.fileList = [];\n      }\n    }\n  },\n  methods: {\n    afterReadFile: function afterReadFile(file) {\n      var _this = this;\n\n      file.status = 'uploading';\n      file.message = t('uploading');\n      this.uploadImg(file.file, file.content).then(function (img) {\n        file.status = 'done';\n\n        _this.$emit('input', img);\n      }).catch(function () {\n        file.status = 'failed';\n        file.message = t('fail');\n      });\n    },\n    onOversize: function onOversize() {\n      this.$toast(t('oversize', this.maxSize));\n    },\n    onDelete: function onDelete() {\n      this.$emit('input', '');\n    },\n    onClickUpload: function onClickUpload() {\n      var _this2 = this;\n\n      if (this.customUpload) {\n        this.customUpload().then(function (url) {\n          _this2.fileList.push({\n            url: url\n          });\n\n          _this2.$emit('input', url);\n        });\n      }\n    }\n  },\n  render: function render() {\n    var _this3 = this;\n\n    var h = arguments[0];\n    return h(Uploader, {\n      \"attrs\": {\n        \"maxCount\": 1,\n        \"readonly\": !!this.customUpload,\n        \"maxSize\": this.maxSize * 1024 * 1024,\n        \"afterRead\": this.afterReadFile\n      },\n      \"on\": {\n        \"oversize\": this.onOversize,\n        \"delete\": this.onDelete,\n        \"click-upload\": this.onClickUpload\n      },\n      \"model\": {\n        value: _this3.fileList,\n        callback: function callback($$v) {\n          _this3.fileList = $$v;\n        }\n      }\n    });\n  }\n});"]},"metadata":{},"sourceType":"module"}