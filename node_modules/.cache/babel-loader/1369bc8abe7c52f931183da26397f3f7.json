{"ast":null,"code":"function getElement(selector) {\n  if (typeof selector === 'string') {\n    return document.querySelector(selector);\n  }\n\n  return selector();\n}\n\nexport function PortalMixin(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      ref = _ref.ref,\n      afterPortal = _ref.afterPortal;\n\n  return {\n    props: {\n      getContainer: [String, Function]\n    },\n    watch: {\n      getContainer: 'portal'\n    },\n    mounted: function mounted() {\n      if (this.getContainer) {\n        this.portal();\n      }\n    },\n    methods: {\n      portal: function portal() {\n        var getContainer = this.getContainer;\n        var el = ref ? this.$refs[ref] : this.$el;\n        var container;\n\n        if (getContainer) {\n          container = getElement(getContainer);\n        } else if (this.$parent) {\n          container = this.$parent.$el;\n        }\n\n        if (container && container !== el.parentNode) {\n          container.appendChild(el);\n        }\n\n        if (afterPortal) {\n          afterPortal.call(this);\n        }\n      }\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/Lisp/Desktop/items/node_modules/vant/es/mixins/portal.js"],"names":["getElement","selector","document","querySelector","PortalMixin","_temp","_ref","ref","afterPortal","props","getContainer","String","Function","watch","mounted","portal","methods","el","$refs","$el","container","$parent","parentNode","appendChild","call"],"mappings":"AAAA,SAASA,UAAT,CAAoBC,QAApB,EAA8B;AAC5B,MAAI,OAAOA,QAAP,KAAoB,QAAxB,EAAkC;AAChC,WAAOC,QAAQ,CAACC,aAAT,CAAuBF,QAAvB,CAAP;AACD;;AAED,SAAOA,QAAQ,EAAf;AACD;;AAED,OAAO,SAASG,WAAT,CAAqBC,KAArB,EAA4B;AACjC,MAAIC,IAAI,GAAGD,KAAK,KAAK,KAAK,CAAf,GAAmB,EAAnB,GAAwBA,KAAnC;AAAA,MACIE,GAAG,GAAGD,IAAI,CAACC,GADf;AAAA,MAEIC,WAAW,GAAGF,IAAI,CAACE,WAFvB;;AAIA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLC,MAAAA,YAAY,EAAE,CAACC,MAAD,EAASC,QAAT;AADT,KADF;AAILC,IAAAA,KAAK,EAAE;AACLH,MAAAA,YAAY,EAAE;AADT,KAJF;AAOLI,IAAAA,OAAO,EAAE,SAASA,OAAT,GAAmB;AAC1B,UAAI,KAAKJ,YAAT,EAAuB;AACrB,aAAKK,MAAL;AACD;AACF,KAXI;AAYLC,IAAAA,OAAO,EAAE;AACPD,MAAAA,MAAM,EAAE,SAASA,MAAT,GAAkB;AACxB,YAAIL,YAAY,GAAG,KAAKA,YAAxB;AACA,YAAIO,EAAE,GAAGV,GAAG,GAAG,KAAKW,KAAL,CAAWX,GAAX,CAAH,GAAqB,KAAKY,GAAtC;AACA,YAAIC,SAAJ;;AAEA,YAAIV,YAAJ,EAAkB;AAChBU,UAAAA,SAAS,GAAGpB,UAAU,CAACU,YAAD,CAAtB;AACD,SAFD,MAEO,IAAI,KAAKW,OAAT,EAAkB;AACvBD,UAAAA,SAAS,GAAG,KAAKC,OAAL,CAAaF,GAAzB;AACD;;AAED,YAAIC,SAAS,IAAIA,SAAS,KAAKH,EAAE,CAACK,UAAlC,EAA8C;AAC5CF,UAAAA,SAAS,CAACG,WAAV,CAAsBN,EAAtB;AACD;;AAED,YAAIT,WAAJ,EAAiB;AACfA,UAAAA,WAAW,CAACgB,IAAZ,CAAiB,IAAjB;AACD;AACF;AAnBM;AAZJ,GAAP;AAkCD","sourcesContent":["function getElement(selector) {\n  if (typeof selector === 'string') {\n    return document.querySelector(selector);\n  }\n\n  return selector();\n}\n\nexport function PortalMixin(_temp) {\n  var _ref = _temp === void 0 ? {} : _temp,\n      ref = _ref.ref,\n      afterPortal = _ref.afterPortal;\n\n  return {\n    props: {\n      getContainer: [String, Function]\n    },\n    watch: {\n      getContainer: 'portal'\n    },\n    mounted: function mounted() {\n      if (this.getContainer) {\n        this.portal();\n      }\n    },\n    methods: {\n      portal: function portal() {\n        var getContainer = this.getContainer;\n        var el = ref ? this.$refs[ref] : this.$el;\n        var container;\n\n        if (getContainer) {\n          container = getElement(getContainer);\n        } else if (this.$parent) {\n          container = this.$parent.$el;\n        }\n\n        if (container && container !== el.parentNode) {\n          container.appendChild(el);\n        }\n\n        if (afterPortal) {\n          afterPortal.call(this);\n        }\n      }\n    }\n  };\n}"]},"metadata":{},"sourceType":"module"}