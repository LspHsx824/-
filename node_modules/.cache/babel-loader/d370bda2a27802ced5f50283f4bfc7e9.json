{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.number.is-nan.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nexport function isNumeric(val) {\n  return /^\\d+(\\.\\d+)?$/.test(val);\n}\nexport function isNaN(val) {\n  if (Number.isNaN) {\n    return Number.isNaN(val);\n  } // eslint-disable-next-line no-self-compare\n\n\n  return val !== val;\n}","map":{"version":3,"sources":["C:/Users/Lisp/Desktop/items/node_modules/vant/es/utils/validate/number.js"],"names":["isNumeric","val","test","isNaN","Number"],"mappings":";;;;AAAA,OAAO,SAASA,SAAT,CAAmBC,GAAnB,EAAwB;AAC7B,SAAO,gBAAgBC,IAAhB,CAAqBD,GAArB,CAAP;AACD;AACD,OAAO,SAASE,KAAT,CAAeF,GAAf,EAAoB;AACzB,MAAIG,MAAM,CAACD,KAAX,EAAkB;AAChB,WAAOC,MAAM,CAACD,KAAP,CAAaF,GAAb,CAAP;AACD,GAHwB,CAGvB;;;AAGF,SAAOA,GAAG,KAAKA,GAAf;AACD","sourcesContent":["export function isNumeric(val) {\n  return /^\\d+(\\.\\d+)?$/.test(val);\n}\nexport function isNaN(val) {\n  if (Number.isNaN) {\n    return Number.isNaN(val);\n  } // eslint-disable-next-line no-self-compare\n\n\n  return val !== val;\n}"]},"metadata":{},"sourceType":"module"}