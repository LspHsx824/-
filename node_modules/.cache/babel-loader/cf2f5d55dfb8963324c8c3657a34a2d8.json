{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.json.stringify.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createNamespace } from '../utils';\nimport { pickerProps } from '../picker/shared';\nimport Picker from '../picker';\n\nvar _createNamespace = createNamespace('area'),\n    createComponent = _createNamespace[0],\n    bem = _createNamespace[1];\n\nvar PLACEHOLDER_CODE = '000000';\n\nfunction isOverseaCode(code) {\n  return code[0] === '9';\n}\n\nfunction pickSlots(instance, keys) {\n  var $slots = instance.$slots,\n      $scopedSlots = instance.$scopedSlots;\n  var scopedSlots = {};\n  keys.forEach(function (key) {\n    if ($scopedSlots[key]) {\n      scopedSlots[key] = $scopedSlots[key];\n    } else if ($slots[key]) {\n      scopedSlots[key] = function () {\n        return $slots[key];\n      };\n    }\n  });\n  return scopedSlots;\n}\n\nexport default createComponent({\n  props: _extends({}, pickerProps, {\n    value: String,\n    areaList: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    columnsNum: {\n      type: [Number, String],\n      default: 3\n    },\n    isOverseaCode: {\n      type: Function,\n      default: isOverseaCode\n    },\n    columnsPlaceholder: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    }\n  }),\n  data: function data() {\n    return {\n      code: this.value,\n      columns: [{\n        values: []\n      }, {\n        values: []\n      }, {\n        values: []\n      }]\n    };\n  },\n  computed: {\n    province: function province() {\n      return this.areaList.province_list || {};\n    },\n    city: function city() {\n      return this.areaList.city_list || {};\n    },\n    county: function county() {\n      return this.areaList.county_list || {};\n    },\n    displayColumns: function displayColumns() {\n      return this.columns.slice(0, +this.columnsNum);\n    },\n    placeholderMap: function placeholderMap() {\n      return {\n        province: this.columnsPlaceholder[0] || '',\n        city: this.columnsPlaceholder[1] || '',\n        county: this.columnsPlaceholder[2] || ''\n      };\n    }\n  },\n  watch: {\n    value: function value(val) {\n      this.code = val;\n      this.setValues();\n    },\n    areaList: {\n      deep: true,\n      handler: 'setValues'\n    },\n    columnsNum: function columnsNum() {\n      var _this = this;\n\n      this.$nextTick(function () {\n        _this.setValues();\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.setValues();\n  },\n  methods: {\n    // get list by code\n    getList: function getList(type, code) {\n      var result = [];\n\n      if (type !== 'province' && !code) {\n        return result;\n      }\n\n      var list = this[type];\n      result = Object.keys(list).map(function (listCode) {\n        return {\n          code: listCode,\n          name: list[listCode]\n        };\n      });\n\n      if (code) {\n        // oversea code\n        if (this.isOverseaCode(code) && type === 'city') {\n          code = '9';\n        }\n\n        result = result.filter(function (item) {\n          return item.code.indexOf(code) === 0;\n        });\n      }\n\n      if (this.placeholderMap[type] && result.length) {\n        // set columns placeholder\n        var codeFill = '';\n\n        if (type === 'city') {\n          codeFill = PLACEHOLDER_CODE.slice(2, 4);\n        } else if (type === 'county') {\n          codeFill = PLACEHOLDER_CODE.slice(4, 6);\n        }\n\n        result.unshift({\n          code: \"\" + code + codeFill,\n          name: this.placeholderMap[type]\n        });\n      }\n\n      return result;\n    },\n    // get index by code\n    getIndex: function getIndex(type, code) {\n      var compareNum = type === 'province' ? 2 : type === 'city' ? 4 : 6;\n      var list = this.getList(type, code.slice(0, compareNum - 2)); // oversea code\n\n      if (this.isOverseaCode(code) && type === 'province') {\n        compareNum = 1;\n      }\n\n      code = code.slice(0, compareNum);\n\n      for (var i = 0; i < list.length; i++) {\n        if (list[i].code.slice(0, compareNum) === code) {\n          return i;\n        }\n      }\n\n      return 0;\n    },\n    // parse output columns data\n    parseOutputValues: function parseOutputValues(values) {\n      var _this2 = this;\n\n      return values.map(function (value, index) {\n        // save undefined value\n        if (!value) return value;\n        value = JSON.parse(JSON.stringify(value));\n\n        if (!value.code || value.name === _this2.columnsPlaceholder[index]) {\n          value.code = '';\n          value.name = '';\n        }\n\n        return value;\n      });\n    },\n    onChange: function onChange(picker, values, index) {\n      this.code = values[index].code;\n      this.setValues();\n      var parsedValues = this.parseOutputValues(picker.getValues());\n      this.$emit('change', picker, parsedValues, index);\n    },\n    onConfirm: function onConfirm(values, index) {\n      values = this.parseOutputValues(values);\n      this.setValues();\n      this.$emit('confirm', values, index);\n    },\n    getDefaultCode: function getDefaultCode() {\n      if (this.columnsPlaceholder.length) {\n        return PLACEHOLDER_CODE;\n      }\n\n      var countyCodes = Object.keys(this.county);\n\n      if (countyCodes[0]) {\n        return countyCodes[0];\n      }\n\n      var cityCodes = Object.keys(this.city);\n\n      if (cityCodes[0]) {\n        return cityCodes[0];\n      }\n\n      return '';\n    },\n    setValues: function setValues() {\n      var code = this.code;\n\n      if (!code) {\n        code = this.getDefaultCode();\n      }\n\n      var picker = this.$refs.picker;\n      var province = this.getList('province');\n      var city = this.getList('city', code.slice(0, 2));\n\n      if (!picker) {\n        return;\n      }\n\n      picker.setColumnValues(0, province);\n      picker.setColumnValues(1, city);\n\n      if (city.length && code.slice(2, 4) === '00' && !this.isOverseaCode(code)) {\n        code = city[0].code;\n      }\n\n      picker.setColumnValues(2, this.getList('county', code.slice(0, 4)));\n      picker.setIndexes([this.getIndex('province', code), this.getIndex('city', code), this.getIndex('county', code)]);\n    },\n    getValues: function getValues() {\n      var picker = this.$refs.picker;\n      var getValues = picker ? picker.getValues().filter(function (value) {\n        return !!value;\n      }) : [];\n      getValues = this.parseOutputValues(getValues);\n      return getValues;\n    },\n    getArea: function getArea() {\n      var values = this.getValues();\n      var area = {\n        code: '',\n        country: '',\n        province: '',\n        city: '',\n        county: ''\n      };\n\n      if (!values.length) {\n        return area;\n      }\n\n      var names = values.map(function (item) {\n        return item.name;\n      });\n      var validValues = values.filter(function (value) {\n        return !!value.code;\n      });\n      area.code = validValues.length ? validValues[validValues.length - 1].code : '';\n\n      if (this.isOverseaCode(area.code)) {\n        area.country = names[1] || '';\n        area.province = names[2] || '';\n      } else {\n        area.province = names[0] || '';\n        area.city = names[1] || '';\n        area.county = names[2] || '';\n      }\n\n      return area;\n    },\n    // @exposed-api\n    reset: function reset(code) {\n      this.code = code || '';\n      this.setValues();\n    }\n  },\n  render: function render() {\n    var h = arguments[0];\n\n    var on = _extends({}, this.$listeners, {\n      change: this.onChange,\n      confirm: this.onConfirm\n    });\n\n    return h(Picker, {\n      \"ref\": \"picker\",\n      \"class\": bem(),\n      \"attrs\": {\n        \"showToolbar\": true,\n        \"valueKey\": \"name\",\n        \"title\": this.title,\n        \"columns\": this.displayColumns,\n        \"loading\": this.loading,\n        \"readonly\": this.readonly,\n        \"itemHeight\": this.itemHeight,\n        \"swipeDuration\": this.swipeDuration,\n        \"visibleItemCount\": this.visibleItemCount,\n        \"cancelButtonText\": this.cancelButtonText,\n        \"confirmButtonText\": this.confirmButtonText\n      },\n      \"scopedSlots\": pickSlots(this, ['title', 'columns-top', 'columns-bottom']),\n      \"on\": _extends({}, on)\n    });\n  }\n});","map":{"version":3,"sources":["C:/Users/Lisp/Desktop/items/node_modules/vant/es/area/index.js"],"names":["_extends","createNamespace","pickerProps","Picker","_createNamespace","createComponent","bem","PLACEHOLDER_CODE","isOverseaCode","code","pickSlots","instance","keys","$slots","$scopedSlots","scopedSlots","forEach","key","props","value","String","areaList","type","Object","default","_default","columnsNum","Number","Function","columnsPlaceholder","Array","data","columns","values","computed","province","province_list","city","city_list","county","county_list","displayColumns","slice","placeholderMap","watch","val","setValues","deep","handler","_this","$nextTick","mounted","methods","getList","result","list","map","listCode","name","filter","item","indexOf","length","codeFill","unshift","getIndex","compareNum","i","parseOutputValues","_this2","index","JSON","parse","stringify","onChange","picker","parsedValues","getValues","$emit","onConfirm","getDefaultCode","countyCodes","cityCodes","$refs","setColumnValues","setIndexes","getArea","area","country","names","validValues","reset","render","h","arguments","on","$listeners","change","confirm","title","loading","readonly","itemHeight","swipeDuration","visibleItemCount","cancelButtonText","confirmButtonText"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { createNamespace } from '../utils';\nimport { pickerProps } from '../picker/shared';\nimport Picker from '../picker';\n\nvar _createNamespace = createNamespace('area'),\n    createComponent = _createNamespace[0],\n    bem = _createNamespace[1];\n\nvar PLACEHOLDER_CODE = '000000';\n\nfunction isOverseaCode(code) {\n  return code[0] === '9';\n}\n\nfunction pickSlots(instance, keys) {\n  var $slots = instance.$slots,\n      $scopedSlots = instance.$scopedSlots;\n  var scopedSlots = {};\n  keys.forEach(function (key) {\n    if ($scopedSlots[key]) {\n      scopedSlots[key] = $scopedSlots[key];\n    } else if ($slots[key]) {\n      scopedSlots[key] = function () {\n        return $slots[key];\n      };\n    }\n  });\n  return scopedSlots;\n}\n\nexport default createComponent({\n  props: _extends({}, pickerProps, {\n    value: String,\n    areaList: {\n      type: Object,\n      default: function _default() {\n        return {};\n      }\n    },\n    columnsNum: {\n      type: [Number, String],\n      default: 3\n    },\n    isOverseaCode: {\n      type: Function,\n      default: isOverseaCode\n    },\n    columnsPlaceholder: {\n      type: Array,\n      default: function _default() {\n        return [];\n      }\n    }\n  }),\n  data: function data() {\n    return {\n      code: this.value,\n      columns: [{\n        values: []\n      }, {\n        values: []\n      }, {\n        values: []\n      }]\n    };\n  },\n  computed: {\n    province: function province() {\n      return this.areaList.province_list || {};\n    },\n    city: function city() {\n      return this.areaList.city_list || {};\n    },\n    county: function county() {\n      return this.areaList.county_list || {};\n    },\n    displayColumns: function displayColumns() {\n      return this.columns.slice(0, +this.columnsNum);\n    },\n    placeholderMap: function placeholderMap() {\n      return {\n        province: this.columnsPlaceholder[0] || '',\n        city: this.columnsPlaceholder[1] || '',\n        county: this.columnsPlaceholder[2] || ''\n      };\n    }\n  },\n  watch: {\n    value: function value(val) {\n      this.code = val;\n      this.setValues();\n    },\n    areaList: {\n      deep: true,\n      handler: 'setValues'\n    },\n    columnsNum: function columnsNum() {\n      var _this = this;\n\n      this.$nextTick(function () {\n        _this.setValues();\n      });\n    }\n  },\n  mounted: function mounted() {\n    this.setValues();\n  },\n  methods: {\n    // get list by code\n    getList: function getList(type, code) {\n      var result = [];\n\n      if (type !== 'province' && !code) {\n        return result;\n      }\n\n      var list = this[type];\n      result = Object.keys(list).map(function (listCode) {\n        return {\n          code: listCode,\n          name: list[listCode]\n        };\n      });\n\n      if (code) {\n        // oversea code\n        if (this.isOverseaCode(code) && type === 'city') {\n          code = '9';\n        }\n\n        result = result.filter(function (item) {\n          return item.code.indexOf(code) === 0;\n        });\n      }\n\n      if (this.placeholderMap[type] && result.length) {\n        // set columns placeholder\n        var codeFill = '';\n\n        if (type === 'city') {\n          codeFill = PLACEHOLDER_CODE.slice(2, 4);\n        } else if (type === 'county') {\n          codeFill = PLACEHOLDER_CODE.slice(4, 6);\n        }\n\n        result.unshift({\n          code: \"\" + code + codeFill,\n          name: this.placeholderMap[type]\n        });\n      }\n\n      return result;\n    },\n    // get index by code\n    getIndex: function getIndex(type, code) {\n      var compareNum = type === 'province' ? 2 : type === 'city' ? 4 : 6;\n      var list = this.getList(type, code.slice(0, compareNum - 2)); // oversea code\n\n      if (this.isOverseaCode(code) && type === 'province') {\n        compareNum = 1;\n      }\n\n      code = code.slice(0, compareNum);\n\n      for (var i = 0; i < list.length; i++) {\n        if (list[i].code.slice(0, compareNum) === code) {\n          return i;\n        }\n      }\n\n      return 0;\n    },\n    // parse output columns data\n    parseOutputValues: function parseOutputValues(values) {\n      var _this2 = this;\n\n      return values.map(function (value, index) {\n        // save undefined value\n        if (!value) return value;\n        value = JSON.parse(JSON.stringify(value));\n\n        if (!value.code || value.name === _this2.columnsPlaceholder[index]) {\n          value.code = '';\n          value.name = '';\n        }\n\n        return value;\n      });\n    },\n    onChange: function onChange(picker, values, index) {\n      this.code = values[index].code;\n      this.setValues();\n      var parsedValues = this.parseOutputValues(picker.getValues());\n      this.$emit('change', picker, parsedValues, index);\n    },\n    onConfirm: function onConfirm(values, index) {\n      values = this.parseOutputValues(values);\n      this.setValues();\n      this.$emit('confirm', values, index);\n    },\n    getDefaultCode: function getDefaultCode() {\n      if (this.columnsPlaceholder.length) {\n        return PLACEHOLDER_CODE;\n      }\n\n      var countyCodes = Object.keys(this.county);\n\n      if (countyCodes[0]) {\n        return countyCodes[0];\n      }\n\n      var cityCodes = Object.keys(this.city);\n\n      if (cityCodes[0]) {\n        return cityCodes[0];\n      }\n\n      return '';\n    },\n    setValues: function setValues() {\n      var code = this.code;\n\n      if (!code) {\n        code = this.getDefaultCode();\n      }\n\n      var picker = this.$refs.picker;\n      var province = this.getList('province');\n      var city = this.getList('city', code.slice(0, 2));\n\n      if (!picker) {\n        return;\n      }\n\n      picker.setColumnValues(0, province);\n      picker.setColumnValues(1, city);\n\n      if (city.length && code.slice(2, 4) === '00' && !this.isOverseaCode(code)) {\n        code = city[0].code;\n      }\n\n      picker.setColumnValues(2, this.getList('county', code.slice(0, 4)));\n      picker.setIndexes([this.getIndex('province', code), this.getIndex('city', code), this.getIndex('county', code)]);\n    },\n    getValues: function getValues() {\n      var picker = this.$refs.picker;\n      var getValues = picker ? picker.getValues().filter(function (value) {\n        return !!value;\n      }) : [];\n      getValues = this.parseOutputValues(getValues);\n      return getValues;\n    },\n    getArea: function getArea() {\n      var values = this.getValues();\n      var area = {\n        code: '',\n        country: '',\n        province: '',\n        city: '',\n        county: ''\n      };\n\n      if (!values.length) {\n        return area;\n      }\n\n      var names = values.map(function (item) {\n        return item.name;\n      });\n      var validValues = values.filter(function (value) {\n        return !!value.code;\n      });\n      area.code = validValues.length ? validValues[validValues.length - 1].code : '';\n\n      if (this.isOverseaCode(area.code)) {\n        area.country = names[1] || '';\n        area.province = names[2] || '';\n      } else {\n        area.province = names[0] || '';\n        area.city = names[1] || '';\n        area.county = names[2] || '';\n      }\n\n      return area;\n    },\n    // @exposed-api\n    reset: function reset(code) {\n      this.code = code || '';\n      this.setValues();\n    }\n  },\n  render: function render() {\n    var h = arguments[0];\n\n    var on = _extends({}, this.$listeners, {\n      change: this.onChange,\n      confirm: this.onConfirm\n    });\n\n    return h(Picker, {\n      \"ref\": \"picker\",\n      \"class\": bem(),\n      \"attrs\": {\n        \"showToolbar\": true,\n        \"valueKey\": \"name\",\n        \"title\": this.title,\n        \"columns\": this.displayColumns,\n        \"loading\": this.loading,\n        \"readonly\": this.readonly,\n        \"itemHeight\": this.itemHeight,\n        \"swipeDuration\": this.swipeDuration,\n        \"visibleItemCount\": this.visibleItemCount,\n        \"cancelButtonText\": this.cancelButtonText,\n        \"confirmButtonText\": this.confirmButtonText\n      },\n      \"scopedSlots\": pickSlots(this, ['title', 'columns-top', 'columns-bottom']),\n      \"on\": _extends({}, on)\n    });\n  }\n});"]},"metadata":{},"sourceType":"module"}