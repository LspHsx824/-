{"ast":null,"code":"import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport Vue from 'vue';\nimport VanNotify from './Notify';\nimport { isObject, isServer } from '../utils';\nimport { mount } from '../utils/functional';\nvar timer;\nvar instance;\n\nfunction parseOptions(message) {\n  return isObject(message) ? message : {\n    message: message\n  };\n}\n\nfunction Notify(options) {\n  /* istanbul ignore if */\n  if (isServer) {\n    return;\n  }\n\n  if (!instance) {\n    instance = mount(VanNotify, {\n      on: {\n        click: function click(event) {\n          if (instance.onClick) {\n            instance.onClick(event);\n          }\n        },\n        close: function close() {\n          if (instance.onClose) {\n            instance.onClose();\n          }\n        },\n        opened: function opened() {\n          if (instance.onOpened) {\n            instance.onOpened();\n          }\n        }\n      }\n    });\n  }\n\n  options = _extends({}, Notify.currentOptions, parseOptions(options));\n\n  _extends(instance, options);\n\n  clearTimeout(timer);\n\n  if (options.duration && options.duration > 0) {\n    timer = setTimeout(Notify.clear, options.duration);\n  }\n\n  return instance;\n}\n\nfunction defaultOptions() {\n  return {\n    type: 'danger',\n    value: true,\n    message: '',\n    color: undefined,\n    background: undefined,\n    duration: 3000,\n    className: '',\n    onClose: null,\n    onClick: null,\n    onOpened: null\n  };\n}\n\nNotify.clear = function () {\n  if (instance) {\n    instance.value = false;\n  }\n};\n\nNotify.currentOptions = defaultOptions();\n\nNotify.setDefaultOptions = function (options) {\n  _extends(Notify.currentOptions, options);\n};\n\nNotify.resetDefaultOptions = function () {\n  Notify.currentOptions = defaultOptions();\n};\n\nNotify.install = function () {\n  Vue.use(VanNotify);\n};\n\nNotify.Component = VanNotify;\nVue.prototype.$notify = Notify;\nexport default Notify;","map":{"version":3,"sources":["C:/Users/Lisp/Desktop/Vue-app/items/node_modules/vant/es/notify/index.js"],"names":["_extends","Vue","VanNotify","isObject","isServer","mount","timer","instance","parseOptions","message","Notify","options","on","click","event","onClick","close","onClose","opened","onOpened","currentOptions","clearTimeout","duration","setTimeout","clear","defaultOptions","type","value","color","undefined","background","className","setDefaultOptions","resetDefaultOptions","install","use","Component","prototype","$notify"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAOC,GAAP,MAAgB,KAAhB;AACA,OAAOC,SAAP,MAAsB,UAAtB;AACA,SAASC,QAAT,EAAmBC,QAAnB,QAAmC,UAAnC;AACA,SAASC,KAAT,QAAsB,qBAAtB;AACA,IAAIC,KAAJ;AACA,IAAIC,QAAJ;;AAEA,SAASC,YAAT,CAAsBC,OAAtB,EAA+B;AAC7B,SAAON,QAAQ,CAACM,OAAD,CAAR,GAAoBA,OAApB,GAA8B;AACnCA,IAAAA,OAAO,EAAEA;AAD0B,GAArC;AAGD;;AAED,SAASC,MAAT,CAAgBC,OAAhB,EAAyB;AACvB;AACA,MAAIP,QAAJ,EAAc;AACZ;AACD;;AAED,MAAI,CAACG,QAAL,EAAe;AACbA,IAAAA,QAAQ,GAAGF,KAAK,CAACH,SAAD,EAAY;AAC1BU,MAAAA,EAAE,EAAE;AACFC,QAAAA,KAAK,EAAE,SAASA,KAAT,CAAeC,KAAf,EAAsB;AAC3B,cAAIP,QAAQ,CAACQ,OAAb,EAAsB;AACpBR,YAAAA,QAAQ,CAACQ,OAAT,CAAiBD,KAAjB;AACD;AACF,SALC;AAMFE,QAAAA,KAAK,EAAE,SAASA,KAAT,GAAiB;AACtB,cAAIT,QAAQ,CAACU,OAAb,EAAsB;AACpBV,YAAAA,QAAQ,CAACU,OAAT;AACD;AACF,SAVC;AAWFC,QAAAA,MAAM,EAAE,SAASA,MAAT,GAAkB;AACxB,cAAIX,QAAQ,CAACY,QAAb,EAAuB;AACrBZ,YAAAA,QAAQ,CAACY,QAAT;AACD;AACF;AAfC;AADsB,KAAZ,CAAhB;AAmBD;;AAEDR,EAAAA,OAAO,GAAGX,QAAQ,CAAC,EAAD,EAAKU,MAAM,CAACU,cAAZ,EAA4BZ,YAAY,CAACG,OAAD,CAAxC,CAAlB;;AAEAX,EAAAA,QAAQ,CAACO,QAAD,EAAWI,OAAX,CAAR;;AAEAU,EAAAA,YAAY,CAACf,KAAD,CAAZ;;AAEA,MAAIK,OAAO,CAACW,QAAR,IAAoBX,OAAO,CAACW,QAAR,GAAmB,CAA3C,EAA8C;AAC5ChB,IAAAA,KAAK,GAAGiB,UAAU,CAACb,MAAM,CAACc,KAAR,EAAeb,OAAO,CAACW,QAAvB,CAAlB;AACD;;AAED,SAAOf,QAAP;AACD;;AAED,SAASkB,cAAT,GAA0B;AACxB,SAAO;AACLC,IAAAA,IAAI,EAAE,QADD;AAELC,IAAAA,KAAK,EAAE,IAFF;AAGLlB,IAAAA,OAAO,EAAE,EAHJ;AAILmB,IAAAA,KAAK,EAAEC,SAJF;AAKLC,IAAAA,UAAU,EAAED,SALP;AAMLP,IAAAA,QAAQ,EAAE,IANL;AAOLS,IAAAA,SAAS,EAAE,EAPN;AAQLd,IAAAA,OAAO,EAAE,IARJ;AASLF,IAAAA,OAAO,EAAE,IATJ;AAULI,IAAAA,QAAQ,EAAE;AAVL,GAAP;AAYD;;AAEDT,MAAM,CAACc,KAAP,GAAe,YAAY;AACzB,MAAIjB,QAAJ,EAAc;AACZA,IAAAA,QAAQ,CAACoB,KAAT,GAAiB,KAAjB;AACD;AACF,CAJD;;AAMAjB,MAAM,CAACU,cAAP,GAAwBK,cAAc,EAAtC;;AAEAf,MAAM,CAACsB,iBAAP,GAA2B,UAAUrB,OAAV,EAAmB;AAC5CX,EAAAA,QAAQ,CAACU,MAAM,CAACU,cAAR,EAAwBT,OAAxB,CAAR;AACD,CAFD;;AAIAD,MAAM,CAACuB,mBAAP,GAA6B,YAAY;AACvCvB,EAAAA,MAAM,CAACU,cAAP,GAAwBK,cAAc,EAAtC;AACD,CAFD;;AAIAf,MAAM,CAACwB,OAAP,GAAiB,YAAY;AAC3BjC,EAAAA,GAAG,CAACkC,GAAJ,CAAQjC,SAAR;AACD,CAFD;;AAIAQ,MAAM,CAAC0B,SAAP,GAAmBlC,SAAnB;AACAD,GAAG,CAACoC,SAAJ,CAAcC,OAAd,GAAwB5B,MAAxB;AACA,eAAeA,MAAf","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport Vue from 'vue';\nimport VanNotify from './Notify';\nimport { isObject, isServer } from '../utils';\nimport { mount } from '../utils/functional';\nvar timer;\nvar instance;\n\nfunction parseOptions(message) {\n  return isObject(message) ? message : {\n    message: message\n  };\n}\n\nfunction Notify(options) {\n  /* istanbul ignore if */\n  if (isServer) {\n    return;\n  }\n\n  if (!instance) {\n    instance = mount(VanNotify, {\n      on: {\n        click: function click(event) {\n          if (instance.onClick) {\n            instance.onClick(event);\n          }\n        },\n        close: function close() {\n          if (instance.onClose) {\n            instance.onClose();\n          }\n        },\n        opened: function opened() {\n          if (instance.onOpened) {\n            instance.onOpened();\n          }\n        }\n      }\n    });\n  }\n\n  options = _extends({}, Notify.currentOptions, parseOptions(options));\n\n  _extends(instance, options);\n\n  clearTimeout(timer);\n\n  if (options.duration && options.duration > 0) {\n    timer = setTimeout(Notify.clear, options.duration);\n  }\n\n  return instance;\n}\n\nfunction defaultOptions() {\n  return {\n    type: 'danger',\n    value: true,\n    message: '',\n    color: undefined,\n    background: undefined,\n    duration: 3000,\n    className: '',\n    onClose: null,\n    onClick: null,\n    onOpened: null\n  };\n}\n\nNotify.clear = function () {\n  if (instance) {\n    instance.value = false;\n  }\n};\n\nNotify.currentOptions = defaultOptions();\n\nNotify.setDefaultOptions = function (options) {\n  _extends(Notify.currentOptions, options);\n};\n\nNotify.resetDefaultOptions = function () {\n  Notify.currentOptions = defaultOptions();\n};\n\nNotify.install = function () {\n  Vue.use(VanNotify);\n};\n\nNotify.Component = VanNotify;\nVue.prototype.$notify = Notify;\nexport default Notify;"]},"metadata":{},"sourceType":"module"}