{"ast":null,"code":"import \"core-js/modules/es.array.map.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.array.splice.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport _mergeJSXProps from \"@vue/babel-helper-vue-jsx-merge-props\"; // Utils\n\nimport { createNamespace, addUnit } from '../utils';\nimport { emit, inherit } from '../utils/functional'; // Components\n\nimport Icon from '../icon';\nimport Sidebar from '../sidebar';\nimport SidebarItem from '../sidebar-item'; // Types\n\nvar _createNamespace = createNamespace('tree-select'),\n    createComponent = _createNamespace[0],\n    bem = _createNamespace[1];\n\nfunction TreeSelect(h, props, slots, ctx) {\n  var items = props.items,\n      height = props.height,\n      activeId = props.activeId,\n      selectedIcon = props.selectedIcon,\n      mainActiveIndex = props.mainActiveIndex;\n\n  if (process.env.NODE_ENV === 'development') {\n    if (ctx.listeners.navclick) {\n      console.warn('[Vant] TreeSelect: \"navclick\" event is deprecated, use \"click-nav\" instead.');\n    }\n\n    if (ctx.listeners.itemclick) {\n      console.warn('[Vant] TreeSelect: \"itemclick\" event is deprecated, use \"click-item\" instead.');\n    }\n  }\n\n  var selectedItem = items[+mainActiveIndex] || {};\n  var subItems = selectedItem.children || [];\n  var isMultiple = Array.isArray(activeId);\n\n  function isActiveItem(id) {\n    return isMultiple ? activeId.indexOf(id) !== -1 : activeId === id;\n  }\n\n  var Navs = items.map(function (item) {\n    var _item$badge;\n\n    return h(SidebarItem, {\n      \"attrs\": {\n        \"dot\": item.dot,\n        \"info\": (_item$badge = item.badge) != null ? _item$badge : item.info,\n        \"title\": item.text,\n        \"disabled\": item.disabled\n      },\n      \"class\": [bem('nav-item'), item.className]\n    });\n  });\n\n  function Content() {\n    if (slots.content) {\n      return slots.content();\n    }\n\n    return subItems.map(function (item) {\n      return h(\"div\", {\n        \"key\": item.id,\n        \"class\": ['van-ellipsis', bem('item', {\n          active: isActiveItem(item.id),\n          disabled: item.disabled\n        })],\n        \"on\": {\n          \"click\": function click() {\n            if (!item.disabled) {\n              var newActiveId = item.id;\n\n              if (isMultiple) {\n                newActiveId = activeId.slice();\n                var index = newActiveId.indexOf(item.id);\n\n                if (index !== -1) {\n                  newActiveId.splice(index, 1);\n                } else if (newActiveId.length < props.max) {\n                  newActiveId.push(item.id);\n                }\n              }\n\n              emit(ctx, 'update:active-id', newActiveId);\n              emit(ctx, 'click-item', item); // compatible with legacy usage, should be removed in next major version\n\n              emit(ctx, 'itemclick', item);\n            }\n          }\n        }\n      }, [item.text, isActiveItem(item.id) && h(Icon, {\n        \"attrs\": {\n          \"name\": selectedIcon\n        },\n        \"class\": bem('selected')\n      })]);\n    });\n  }\n\n  return h(\"div\", _mergeJSXProps([{\n    \"class\": bem(),\n    \"style\": {\n      height: addUnit(height)\n    }\n  }, inherit(ctx)]), [h(Sidebar, {\n    \"class\": bem('nav'),\n    \"attrs\": {\n      \"activeKey\": mainActiveIndex\n    },\n    \"on\": {\n      \"change\": function change(index) {\n        emit(ctx, 'update:main-active-index', index);\n        emit(ctx, 'click-nav', index); // compatible with legacy usage, should be removed in next major version\n\n        emit(ctx, 'navclick', index);\n      }\n    }\n  }, [Navs]), h(\"div\", {\n    \"class\": bem('content')\n  }, [Content()])]);\n}\n\nTreeSelect.props = {\n  max: {\n    type: [Number, String],\n    default: Infinity\n  },\n  items: {\n    type: Array,\n    default: function _default() {\n      return [];\n    }\n  },\n  height: {\n    type: [Number, String],\n    default: 300\n  },\n  activeId: {\n    type: [Number, String, Array],\n    default: 0\n  },\n  selectedIcon: {\n    type: String,\n    default: 'success'\n  },\n  mainActiveIndex: {\n    type: [Number, String],\n    default: 0\n  }\n};\nexport default createComponent(TreeSelect);","map":{"version":3,"sources":["C:/Users/Lisp/Desktop/items/node_modules/vant/es/tree-select/index.js"],"names":["_mergeJSXProps","createNamespace","addUnit","emit","inherit","Icon","Sidebar","SidebarItem","_createNamespace","createComponent","bem","TreeSelect","h","props","slots","ctx","items","height","activeId","selectedIcon","mainActiveIndex","process","env","NODE_ENV","listeners","navclick","console","warn","itemclick","selectedItem","subItems","children","isMultiple","Array","isArray","isActiveItem","id","indexOf","Navs","map","item","_item$badge","dot","badge","info","text","disabled","className","Content","content","active","click","newActiveId","slice","index","splice","length","max","push","change","type","Number","String","default","Infinity","_default"],"mappings":";;;;AAAA,OAAOA,cAAP,MAA2B,uCAA3B,C,CACA;;AACA,SAASC,eAAT,EAA0BC,OAA1B,QAAyC,UAAzC;AACA,SAASC,IAAT,EAAeC,OAAf,QAA8B,qBAA9B,C,CAAqD;;AAErD,OAAOC,IAAP,MAAiB,SAAjB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,WAAP,MAAwB,iBAAxB,C,CAA2C;;AAE3C,IAAIC,gBAAgB,GAAGP,eAAe,CAAC,aAAD,CAAtC;AAAA,IACIQ,eAAe,GAAGD,gBAAgB,CAAC,CAAD,CADtC;AAAA,IAEIE,GAAG,GAAGF,gBAAgB,CAAC,CAAD,CAF1B;;AAIA,SAASG,UAAT,CAAoBC,CAApB,EAAuBC,KAAvB,EAA8BC,KAA9B,EAAqCC,GAArC,EAA0C;AACxC,MAAIC,KAAK,GAAGH,KAAK,CAACG,KAAlB;AAAA,MACIC,MAAM,GAAGJ,KAAK,CAACI,MADnB;AAAA,MAEIC,QAAQ,GAAGL,KAAK,CAACK,QAFrB;AAAA,MAGIC,YAAY,GAAGN,KAAK,CAACM,YAHzB;AAAA,MAIIC,eAAe,GAAGP,KAAK,CAACO,eAJ5B;;AAMA,MAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1C,QAAIR,GAAG,CAACS,SAAJ,CAAcC,QAAlB,EAA4B;AAC1BC,MAAAA,OAAO,CAACC,IAAR,CAAa,6EAAb;AACD;;AAED,QAAIZ,GAAG,CAACS,SAAJ,CAAcI,SAAlB,EAA6B;AAC3BF,MAAAA,OAAO,CAACC,IAAR,CAAa,+EAAb;AACD;AACF;;AAED,MAAIE,YAAY,GAAGb,KAAK,CAAC,CAACI,eAAF,CAAL,IAA2B,EAA9C;AACA,MAAIU,QAAQ,GAAGD,YAAY,CAACE,QAAb,IAAyB,EAAxC;AACA,MAAIC,UAAU,GAAGC,KAAK,CAACC,OAAN,CAAchB,QAAd,CAAjB;;AAEA,WAASiB,YAAT,CAAsBC,EAAtB,EAA0B;AACxB,WAAOJ,UAAU,GAAGd,QAAQ,CAACmB,OAAT,CAAiBD,EAAjB,MAAyB,CAAC,CAA7B,GAAiClB,QAAQ,KAAKkB,EAA/D;AACD;;AAED,MAAIE,IAAI,GAAGtB,KAAK,CAACuB,GAAN,CAAU,UAAUC,IAAV,EAAgB;AACnC,QAAIC,WAAJ;;AAEA,WAAO7B,CAAC,CAACL,WAAD,EAAc;AACpB,eAAS;AACP,eAAOiC,IAAI,CAACE,GADL;AAEP,gBAAQ,CAACD,WAAW,GAAGD,IAAI,CAACG,KAApB,KAA8B,IAA9B,GAAqCF,WAArC,GAAmDD,IAAI,CAACI,IAFzD;AAGP,iBAASJ,IAAI,CAACK,IAHP;AAIP,oBAAYL,IAAI,CAACM;AAJV,OADW;AAOpB,eAAS,CAACpC,GAAG,CAAC,UAAD,CAAJ,EAAkB8B,IAAI,CAACO,SAAvB;AAPW,KAAd,CAAR;AASD,GAZU,CAAX;;AAcA,WAASC,OAAT,GAAmB;AACjB,QAAIlC,KAAK,CAACmC,OAAV,EAAmB;AACjB,aAAOnC,KAAK,CAACmC,OAAN,EAAP;AACD;;AAED,WAAOnB,QAAQ,CAACS,GAAT,CAAa,UAAUC,IAAV,EAAgB;AAClC,aAAO5B,CAAC,CAAC,KAAD,EAAQ;AACd,eAAO4B,IAAI,CAACJ,EADE;AAEd,iBAAS,CAAC,cAAD,EAAiB1B,GAAG,CAAC,MAAD,EAAS;AACpCwC,UAAAA,MAAM,EAAEf,YAAY,CAACK,IAAI,CAACJ,EAAN,CADgB;AAEpCU,UAAAA,QAAQ,EAAEN,IAAI,CAACM;AAFqB,SAAT,CAApB,CAFK;AAMd,cAAM;AACJ,mBAAS,SAASK,KAAT,GAAiB;AACxB,gBAAI,CAACX,IAAI,CAACM,QAAV,EAAoB;AAClB,kBAAIM,WAAW,GAAGZ,IAAI,CAACJ,EAAvB;;AAEA,kBAAIJ,UAAJ,EAAgB;AACdoB,gBAAAA,WAAW,GAAGlC,QAAQ,CAACmC,KAAT,EAAd;AACA,oBAAIC,KAAK,GAAGF,WAAW,CAACf,OAAZ,CAAoBG,IAAI,CAACJ,EAAzB,CAAZ;;AAEA,oBAAIkB,KAAK,KAAK,CAAC,CAAf,EAAkB;AAChBF,kBAAAA,WAAW,CAACG,MAAZ,CAAmBD,KAAnB,EAA0B,CAA1B;AACD,iBAFD,MAEO,IAAIF,WAAW,CAACI,MAAZ,GAAqB3C,KAAK,CAAC4C,GAA/B,EAAoC;AACzCL,kBAAAA,WAAW,CAACM,IAAZ,CAAiBlB,IAAI,CAACJ,EAAtB;AACD;AACF;;AAEDjC,cAAAA,IAAI,CAACY,GAAD,EAAM,kBAAN,EAA0BqC,WAA1B,CAAJ;AACAjD,cAAAA,IAAI,CAACY,GAAD,EAAM,YAAN,EAAoByB,IAApB,CAAJ,CAfkB,CAea;;AAE/BrC,cAAAA,IAAI,CAACY,GAAD,EAAM,WAAN,EAAmByB,IAAnB,CAAJ;AACD;AACF;AArBG;AANQ,OAAR,EA6BL,CAACA,IAAI,CAACK,IAAN,EAAYV,YAAY,CAACK,IAAI,CAACJ,EAAN,CAAZ,IAAyBxB,CAAC,CAACP,IAAD,EAAO;AAC9C,iBAAS;AACP,kBAAQc;AADD,SADqC;AAI9C,iBAAST,GAAG,CAAC,UAAD;AAJkC,OAAP,CAAtC,CA7BK,CAAR;AAmCD,KApCM,CAAP;AAqCD;;AAED,SAAOE,CAAC,CAAC,KAAD,EAAQZ,cAAc,CAAC,CAAC;AAC9B,aAASU,GAAG,EADkB;AAE9B,aAAS;AACPO,MAAAA,MAAM,EAAEf,OAAO,CAACe,MAAD;AADR;AAFqB,GAAD,EAK5Bb,OAAO,CAACW,GAAD,CALqB,CAAD,CAAtB,EAKW,CAACH,CAAC,CAACN,OAAD,EAAU;AAC7B,aAASI,GAAG,CAAC,KAAD,CADiB;AAE7B,aAAS;AACP,mBAAaU;AADN,KAFoB;AAK7B,UAAM;AACJ,gBAAU,SAASuC,MAAT,CAAgBL,KAAhB,EAAuB;AAC/BnD,QAAAA,IAAI,CAACY,GAAD,EAAM,0BAAN,EAAkCuC,KAAlC,CAAJ;AACAnD,QAAAA,IAAI,CAACY,GAAD,EAAM,WAAN,EAAmBuC,KAAnB,CAAJ,CAF+B,CAEA;;AAE/BnD,QAAAA,IAAI,CAACY,GAAD,EAAM,UAAN,EAAkBuC,KAAlB,CAAJ;AACD;AANG;AALuB,GAAV,EAalB,CAAChB,IAAD,CAbkB,CAAF,EAaP1B,CAAC,CAAC,KAAD,EAAQ;AACnB,aAASF,GAAG,CAAC,SAAD;AADO,GAAR,EAEV,CAACsC,OAAO,EAAR,CAFU,CAbM,CALX,CAAR;AAqBD;;AAEDrC,UAAU,CAACE,KAAX,GAAmB;AACjB4C,EAAAA,GAAG,EAAE;AACHG,IAAAA,IAAI,EAAE,CAACC,MAAD,EAASC,MAAT,CADH;AAEHC,IAAAA,OAAO,EAAEC;AAFN,GADY;AAKjBhD,EAAAA,KAAK,EAAE;AACL4C,IAAAA,IAAI,EAAE3B,KADD;AAEL8B,IAAAA,OAAO,EAAE,SAASE,QAAT,GAAoB;AAC3B,aAAO,EAAP;AACD;AAJI,GALU;AAWjBhD,EAAAA,MAAM,EAAE;AACN2C,IAAAA,IAAI,EAAE,CAACC,MAAD,EAASC,MAAT,CADA;AAENC,IAAAA,OAAO,EAAE;AAFH,GAXS;AAejB7C,EAAAA,QAAQ,EAAE;AACR0C,IAAAA,IAAI,EAAE,CAACC,MAAD,EAASC,MAAT,EAAiB7B,KAAjB,CADE;AAER8B,IAAAA,OAAO,EAAE;AAFD,GAfO;AAmBjB5C,EAAAA,YAAY,EAAE;AACZyC,IAAAA,IAAI,EAAEE,MADM;AAEZC,IAAAA,OAAO,EAAE;AAFG,GAnBG;AAuBjB3C,EAAAA,eAAe,EAAE;AACfwC,IAAAA,IAAI,EAAE,CAACC,MAAD,EAASC,MAAT,CADS;AAEfC,IAAAA,OAAO,EAAE;AAFM;AAvBA,CAAnB;AA4BA,eAAetD,eAAe,CAACE,UAAD,CAA9B","sourcesContent":["import _mergeJSXProps from \"@vue/babel-helper-vue-jsx-merge-props\";\n// Utils\nimport { createNamespace, addUnit } from '../utils';\nimport { emit, inherit } from '../utils/functional'; // Components\n\nimport Icon from '../icon';\nimport Sidebar from '../sidebar';\nimport SidebarItem from '../sidebar-item'; // Types\n\nvar _createNamespace = createNamespace('tree-select'),\n    createComponent = _createNamespace[0],\n    bem = _createNamespace[1];\n\nfunction TreeSelect(h, props, slots, ctx) {\n  var items = props.items,\n      height = props.height,\n      activeId = props.activeId,\n      selectedIcon = props.selectedIcon,\n      mainActiveIndex = props.mainActiveIndex;\n\n  if (process.env.NODE_ENV === 'development') {\n    if (ctx.listeners.navclick) {\n      console.warn('[Vant] TreeSelect: \"navclick\" event is deprecated, use \"click-nav\" instead.');\n    }\n\n    if (ctx.listeners.itemclick) {\n      console.warn('[Vant] TreeSelect: \"itemclick\" event is deprecated, use \"click-item\" instead.');\n    }\n  }\n\n  var selectedItem = items[+mainActiveIndex] || {};\n  var subItems = selectedItem.children || [];\n  var isMultiple = Array.isArray(activeId);\n\n  function isActiveItem(id) {\n    return isMultiple ? activeId.indexOf(id) !== -1 : activeId === id;\n  }\n\n  var Navs = items.map(function (item) {\n    var _item$badge;\n\n    return h(SidebarItem, {\n      \"attrs\": {\n        \"dot\": item.dot,\n        \"info\": (_item$badge = item.badge) != null ? _item$badge : item.info,\n        \"title\": item.text,\n        \"disabled\": item.disabled\n      },\n      \"class\": [bem('nav-item'), item.className]\n    });\n  });\n\n  function Content() {\n    if (slots.content) {\n      return slots.content();\n    }\n\n    return subItems.map(function (item) {\n      return h(\"div\", {\n        \"key\": item.id,\n        \"class\": ['van-ellipsis', bem('item', {\n          active: isActiveItem(item.id),\n          disabled: item.disabled\n        })],\n        \"on\": {\n          \"click\": function click() {\n            if (!item.disabled) {\n              var newActiveId = item.id;\n\n              if (isMultiple) {\n                newActiveId = activeId.slice();\n                var index = newActiveId.indexOf(item.id);\n\n                if (index !== -1) {\n                  newActiveId.splice(index, 1);\n                } else if (newActiveId.length < props.max) {\n                  newActiveId.push(item.id);\n                }\n              }\n\n              emit(ctx, 'update:active-id', newActiveId);\n              emit(ctx, 'click-item', item); // compatible with legacy usage, should be removed in next major version\n\n              emit(ctx, 'itemclick', item);\n            }\n          }\n        }\n      }, [item.text, isActiveItem(item.id) && h(Icon, {\n        \"attrs\": {\n          \"name\": selectedIcon\n        },\n        \"class\": bem('selected')\n      })]);\n    });\n  }\n\n  return h(\"div\", _mergeJSXProps([{\n    \"class\": bem(),\n    \"style\": {\n      height: addUnit(height)\n    }\n  }, inherit(ctx)]), [h(Sidebar, {\n    \"class\": bem('nav'),\n    \"attrs\": {\n      \"activeKey\": mainActiveIndex\n    },\n    \"on\": {\n      \"change\": function change(index) {\n        emit(ctx, 'update:main-active-index', index);\n        emit(ctx, 'click-nav', index); // compatible with legacy usage, should be removed in next major version\n\n        emit(ctx, 'navclick', index);\n      }\n    }\n  }, [Navs]), h(\"div\", {\n    \"class\": bem('content')\n  }, [Content()])]);\n}\n\nTreeSelect.props = {\n  max: {\n    type: [Number, String],\n    default: Infinity\n  },\n  items: {\n    type: Array,\n    default: function _default() {\n      return [];\n    }\n  },\n  height: {\n    type: [Number, String],\n    default: 300\n  },\n  activeId: {\n    type: [Number, String, Array],\n    default: 0\n  },\n  selectedIcon: {\n    type: String,\n    default: 'success'\n  },\n  mainActiveIndex: {\n    type: [Number, String],\n    default: 0\n  }\n};\nexport default createComponent(TreeSelect);"]},"metadata":{},"sourceType":"module"}