{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport { isFunction } from '../utils';\nexport function toArray(item) {\n  if (Array.isArray(item)) {\n    return item;\n  }\n\n  return [item];\n}\nexport function readFile(file, resultType) {\n  return new Promise(function (resolve) {\n    if (resultType === 'file') {\n      resolve(null);\n      return;\n    }\n\n    var reader = new FileReader();\n\n    reader.onload = function (event) {\n      resolve(event.target.result);\n    };\n\n    if (resultType === 'dataUrl') {\n      reader.readAsDataURL(file);\n    } else if (resultType === 'text') {\n      reader.readAsText(file);\n    }\n  });\n}\nexport function isOversize(files, maxSize) {\n  return toArray(files).some(function (file) {\n    if (file) {\n      if (isFunction(maxSize)) {\n        return maxSize(file);\n      }\n\n      return file.size > maxSize;\n    }\n\n    return false;\n  });\n}\nvar IMAGE_REGEXP = /\\.(jpeg|jpg|gif|png|svg|webp|jfif|bmp|dpg)/i;\nexport function isImageUrl(url) {\n  return IMAGE_REGEXP.test(url);\n}\nexport function isImageFile(item) {\n  // some special urls cannot be recognized\n  // user can add `isImage` flag to mark it as an image url\n  if (item.isImage) {\n    return true;\n  }\n\n  if (item.file && item.file.type) {\n    return item.file.type.indexOf('image') === 0;\n  }\n\n  if (item.url) {\n    return isImageUrl(item.url);\n  }\n\n  if (item.content) {\n    return item.content.indexOf('data:image') === 0;\n  }\n\n  return false;\n}","map":{"version":3,"sources":["C:/Users/Lisp/Desktop/Vue-app/items/node_modules/vant/es/uploader/utils.js"],"names":["isFunction","toArray","item","Array","isArray","readFile","file","resultType","Promise","resolve","reader","FileReader","onload","event","target","result","readAsDataURL","readAsText","isOversize","files","maxSize","some","size","IMAGE_REGEXP","isImageUrl","url","test","isImageFile","isImage","type","indexOf","content"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,UAA3B;AACA,OAAO,SAASC,OAAT,CAAiBC,IAAjB,EAAuB;AAC5B,MAAIC,KAAK,CAACC,OAAN,CAAcF,IAAd,CAAJ,EAAyB;AACvB,WAAOA,IAAP;AACD;;AAED,SAAO,CAACA,IAAD,CAAP;AACD;AACD,OAAO,SAASG,QAAT,CAAkBC,IAAlB,EAAwBC,UAAxB,EAAoC;AACzC,SAAO,IAAIC,OAAJ,CAAY,UAAUC,OAAV,EAAmB;AACpC,QAAIF,UAAU,KAAK,MAAnB,EAA2B;AACzBE,MAAAA,OAAO,CAAC,IAAD,CAAP;AACA;AACD;;AAED,QAAIC,MAAM,GAAG,IAAIC,UAAJ,EAAb;;AAEAD,IAAAA,MAAM,CAACE,MAAP,GAAgB,UAAUC,KAAV,EAAiB;AAC/BJ,MAAAA,OAAO,CAACI,KAAK,CAACC,MAAN,CAAaC,MAAd,CAAP;AACD,KAFD;;AAIA,QAAIR,UAAU,KAAK,SAAnB,EAA8B;AAC5BG,MAAAA,MAAM,CAACM,aAAP,CAAqBV,IAArB;AACD,KAFD,MAEO,IAAIC,UAAU,KAAK,MAAnB,EAA2B;AAChCG,MAAAA,MAAM,CAACO,UAAP,CAAkBX,IAAlB;AACD;AACF,GAjBM,CAAP;AAkBD;AACD,OAAO,SAASY,UAAT,CAAoBC,KAApB,EAA2BC,OAA3B,EAAoC;AACzC,SAAOnB,OAAO,CAACkB,KAAD,CAAP,CAAeE,IAAf,CAAoB,UAAUf,IAAV,EAAgB;AACzC,QAAIA,IAAJ,EAAU;AACR,UAAIN,UAAU,CAACoB,OAAD,CAAd,EAAyB;AACvB,eAAOA,OAAO,CAACd,IAAD,CAAd;AACD;;AAED,aAAOA,IAAI,CAACgB,IAAL,GAAYF,OAAnB;AACD;;AAED,WAAO,KAAP;AACD,GAVM,CAAP;AAWD;AACD,IAAIG,YAAY,GAAG,6CAAnB;AACA,OAAO,SAASC,UAAT,CAAoBC,GAApB,EAAyB;AAC9B,SAAOF,YAAY,CAACG,IAAb,CAAkBD,GAAlB,CAAP;AACD;AACD,OAAO,SAASE,WAAT,CAAqBzB,IAArB,EAA2B;AAChC;AACA;AACA,MAAIA,IAAI,CAAC0B,OAAT,EAAkB;AAChB,WAAO,IAAP;AACD;;AAED,MAAI1B,IAAI,CAACI,IAAL,IAAaJ,IAAI,CAACI,IAAL,CAAUuB,IAA3B,EAAiC;AAC/B,WAAO3B,IAAI,CAACI,IAAL,CAAUuB,IAAV,CAAeC,OAAf,CAAuB,OAAvB,MAAoC,CAA3C;AACD;;AAED,MAAI5B,IAAI,CAACuB,GAAT,EAAc;AACZ,WAAOD,UAAU,CAACtB,IAAI,CAACuB,GAAN,CAAjB;AACD;;AAED,MAAIvB,IAAI,CAAC6B,OAAT,EAAkB;AAChB,WAAO7B,IAAI,CAAC6B,OAAL,CAAaD,OAAb,CAAqB,YAArB,MAAuC,CAA9C;AACD;;AAED,SAAO,KAAP;AACD","sourcesContent":["import { isFunction } from '../utils';\nexport function toArray(item) {\n  if (Array.isArray(item)) {\n    return item;\n  }\n\n  return [item];\n}\nexport function readFile(file, resultType) {\n  return new Promise(function (resolve) {\n    if (resultType === 'file') {\n      resolve(null);\n      return;\n    }\n\n    var reader = new FileReader();\n\n    reader.onload = function (event) {\n      resolve(event.target.result);\n    };\n\n    if (resultType === 'dataUrl') {\n      reader.readAsDataURL(file);\n    } else if (resultType === 'text') {\n      reader.readAsText(file);\n    }\n  });\n}\nexport function isOversize(files, maxSize) {\n  return toArray(files).some(function (file) {\n    if (file) {\n      if (isFunction(maxSize)) {\n        return maxSize(file);\n      }\n\n      return file.size > maxSize;\n    }\n\n    return false;\n  });\n}\nvar IMAGE_REGEXP = /\\.(jpeg|jpg|gif|png|svg|webp|jfif|bmp|dpg)/i;\nexport function isImageUrl(url) {\n  return IMAGE_REGEXP.test(url);\n}\nexport function isImageFile(item) {\n  // some special urls cannot be recognized\n  // user can add `isImage` flag to mark it as an image url\n  if (item.isImage) {\n    return true;\n  }\n\n  if (item.file && item.file.type) {\n    return item.file.type.indexOf('image') === 0;\n  }\n\n  if (item.url) {\n    return isImageUrl(item.url);\n  }\n\n  if (item.content) {\n    return item.content.indexOf('data:image') === 0;\n  }\n\n  return false;\n}"]},"metadata":{},"sourceType":"module"}