{"ast":null,"code":"import \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport Vue from 'vue';\nimport VueToast from './Toast';\nimport { isObject, isServer } from '../utils';\nimport { removeNode } from '../utils/dom/node';\nvar defaultOptions = {\n  icon: '',\n  type: 'text',\n  // @deprecated\n  mask: false,\n  value: true,\n  message: '',\n  className: '',\n  overlay: false,\n  onClose: null,\n  onOpened: null,\n  duration: 2000,\n  iconPrefix: undefined,\n  position: 'middle',\n  transition: 'van-fade',\n  forbidClick: false,\n  loadingType: undefined,\n  getContainer: 'body',\n  overlayStyle: null,\n  closeOnClick: false,\n  closeOnClickOverlay: false\n}; // default options of specific type\n\nvar defaultOptionsMap = {};\nvar queue = [];\nvar multiple = false;\n\nvar currentOptions = _extends({}, defaultOptions);\n\nfunction parseOptions(message) {\n  if (isObject(message)) {\n    return message;\n  }\n\n  return {\n    message: message\n  };\n}\n\nfunction isInDocument(element) {\n  return document.body.contains(element);\n}\n\nfunction createInstance() {\n  /* istanbul ignore if */\n  if (isServer) {\n    return {};\n  }\n\n  queue = queue.filter(function (item) {\n    return !item.$el.parentNode || isInDocument(item.$el);\n  });\n\n  if (!queue.length || multiple) {\n    var toast = new (Vue.extend(VueToast))({\n      el: document.createElement('div')\n    });\n    toast.$on('input', function (value) {\n      toast.value = value;\n    });\n    queue.push(toast);\n  }\n\n  return queue[queue.length - 1];\n} // transform toast options to popup props\n\n\nfunction transformOptions(options) {\n  return _extends({}, options, {\n    overlay: options.mask || options.overlay,\n    mask: undefined,\n    duration: undefined\n  });\n}\n\nfunction Toast(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var toast = createInstance(); // should add z-index if previous toast has not disappeared\n\n  if (toast.value) {\n    toast.updateZIndex();\n  }\n\n  options = parseOptions(options);\n  options = _extends({}, currentOptions, defaultOptionsMap[options.type || currentOptions.type], options);\n\n  if (process.env.NODE_ENV === 'development' && options.mask) {\n    console.warn('[Vant] Toast: \"mask\" option is deprecated, use \"overlay\" option instead.');\n  }\n\n  options.clear = function () {\n    toast.value = false;\n\n    if (options.onClose) {\n      options.onClose();\n      options.onClose = null;\n    }\n\n    if (multiple && !isServer) {\n      toast.$on('closed', function () {\n        clearTimeout(toast.timer);\n        queue = queue.filter(function (item) {\n          return item !== toast;\n        });\n        removeNode(toast.$el);\n        toast.$destroy();\n      });\n    }\n  };\n\n  _extends(toast, transformOptions(options));\n\n  clearTimeout(toast.timer);\n\n  if (options.duration > 0) {\n    toast.timer = setTimeout(function () {\n      toast.clear();\n    }, options.duration);\n  }\n\n  return toast;\n}\n\nvar createMethod = function createMethod(type) {\n  return function (options) {\n    return Toast(_extends({\n      type: type\n    }, parseOptions(options)));\n  };\n};\n\n['loading', 'success', 'fail'].forEach(function (method) {\n  Toast[method] = createMethod(method);\n});\n\nToast.clear = function (all) {\n  if (queue.length) {\n    if (all) {\n      queue.forEach(function (toast) {\n        toast.clear();\n      });\n      queue = [];\n    } else if (!multiple) {\n      queue[0].clear();\n    } else {\n      queue.shift().clear();\n    }\n  }\n};\n\nToast.setDefaultOptions = function (type, options) {\n  if (typeof type === 'string') {\n    defaultOptionsMap[type] = options;\n  } else {\n    _extends(currentOptions, type);\n  }\n};\n\nToast.resetDefaultOptions = function (type) {\n  if (typeof type === 'string') {\n    defaultOptionsMap[type] = null;\n  } else {\n    currentOptions = _extends({}, defaultOptions);\n    defaultOptionsMap = {};\n  }\n};\n\nToast.allowMultiple = function (value) {\n  if (value === void 0) {\n    value = true;\n  }\n\n  multiple = value;\n};\n\nToast.install = function () {\n  Vue.use(VueToast);\n};\n\nVue.prototype.$toast = Toast;\nexport default Toast;","map":{"version":3,"sources":["C:/Users/Lisp/Desktop/items/node_modules/vant/es/toast/index.js"],"names":["_extends","Vue","VueToast","isObject","isServer","removeNode","defaultOptions","icon","type","mask","value","message","className","overlay","onClose","onOpened","duration","iconPrefix","undefined","position","transition","forbidClick","loadingType","getContainer","overlayStyle","closeOnClick","closeOnClickOverlay","defaultOptionsMap","queue","multiple","currentOptions","parseOptions","isInDocument","element","document","body","contains","createInstance","filter","item","$el","parentNode","length","toast","extend","el","createElement","$on","push","transformOptions","options","Toast","updateZIndex","process","env","NODE_ENV","console","warn","clear","clearTimeout","timer","$destroy","setTimeout","createMethod","forEach","method","all","shift","setDefaultOptions","resetDefaultOptions","allowMultiple","install","use","prototype","$toast"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport Vue from 'vue';\nimport VueToast from './Toast';\nimport { isObject, isServer } from '../utils';\nimport { removeNode } from '../utils/dom/node';\nvar defaultOptions = {\n  icon: '',\n  type: 'text',\n  // @deprecated\n  mask: false,\n  value: true,\n  message: '',\n  className: '',\n  overlay: false,\n  onClose: null,\n  onOpened: null,\n  duration: 2000,\n  iconPrefix: undefined,\n  position: 'middle',\n  transition: 'van-fade',\n  forbidClick: false,\n  loadingType: undefined,\n  getContainer: 'body',\n  overlayStyle: null,\n  closeOnClick: false,\n  closeOnClickOverlay: false\n}; // default options of specific type\n\nvar defaultOptionsMap = {};\nvar queue = [];\nvar multiple = false;\n\nvar currentOptions = _extends({}, defaultOptions);\n\nfunction parseOptions(message) {\n  if (isObject(message)) {\n    return message;\n  }\n\n  return {\n    message: message\n  };\n}\n\nfunction isInDocument(element) {\n  return document.body.contains(element);\n}\n\nfunction createInstance() {\n  /* istanbul ignore if */\n  if (isServer) {\n    return {};\n  }\n\n  queue = queue.filter(function (item) {\n    return !item.$el.parentNode || isInDocument(item.$el);\n  });\n\n  if (!queue.length || multiple) {\n    var toast = new (Vue.extend(VueToast))({\n      el: document.createElement('div')\n    });\n    toast.$on('input', function (value) {\n      toast.value = value;\n    });\n    queue.push(toast);\n  }\n\n  return queue[queue.length - 1];\n} // transform toast options to popup props\n\n\nfunction transformOptions(options) {\n  return _extends({}, options, {\n    overlay: options.mask || options.overlay,\n    mask: undefined,\n    duration: undefined\n  });\n}\n\nfunction Toast(options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var toast = createInstance(); // should add z-index if previous toast has not disappeared\n\n  if (toast.value) {\n    toast.updateZIndex();\n  }\n\n  options = parseOptions(options);\n  options = _extends({}, currentOptions, defaultOptionsMap[options.type || currentOptions.type], options);\n\n  if (process.env.NODE_ENV === 'development' && options.mask) {\n    console.warn('[Vant] Toast: \"mask\" option is deprecated, use \"overlay\" option instead.');\n  }\n\n  options.clear = function () {\n    toast.value = false;\n\n    if (options.onClose) {\n      options.onClose();\n      options.onClose = null;\n    }\n\n    if (multiple && !isServer) {\n      toast.$on('closed', function () {\n        clearTimeout(toast.timer);\n        queue = queue.filter(function (item) {\n          return item !== toast;\n        });\n        removeNode(toast.$el);\n        toast.$destroy();\n      });\n    }\n  };\n\n  _extends(toast, transformOptions(options));\n\n  clearTimeout(toast.timer);\n\n  if (options.duration > 0) {\n    toast.timer = setTimeout(function () {\n      toast.clear();\n    }, options.duration);\n  }\n\n  return toast;\n}\n\nvar createMethod = function createMethod(type) {\n  return function (options) {\n    return Toast(_extends({\n      type: type\n    }, parseOptions(options)));\n  };\n};\n\n['loading', 'success', 'fail'].forEach(function (method) {\n  Toast[method] = createMethod(method);\n});\n\nToast.clear = function (all) {\n  if (queue.length) {\n    if (all) {\n      queue.forEach(function (toast) {\n        toast.clear();\n      });\n      queue = [];\n    } else if (!multiple) {\n      queue[0].clear();\n    } else {\n      queue.shift().clear();\n    }\n  }\n};\n\nToast.setDefaultOptions = function (type, options) {\n  if (typeof type === 'string') {\n    defaultOptionsMap[type] = options;\n  } else {\n    _extends(currentOptions, type);\n  }\n};\n\nToast.resetDefaultOptions = function (type) {\n  if (typeof type === 'string') {\n    defaultOptionsMap[type] = null;\n  } else {\n    currentOptions = _extends({}, defaultOptions);\n    defaultOptionsMap = {};\n  }\n};\n\nToast.allowMultiple = function (value) {\n  if (value === void 0) {\n    value = true;\n  }\n\n  multiple = value;\n};\n\nToast.install = function () {\n  Vue.use(VueToast);\n};\n\nVue.prototype.$toast = Toast;\nexport default Toast;"]},"metadata":{},"sourceType":"module"}