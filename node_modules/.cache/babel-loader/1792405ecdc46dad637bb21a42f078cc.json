{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Lisp/Desktop/items/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getArticleList } from \"@/api/getListApi\";\nexport default {\n  data: function data() {\n    return {\n      list: [],\n      loading: false,\n      finished: false\n    };\n  },\n  props: [\"item\"],\n  methods: {\n    onLoad: function onLoad() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var params, _yield$getArticleList, data;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // 异步更新数据\n                params = {\n                  channel_id: _this.item.id,\n                  timestamp: Date.now()\n                };\n                _context.prev = 1;\n                console.log(params); //  let { data } = await getArticleList(0,Date.now());\n\n                _context.next = 5;\n                return getArticleList(params);\n\n              case 5:\n                _yield$getArticleList = _context.sent;\n                data = _yield$getArticleList.data;\n                console.log(data);\n                _context.next = 13;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](1);\n\n                _this.$toast(\"获取数据失败，未知错误\");\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[1, 10]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;AAeA;AAEA;AACAA,MADA,kBACA;AACA;AACAC,cADA;AAEAC,oBAFA;AAGAC;AAHA;AAKA,GAPA;AAQAC,iBARA;AASAC;AACAC,UADA,oBACA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AACA;AACAC,sBAFA,GAEA;AAAAC;AAAAC;AAAA,iBAFA;AAAA;AAKAC,oCALA,CAOA;;AAPA;AAAA,uBAQAC,sBARA;;AAAA;AAAA;AAQAX,oBARA,yBAQAA,IARA;AASAU;AATA;AAAA;;AAAA;AAAA;AAAA;;AAWA;;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA4BA;AA7BA;AATA","names":["data","list","loading","finished","props","methods","onLoad","params","channel_id","timestamp","console","getArticleList"],"sourceRoot":"src/views/Home/component","sources":["article-list.vue"],"sourcesContent":["<template>\r\n  <div class=\"list-container\">\r\n    <van-list\r\n      v-model=\"loading\"\r\n      :finished=\"finished\"\r\n      finished-text=\"没有更多了\"\r\n      @load=\"onLoad\"\r\n    >\r\n      <van-cell v-for=\"item in list\" :key=\"item\" :title=\"item\" />\r\n    </van-list>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n\r\nimport { getArticleList } from \"@/api/getListApi\"\r\n\r\nexport default {\r\n  data() {\r\n    return {\r\n      list: [],\r\n      loading: false,\r\n      finished: false,\r\n    };\r\n  },\r\n  props:[\"item\"],\r\n  methods: {\r\n    async onLoad() {\r\n      // 异步更新数据\r\n         let params = { channel_id:this.item.id,timestamp:Date.now() } \r\n      try{\r\n         \r\n        console.log(params);\r\n         \r\n        //  let { data } = await getArticleList(0,Date.now());\r\n         let { data } = await getArticleList(params);\r\n         console.log(data);\r\n      }catch (err){\r\n           this.$toast(\"获取数据失败，未知错误\");\r\n      }\r\n    //   console.log(this.item);\r\n    //   // setTimeout 仅做示例，真实场景中一般为 ajax 请求\r\n    //   setTimeout(() => {\r\n    //     for (let i = 0; i < 10; i++) {\r\n    //       this.list.push(this.list.length + 1);\r\n    //     }\r\n\r\n    //     // 加载状态结束\r\n    //     this.loading = false;\r\n\r\n    //     // 数据全部加载完成\r\n    //     if (this.list.length >= 40) {\r\n    //       this.finished = true;\r\n    //     }\r\n    //   }, 1000);\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style></style>\r\n"]},"metadata":{},"sourceType":"module"}