{"ast":null,"code":"import _defineProperty from \"C:/Users/Lisp/Desktop/items/node_modules/@babel/runtime/helpers/esm/defineProperty.js\";\nimport _toConsumableArray from \"C:/Users/Lisp/Desktop/items/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _asyncToGenerator from \"C:/Users/Lisp/Desktop/items/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n\nvar _name$components$acti;\n\nimport \"core-js/modules/es.array.concat.js\";\nimport \"regenerator-runtime/runtime.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport ArticleItem from \"@/components/article-item\";\nimport { getArticleList } from \"@/api/getListApi\";\nimport _ from 'lodash';\nexport default (_name$components$acti = {\n  name: \"ArticleList\",\n  components: {\n    ArticleItem: ArticleItem\n  },\n  activated: function activated() {}\n}, _defineProperty(_name$components$acti, \"activated\", function activated() {\n  this.fn = this.recordTopHandler();\n  window.addEventListener('scroll', this.fn);\n}), _defineProperty(_name$components$acti, \"deactivated\", function deactivated() {\n  window.removeEventListener('scroll', this.fn);\n}), _defineProperty(_name$components$acti, \"data\", function data() {\n  return {\n    list: [],\n    loading: false,\n    // 数据是否加载中\n    finished: false,\n    // 控制 数据是否 加载完毕\n    timestamp: null,\n    // 下一页数据的 页码时间戳\n    error: false,\n    // 加载失败\n    isfreshLoading: false // 下拉刷新 状态\n\n  };\n}), _defineProperty(_name$components$acti, \"props\", [\"item\"]), _defineProperty(_name$components$acti, \"methods\", {\n  onRefresh: function onRefresh() {\n    var _this = this;\n\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n      var _this$list, _yield$getArticleList, data;\n\n      return regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return getArticleList({\n                channel_id: _this.item.id,\n                timestamp: _this.timestamp\n              });\n\n            case 3:\n              _yield$getArticleList = _context.sent;\n              data = _yield$getArticleList.data.data;\n\n              // console.table(data.results);\n              (_this$list = _this.list).unshift.apply(_this$list, _toConsumableArray(data.results));\n\n              _this.timestamp = data.pre_timestamp; // 关闭下拉刷新状态\n\n              _this.isfreshLoading = false; // 刷新成功提示\n\n              _this.$toast(\"\\u5237\\u65B0\\u6210\\u529F,\\u66F4\\u65B0\".concat(data.results.length, \"\\u6761\\u6570\\u636E\"));\n\n              _context.next = 15;\n              break;\n\n            case 11:\n              _context.prev = 11;\n              _context.t0 = _context[\"catch\"](0);\n              _this.isfreshLoading = false;\n\n              _this.$toast(\"\\u83B7\\u53D6\\u6570\\u636E\\u5931\\u8D25\");\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 11]]);\n    }))();\n  },\n  onLoad: function onLoad() {\n    var _this2 = this;\n\n    return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n      var _this2$timestamp, _yield$getArticleList2, data;\n\n      return regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              _context2.next = 3;\n              return getArticleList({\n                channel_id: _this2.item.id,\n                timestamp: (_this2$timestamp = _this2.timestamp) !== null && _this2$timestamp !== void 0 ? _this2$timestamp : Date.now()\n              });\n\n            case 3:\n              _yield$getArticleList2 = _context2.sent;\n              data = _yield$getArticleList2.data.data;\n              _this2.list = [].concat(_toConsumableArray(_this2.list), _toConsumableArray(data.results)); // console.log(this.list);\n              // console.log(data);\n\n              _this2.loading = false;\n              _this2.timestamp = data.pre_timestamp;\n\n              if (data.results.length === 0) {\n                _this2.finished = true;\n              }\n\n              _context2.next = 15;\n              break;\n\n            case 11:\n              _context2.prev = 11;\n              _context2.t0 = _context2[\"catch\"](0);\n              _this2.error = true;\n              _this2.loading = false;\n\n            case 15:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[0, 11]]);\n    }))();\n  },\n  recordTopHandler: function recordTopHandler() {\n    var _this3 = this;\n\n    return _.debounce(function () {\n      _this3.$route.meta.top = window.scrollY;\n    }, 50, {\n      trailing: true\n    } // trailing 指定在延迟后调用\n    );\n  }\n}), _name$components$acti);","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuBA;AACA;AACA;AAEA;AACAA,qBADA;AAEAC;AACAC;AADA,GAFA;AAKAC,WALA,uBAKA,CAEA;AAPA,4EASA;AACA;AACAC;AACA,CAZA,gFAaA;AACAA;AACA,CAfA,kEAgBA;AACA;AACAC,YADA;AAEAC,kBAFA;AAEA;AACAC,mBAHA;AAGA;AACAC,mBAJA;AAIA;AACAC,gBALA;AAKA;AACAC,yBANA,CAMA;;AANA;AAQA,CAzBA,mDA0BA,QA1BA,qDA2BA;AACAC,WADA,uBACA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAMAC;AACAC,yCADA;AAEAL;AAFA,gBANA;;AAAA;AAAA;AAKAM,kBALA,yBAKAA,IALA,CAKAA,IALA;;AAUA;AAEA;;AACA,mDAbA,CAeA;;AACA,2CAhBA,CAiBA;;AACA;;AAlBA;AAAA;;AAAA;AAAA;AAAA;AAoBA;;AACA;;AArBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAuBA,GAxBA;AAyBAC,QAzBA,oBAyBA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAOAH;AACAC,0CADA;AAEAL;AAFA,gBAPA;;AAAA;AAAA;AAMAM,kBANA,0BAMAA,IANA,CAMAA,IANA;AAWA,yGAXA,CAYA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AApBA;AAAA;;AAAA;AAAA;AAAA;AAsBA;AACA;;AAvBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAyBA,GAlDA;AAmDAE,kBAnDA,8BAmDA;AAAA;;AACA,sBACA;AACA;AACA,KAHA,EAIA,EAJA,EAKA;AAAAC;AAAA,KALA,CAKA;AALA;AAOA;AA3DA,CA3BA","names":["name","components","ArticleItem","activated","window","list","loading","finished","timestamp","error","isfreshLoading","onRefresh","getArticleList","channel_id","data","onLoad","recordTopHandler","trailing"],"sourceRoot":"src/views/Home/component","sources":["article-list.vue"],"sourcesContent":["<template>\r\n  <div class=\"list-container\" ref=\"scrolllist\">\r\n    <van-pull-refresh v-model=\"isfreshLoading\" @refresh=\"onRefresh\">\r\n      <van-list\r\n        v-model=\"loading\"\r\n        :finished=\"finished\"\r\n        finished-text=\"没有更多了\"\r\n        :error.sync=\"error\"\r\n        error-text=\"请求失败，click重新加载\"\r\n        @load=\"onLoad\"\r\n      >\r\n        <!-- <van-cell v-for=\"(item,index) in list\" :key=\"index\" :title=\"item.title\" /> -->\r\n        <ArticleItem v-for=\"item in list\" \r\n                    :key=\"item.art_id\"\r\n                    :article=\"item\"\r\n        >\r\n        </ArticleItem>\r\n      </van-list>\r\n    </van-pull-refresh>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport ArticleItem from \"@/components/article-item\";\r\nimport { getArticleList } from \"@/api/getListApi\";\r\nimport _ from 'lodash'\r\n\r\nexport default {\r\n  name: \"ArticleList\",\r\n  components: {\r\n    ArticleItem,\r\n  },\r\n  activated(){\r\n    \r\n  },\r\n // 页面被激活\r\n    activated(){\r\n        this.fn = this.recordTopHandler()\r\n        window.addEventListener('scroll', this.fn)\r\n    },\r\n     deactivated(){\r\n        window.removeEventListener('scroll', this.fn)\r\n    },\r\n  data() {\r\n    return {\r\n      list: [],\r\n      loading: false, // 数据是否加载中\r\n      finished: false, // 控制 数据是否 加载完毕\r\n      timestamp: null, // 下一页数据的 页码时间戳\r\n      error: false, // 加载失败\r\n      isfreshLoading: false, // 下拉刷新 状态\r\n    };\r\n  },\r\n  props: [\"item\"],\r\n  methods: {\r\n    async onRefresh() {\r\n      try {\r\n        /* 下拉刷新获取最新数据在顶部\r\n              最新数据的时间戳 Date.now() */\r\n        let {\r\n          data: { data },\r\n        } = await getArticleList({\r\n          channel_id: this.item.id,\r\n          timestamp: this.timestamp,\r\n        });\r\n        // console.table(data.results);\r\n\r\n        this.list.unshift(...data.results);\r\n        this.timestamp = data.pre_timestamp;\r\n\r\n        // 关闭下拉刷新状态\r\n        this.isfreshLoading = false;\r\n        // 刷新成功提示\r\n        this.$toast(`刷新成功,更新${data.results.length}条数据`);\r\n      } catch (err) {\r\n        this.isfreshLoading = false;\r\n        this.$toast(`获取数据失败`);\r\n      }\r\n    },\r\n    async onLoad() {\r\n      // 异步更新数据\r\n      // let params = { channel_id: this.item.id, timestamp: Date.now() };\r\n      try {\r\n        //  let { data } = await getArticleList(0,Date.now());\r\n        let {\r\n          data: { data },\r\n        } = await getArticleList({\r\n          channel_id: this.item.id,\r\n          timestamp: this.timestamp ?? Date.now(),\r\n        });\r\n        this.list = [...this.list, ...data.results];\r\n        // console.log(this.list);\r\n        // console.log(data);\r\n\r\n        this.loading = false;\r\n        this.timestamp = data.pre_timestamp;\r\n\r\n        if (data.results.length === 0) {\r\n          this.finished = true;\r\n        }\r\n      } catch (err) {\r\n        this.error = true;\r\n        this.loading = false;\r\n      }\r\n    },\r\n     recordTopHandler(){\r\n                  return _.debounce(\r\n                      ()=> {\r\n                          this.$route.meta.top = window.scrollY\r\n                      },\r\n                      50,\r\n                      { trailing:true } // trailing 指定在延迟后调用\r\n                  )\r\n              }\r\n\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scope>\r\n/* 如果需要记住每个频道滚动条的位置，\r\n    需要给每个滚动容器设置高度(默认监听的是 body的滚动事件)\r\n    给滚动容器设置高度，移动端最好使用 vh 和 vm */\r\n\r\n.list-container {\r\n  height: 79vh; //  vh 可视区域高度  vw 可视区域宽度\r\n  overflow-y: auto;\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}