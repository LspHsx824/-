{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport { createNamespace, isDef } from '../utils';\nimport { PopupMixin } from '../mixins/popup';\nimport Icon from '../icon';\n\nvar _createNamespace = createNamespace('popup'),\n    createComponent = _createNamespace[0],\n    bem = _createNamespace[1];\n\nexport default createComponent({\n  mixins: [PopupMixin()],\n  props: {\n    round: Boolean,\n    duration: [Number, String],\n    closeable: Boolean,\n    transition: String,\n    safeAreaInsetBottom: Boolean,\n    closeIcon: {\n      type: String,\n      default: 'cross'\n    },\n    closeIconPosition: {\n      type: String,\n      default: 'top-right'\n    },\n    position: {\n      type: String,\n      default: 'center'\n    },\n    overlay: {\n      type: Boolean,\n      default: true\n    },\n    closeOnClickOverlay: {\n      type: Boolean,\n      default: true\n    }\n  },\n  beforeCreate: function beforeCreate() {\n    var _this = this;\n\n    var createEmitter = function createEmitter(eventName) {\n      return function (event) {\n        return _this.$emit(eventName, event);\n      };\n    };\n\n    this.onClick = createEmitter('click');\n    this.onOpened = createEmitter('opened');\n    this.onClosed = createEmitter('closed');\n  },\n  methods: {\n    onClickCloseIcon: function onClickCloseIcon(event) {\n      this.$emit('click-close-icon', event);\n      this.close();\n    }\n  },\n  render: function render() {\n    var _bem;\n\n    var h = arguments[0];\n\n    if (!this.shouldRender) {\n      return;\n    }\n\n    var round = this.round,\n        position = this.position,\n        duration = this.duration;\n    var isCenter = position === 'center';\n    var transitionName = this.transition || (isCenter ? 'van-fade' : \"van-popup-slide-\" + position);\n    var style = {};\n\n    if (isDef(duration)) {\n      var key = isCenter ? 'animationDuration' : 'transitionDuration';\n      style[key] = duration + \"s\";\n    }\n\n    return h(\"transition\", {\n      \"attrs\": {\n        \"appear\": this.transitionAppear,\n        \"name\": transitionName\n      },\n      \"on\": {\n        \"afterEnter\": this.onOpened,\n        \"afterLeave\": this.onClosed\n      }\n    }, [h(\"div\", {\n      \"directives\": [{\n        name: \"show\",\n        value: this.value\n      }],\n      \"style\": style,\n      \"class\": bem((_bem = {\n        round: round\n      }, _bem[position] = position, _bem['safe-area-inset-bottom'] = this.safeAreaInsetBottom, _bem)),\n      \"on\": {\n        \"click\": this.onClick\n      }\n    }, [this.slots(), this.closeable && h(Icon, {\n      \"attrs\": {\n        \"role\": \"button\",\n        \"tabindex\": \"0\",\n        \"name\": this.closeIcon\n      },\n      \"class\": bem('close-icon', this.closeIconPosition),\n      \"on\": {\n        \"click\": this.onClickCloseIcon\n      }\n    })])]);\n  }\n});","map":{"version":3,"sources":["C:/Users/Lisp/Desktop/items/node_modules/vant/es/popup/index.js"],"names":["createNamespace","isDef","PopupMixin","Icon","_createNamespace","createComponent","bem","mixins","props","round","Boolean","duration","Number","String","closeable","transition","safeAreaInsetBottom","closeIcon","type","default","closeIconPosition","position","overlay","closeOnClickOverlay","beforeCreate","_this","createEmitter","eventName","event","$emit","onClick","onOpened","onClosed","methods","onClickCloseIcon","close","render","_bem","h","arguments","shouldRender","isCenter","transitionName","style","key","transitionAppear","name","value","slots"],"mappings":"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","sourcesContent":["import { createNamespace, isDef } from '../utils';\nimport { PopupMixin } from '../mixins/popup';\nimport Icon from '../icon';\n\nvar _createNamespace = createNamespace('popup'),\n    createComponent = _createNamespace[0],\n    bem = _createNamespace[1];\n\nexport default createComponent({\n  mixins: [PopupMixin()],\n  props: {\n    round: Boolean,\n    duration: [Number, String],\n    closeable: Boolean,\n    transition: String,\n    safeAreaInsetBottom: Boolean,\n    closeIcon: {\n      type: String,\n      default: 'cross'\n    },\n    closeIconPosition: {\n      type: String,\n      default: 'top-right'\n    },\n    position: {\n      type: String,\n      default: 'center'\n    },\n    overlay: {\n      type: Boolean,\n      default: true\n    },\n    closeOnClickOverlay: {\n      type: Boolean,\n      default: true\n    }\n  },\n  beforeCreate: function beforeCreate() {\n    var _this = this;\n\n    var createEmitter = function createEmitter(eventName) {\n      return function (event) {\n        return _this.$emit(eventName, event);\n      };\n    };\n\n    this.onClick = createEmitter('click');\n    this.onOpened = createEmitter('opened');\n    this.onClosed = createEmitter('closed');\n  },\n  methods: {\n    onClickCloseIcon: function onClickCloseIcon(event) {\n      this.$emit('click-close-icon', event);\n      this.close();\n    }\n  },\n  render: function render() {\n    var _bem;\n\n    var h = arguments[0];\n\n    if (!this.shouldRender) {\n      return;\n    }\n\n    var round = this.round,\n        position = this.position,\n        duration = this.duration;\n    var isCenter = position === 'center';\n    var transitionName = this.transition || (isCenter ? 'van-fade' : \"van-popup-slide-\" + position);\n    var style = {};\n\n    if (isDef(duration)) {\n      var key = isCenter ? 'animationDuration' : 'transitionDuration';\n      style[key] = duration + \"s\";\n    }\n\n    return h(\"transition\", {\n      \"attrs\": {\n        \"appear\": this.transitionAppear,\n        \"name\": transitionName\n      },\n      \"on\": {\n        \"afterEnter\": this.onOpened,\n        \"afterLeave\": this.onClosed\n      }\n    }, [h(\"div\", {\n      \"directives\": [{\n        name: \"show\",\n        value: this.value\n      }],\n      \"style\": style,\n      \"class\": bem((_bem = {\n        round: round\n      }, _bem[position] = position, _bem['safe-area-inset-bottom'] = this.safeAreaInsetBottom, _bem)),\n      \"on\": {\n        \"click\": this.onClick\n      }\n    }, [this.slots(), this.closeable && h(Icon, {\n      \"attrs\": {\n        \"role\": \"button\",\n        \"tabindex\": \"0\",\n        \"name\": this.closeIcon\n      },\n      \"class\": bem('close-icon', this.closeIconPosition),\n      \"on\": {\n        \"click\": this.onClickCloseIcon\n      }\n    })])]);\n  }\n});"]},"metadata":{},"sourceType":"module"}