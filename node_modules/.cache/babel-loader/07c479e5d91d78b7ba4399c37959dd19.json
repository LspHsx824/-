{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Lisp/Desktop/items/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.regexp.constructor.js\";\nimport \"core-js/modules/es.regexp.dot-all.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.sticky.js\";\nimport \"core-js/modules/es.regexp.to-string.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport \"regenerator-runtime/runtime.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { searchGooGeContent } from \"@/api/users\";\nexport default {\n  name: \"search-suggestion\",\n  data: function data() {\n    return {\n      suggestions: []\n    };\n  },\n  props: [\"keyWrod\"],\n  watch: {\n    keyWrod: {\n      immediate: true,\n      handler: function handler() {\n        this.throttle(this.lodingData, 1000); // this.lodingData();\n      }\n    }\n  },\n  methods: {\n    lodingData: function lodingData() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _yield$searchGooGeCon, data;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return searchGooGeContent(_this.keyWrod);\n\n              case 3:\n                _yield$searchGooGeCon = _context.sent;\n                data = _yield$searchGooGeCon.data;\n                console.log(data);\n                _this.suggestions = data.data.options;\n                _context.next = 12;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](0);\n\n                _this.$toast(\"获取数据失败，请重试\");\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 9]]);\n      }))();\n    },\n    activeText: function activeText(strText) {\n      var _strText;\n\n      strText = (_strText = strText) !== null && _strText !== void 0 ? _strText : \"\";\n      var newText = \"<span class=\\\"active\\\">\".concat(this.keyWrod, \"</span>\");\n      var reg = new RegExp(this.keyWrod, \"gi\");\n      return strText.replace(reg, newText);\n    },\n    handleSearch: function handleSearch(title) {\n      console.log(12);\n      this.$emit(\"search\", title);\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBA;AAEA;AACAA,2BADA;AAEAC,MAFA,kBAEA;AACA;AACAC;AADA;AAGA,GANA;AAOAC,oBAPA;AAQAC;AACAC;AACAC,qBADA;AAEAC,aAFA,qBAEA;AACA,6CADA,CAEA;AACA;AALA;AADA,GARA;AAiBAC;AACAC,cADA,wBACA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEAC,iCAFA;;AAAA;AAAA;AAEAT,oBAFA,yBAEAA,IAFA;AAGAU;AACA;AAJA;AAAA;;AAAA;AAAA;AAAA;;AAMA;;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,KATA;AAUAC,cAVA,sBAUAC,OAVA,EAUA;AAAA;;AACAA;AACA;AACA;AAEA;AACA,KAhBA;AAiBAC,gBAjBA,wBAiBAC,KAjBA,EAiBA;AACAJ;AACA;AACA;AApBA;AAjBA","names":["name","data","suggestions","props","watch","keyWrod","immediate","handler","methods","lodingData","searchGooGeContent","console","activeText","strText","handleSearch","title"],"sourceRoot":"src/views/search/search-comp","sources":["search-suggestion.vue"],"sourcesContent":["<template>\r\n    <div class=\"search-suggestion\">\r\n      <template v-if=\"suggestions.length!=0 && suggestions[0]\">\r\n        <van-cell v-for=\"(item,i) in suggestions\"\r\n                  :key=\"i\"\r\n                  @click=\"handleSearch(item)\"\r\n                  icon=\"shop-o\" clickable>\r\n                  <template #title>\r\n                    <div v-html=\"activeText(item)\"></div>\r\n                  </template>\r\n            <!-- 使用 right-icon 插槽来自定义右侧图标 -->\r\n            <template #right-icon>\r\n                <van-icon name=\"search\" class=\"search-icon\" />\r\n            </template>\r\n        </van-cell>        \r\n      </template>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { searchGooGeContent } from \"@/api/users\";\r\n\r\nexport default {\r\n    name: \"search-suggestion\",\r\n    data() {\r\n        return {\r\n            suggestions: [],\r\n        };\r\n    },\r\n    props: [\"keyWrod\"],\r\n    watch: {\r\n        keyWrod: {\r\n            immediate: true,\r\n            handler() {\r\n                this.throttle(this.lodingData,1000)\r\n                // this.lodingData();\r\n            },\r\n        },\r\n    },\r\n    methods: {\r\n        async lodingData() {\r\n            try {\r\n                const { data } = await searchGooGeContent(this.keyWrod);\r\n                console.log(data);\r\n                this.suggestions = data.data.options;\r\n            } catch (err) {\r\n                this.$toast(\"获取数据失败，请重试\");\r\n            }\r\n        },\r\n        activeText(strText){\r\n            strText = strText ?? \"\" \r\n            const newText = `<span class=\"active\">${this.keyWrod}</span>`\r\n            const reg = new RegExp(this.keyWrod,\"gi\")\r\n\r\n            return strText.replace(reg,newText)\r\n        },\r\n        handleSearch(title){\r\n            console.log(12);\r\n            this.$emit(\"search\",title)\r\n        }\r\n    },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n\r\n// .search-suggestion{\r\n//     padding: 100px 0 0 0;\r\n// }\r\n\r\n.van-cell{\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  \r\n}\r\n/deep/ .active{\r\n      color:red;\r\n  }\r\n\r\n\r\n\r\n</style>"]},"metadata":{},"sourceType":"module"}