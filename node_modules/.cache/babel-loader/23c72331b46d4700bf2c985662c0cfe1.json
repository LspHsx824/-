{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport Vue from 'vue';\nimport VanDialog from './Dialog';\nimport { isServer } from '../utils';\nvar instance;\n\nfunction isInDocument(element) {\n  return document.body.contains(element);\n}\n\nfunction initInstance() {\n  if (instance) {\n    instance.$destroy();\n  }\n\n  instance = new (Vue.extend(VanDialog))({\n    el: document.createElement('div'),\n    // avoid missing animation when first rendered\n    propsData: {\n      lazyRender: false\n    }\n  });\n  instance.$on('input', function (value) {\n    instance.value = value;\n  });\n}\n\nfunction Dialog(options) {\n  /* istanbul ignore if */\n  if (isServer) {\n    return Promise.resolve();\n  }\n\n  return new Promise(function (resolve, reject) {\n    if (!instance || !isInDocument(instance.$el)) {\n      initInstance();\n    }\n\n    _extends(instance, Dialog.currentOptions, options, {\n      resolve: resolve,\n      reject: reject\n    });\n  });\n}\n\nDialog.defaultOptions = {\n  value: true,\n  title: '',\n  width: '',\n  theme: null,\n  message: '',\n  overlay: true,\n  className: '',\n  allowHtml: true,\n  lockScroll: true,\n  transition: 'van-dialog-bounce',\n  beforeClose: null,\n  overlayClass: '',\n  overlayStyle: null,\n  messageAlign: '',\n  getContainer: 'body',\n  cancelButtonText: '',\n  cancelButtonColor: null,\n  confirmButtonText: '',\n  confirmButtonColor: null,\n  showConfirmButton: true,\n  showCancelButton: false,\n  closeOnPopstate: true,\n  closeOnClickOverlay: false,\n  callback: function callback(action) {\n    instance[action === 'confirm' ? 'resolve' : 'reject'](action);\n  }\n};\nDialog.alert = Dialog;\n\nDialog.confirm = function (options) {\n  return Dialog(_extends({\n    showCancelButton: true\n  }, options));\n};\n\nDialog.close = function () {\n  if (instance) {\n    instance.value = false;\n  }\n};\n\nDialog.setDefaultOptions = function (options) {\n  _extends(Dialog.currentOptions, options);\n};\n\nDialog.resetDefaultOptions = function () {\n  Dialog.currentOptions = _extends({}, Dialog.defaultOptions);\n};\n\nDialog.resetDefaultOptions();\n\nDialog.install = function () {\n  Vue.use(VanDialog);\n};\n\nDialog.Component = VanDialog;\nVue.prototype.$dialog = Dialog;\nexport default Dialog;","map":{"version":3,"sources":["C:/Users/Lisp/Desktop/Vue-app/items/node_modules/vant/es/dialog/index.js"],"names":["_extends","Vue","VanDialog","isServer","instance","isInDocument","element","document","body","contains","initInstance","$destroy","extend","el","createElement","propsData","lazyRender","$on","value","Dialog","options","Promise","resolve","reject","$el","currentOptions","defaultOptions","title","width","theme","message","overlay","className","allowHtml","lockScroll","transition","beforeClose","overlayClass","overlayStyle","messageAlign","getContainer","cancelButtonText","cancelButtonColor","confirmButtonText","confirmButtonColor","showConfirmButton","showCancelButton","closeOnPopstate","closeOnClickOverlay","callback","action","alert","confirm","close","setDefaultOptions","resetDefaultOptions","install","use","Component","prototype","$dialog"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport Vue from 'vue';\nimport VanDialog from './Dialog';\nimport { isServer } from '../utils';\nvar instance;\n\nfunction isInDocument(element) {\n  return document.body.contains(element);\n}\n\nfunction initInstance() {\n  if (instance) {\n    instance.$destroy();\n  }\n\n  instance = new (Vue.extend(VanDialog))({\n    el: document.createElement('div'),\n    // avoid missing animation when first rendered\n    propsData: {\n      lazyRender: false\n    }\n  });\n  instance.$on('input', function (value) {\n    instance.value = value;\n  });\n}\n\nfunction Dialog(options) {\n  /* istanbul ignore if */\n  if (isServer) {\n    return Promise.resolve();\n  }\n\n  return new Promise(function (resolve, reject) {\n    if (!instance || !isInDocument(instance.$el)) {\n      initInstance();\n    }\n\n    _extends(instance, Dialog.currentOptions, options, {\n      resolve: resolve,\n      reject: reject\n    });\n  });\n}\n\nDialog.defaultOptions = {\n  value: true,\n  title: '',\n  width: '',\n  theme: null,\n  message: '',\n  overlay: true,\n  className: '',\n  allowHtml: true,\n  lockScroll: true,\n  transition: 'van-dialog-bounce',\n  beforeClose: null,\n  overlayClass: '',\n  overlayStyle: null,\n  messageAlign: '',\n  getContainer: 'body',\n  cancelButtonText: '',\n  cancelButtonColor: null,\n  confirmButtonText: '',\n  confirmButtonColor: null,\n  showConfirmButton: true,\n  showCancelButton: false,\n  closeOnPopstate: true,\n  closeOnClickOverlay: false,\n  callback: function callback(action) {\n    instance[action === 'confirm' ? 'resolve' : 'reject'](action);\n  }\n};\nDialog.alert = Dialog;\n\nDialog.confirm = function (options) {\n  return Dialog(_extends({\n    showCancelButton: true\n  }, options));\n};\n\nDialog.close = function () {\n  if (instance) {\n    instance.value = false;\n  }\n};\n\nDialog.setDefaultOptions = function (options) {\n  _extends(Dialog.currentOptions, options);\n};\n\nDialog.resetDefaultOptions = function () {\n  Dialog.currentOptions = _extends({}, Dialog.defaultOptions);\n};\n\nDialog.resetDefaultOptions();\n\nDialog.install = function () {\n  Vue.use(VanDialog);\n};\n\nDialog.Component = VanDialog;\nVue.prototype.$dialog = Dialog;\nexport default Dialog;"]},"metadata":{},"sourceType":"module"}