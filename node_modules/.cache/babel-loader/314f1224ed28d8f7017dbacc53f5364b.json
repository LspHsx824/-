{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Lisp/Desktop/items/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport _objectSpread from \"C:/Users/Lisp/Desktop/items/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.find.js\";\nimport \"core-js/modules/es.array.splice.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// import {\n//   addUserChannels,\n//   deleteUserChannels,\n//   getAllChannels,\n// } from \"../../../api/users\";\n// import { mapState } from \"vuex\";\n// import { setItem } from \"../../../utils/story\";\nexport default {\n  name: \"WorkspaceJsonEdiglist\",\n  components: {},\n  directives: {},\n  created: function created() {\n    this.getChannels();\n  },\n  props: {\n    mychannel: {\n      type: Array,\n      required: true\n    },\n    active: {\n      type: Number,\n      required: true\n    }\n  },\n  data: function data() {\n    return {\n      allchannels: [],\n      isclear: false\n    };\n  },\n  mounted: function mounted() {},\n  computed: _objectSpread(_objectSpread({}, mapState([\"user\"])), {}, {\n    recommendChannels: function recommendChannels() {\n      var _this = this;\n\n      var channels = [];\n      this.allchannels.forEach(function (channel) {\n        var ret = _this.mychannel.find(function (mychanne) {\n          return mychanne.id === channel.id;\n        }); // 如果该频道不在我的频道 则添加进来\n\n\n        if (!ret) {\n          channels.push(channel);\n        }\n      });\n      return channels;\n    }\n  }),\n  methods: {\n    getChannels: function getChannels() {\n      var _this2 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var data;\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return getAllChannels();\n\n              case 3:\n                data = _context.sent;\n                _this2.allchannels = data.data.data.channels;\n                _context.next = 9;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 7]]);\n      }))();\n    },\n    onAddChannel: function onAddChannel(value) {\n      var _this3 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee2() {\n        return regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _this3.mychannel.push(value);\n\n                if (!_this3.user) {\n                  _context2.next = 11;\n                  break;\n                }\n\n                _context2.prev = 2;\n                _context2.next = 5;\n                return addUserChannels({\n                  id: value.id,\n                  seq: _this3.mychannel.length\n                });\n\n              case 5:\n                _context2.next = 9;\n                break;\n\n              case 7:\n                _context2.prev = 7;\n                _context2.t0 = _context2[\"catch\"](2);\n\n              case 9:\n                _context2.next = 12;\n                break;\n\n              case 11:\n                setItem(\"JIARAN_TOUTIAO\", _this3.mychannel);\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, null, [[2, 7]]);\n      }))();\n    },\n    onMychannelClick: function onMychannelClick(item, index) {\n      if (this.isclear) {\n        if (index <= this.active) {\n          this.$emit(\"changeactive\", this.active - 1, true);\n        }\n\n        this.mychannel.splice(index, 1); // 删除持久化\n\n        this.deleteChannel(item);\n      } else {\n        this.$emit(\"changeactive\", index, false);\n      }\n    },\n    deleteChannel: function deleteChannel(item) {\n      var _this4 = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee3() {\n        return regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n\n                if (!_this4.user) {\n                  _context3.next = 6;\n                  break;\n                }\n\n                _context3.next = 4;\n                return deleteUserChannels(item.id);\n\n              case 4:\n                _context3.next = 7;\n                break;\n\n              case 6:\n                // 已登录 更新到本地\n                setItem(\"JIARAN_TOUTIAO\", _this4.mychannel); // 直接覆盖\n\n              case 7:\n                _context3.next = 12;\n                break;\n\n              case 9:\n                _context3.prev = 9;\n                _context3.t0 = _context3[\"catch\"](0);\n\n                _this4.$toast('操作失败');\n\n              case 12:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, null, [[0, 9]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA8CA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAA,+BADA;AAEAC,gBAFA;AAGAC,gBAHA;AAIAC,SAJA,qBAIA;AACA;AAEA,GAPA;AASAC;AACAC;AACAC,iBADA;AAEAC;AAFA,KADA;AAKAC;AACAF,kBADA;AAEAC;AAFA;AALA,GATA;AAmBAE,MAnBA,kBAmBA;AACA;AACAC,qBADA;AAEAC;AAFA;AAIA,GAxBA;AA0BAC,SA1BA,qBA0BA,EA1BA;AA2BAC,4CACAC,kBADA;AAEAC,qBAFA,+BAEA;AAAA;;AACA;AACA;AACA;AACA;AACA,SAFA,EADA,CAIA;;;AACA;AACAC;AACA;AACA,OARA;AASA;AACA;AAdA,IA3BA;AA2CAC;AACAC,eADA,yBACA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEAC,gBAFA;;AAAA;AAEAV,oBAFA;AAIA;AAJA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA,KATA;AAUAW,gBAVA,wBAUAC,KAVA,EAUA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;AADA,qBAEA,WAFA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA,uBAKAC;AACAC,8BADA;AAEAC;AAFA,kBALA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAaAC;;AAbA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAeA,KAzBA;AA0BAC,oBA1BA,4BA0BAC,IA1BA,EA0BAC,KA1BA,EA0BA;AACA;AACA;AACA;AACA;;AACA,wCAJA,CAMA;;AACA;AACA,OARA,MAQA;AACA;AACA;AACA,KAtCA;AAuCAC,iBAvCA,yBAuCAF,IAvCA,EAuCA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,qBAEA,WAFA;AAAA;AAAA;AAAA;;AAAA;AAAA,uBAIAG,2BAJA;;AAAA;AAAA;AAAA;;AAAA;AAMA;AACAL,4DAPA,CAQA;;AARA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAWA;;AAXA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAaA;AApDA;AA3CA","names":["name","components","directives","created","props","mychannel","type","required","active","data","allchannels","isclear","mounted","computed","mapState","recommendChannels","channels","methods","getChannels","getAllChannels","onAddChannel","value","addUserChannels","id","seq","setItem","onMychannelClick","item","index","deleteChannel","deleteUserChannels"],"sourceRoot":"src/views/Home/component","sources":["channel-Edit.vue"],"sourcesContent":["<template>\r\n  <div class=\"ediglist\">\r\n    <van-cell :border=\"false\" class=\"title-text\">\r\n      <div slot=\"title\">我的频道</div>\r\n      <van-button\r\n        class=\"btn\"\r\n        type=\"danger\"\r\n        plain\r\n        size=\"mini\"\r\n        round\r\n        @click=\"isclear = !isclear\"\r\n        >{{ isclear ? \"完成\" : \"编辑\" }}</van-button\r\n      >\r\n    </van-cell>\r\n    <van-grid class=\"my-grid\" :gutter=\"10\">\r\n      <van-grid-item\r\n        class=\"gread-item\"\r\n        v-for=\"(item, index) in mychannel\"\r\n        :key=\"index\"\r\n        @click=\"onMychannelClick(item, index)\"\r\n      >\r\n        <van-icon v-show=\"isclear\" slot=\"icon\" name=\"clear\"></van-icon>\r\n        <span class=\"text\" slot=\"text\" :class=\"{ activea: index === active }\">{{\r\n          item.name\r\n        }}</span>\r\n      </van-grid-item>\r\n    </van-grid>\r\n    <!-- 推荐频道 -->\r\n    <van-cell :border=\"false\" class=\"title-text\">\r\n      <div slot=\"title\">推荐频道</div>\r\n    </van-cell>\r\n    <van-grid class=\"re-grid\" :gutter=\"10\">\r\n      <van-grid-item\r\n        class=\"gread-item\"\r\n        icon=\"plus\"\r\n        v-for=\"(value, index) in recommendChannels\"\r\n        :key=\"index\"\r\n        :text=\"value.name\"\r\n        @click=\"onAddChannel(value)\"\r\n      />\r\n    </van-grid>\r\n    <!-- 推荐频道 -->\r\n  </div>\r\n</template>\r\n\r\n<script>\r\n// import {\r\n//   addUserChannels,\r\n//   deleteUserChannels,\r\n//   getAllChannels,\r\n// } from \"../../../api/users\";\r\n// import { mapState } from \"vuex\";\r\n// import { setItem } from \"../../../utils/story\";\r\nexport default {\r\n  name: \"WorkspaceJsonEdiglist\",\r\n  components: {},\r\n  directives: {},\r\n  created() {\r\n    this.getChannels();\r\n    \r\n  },\r\n\r\n  props: {\r\n    mychannel: {\r\n      type: Array,\r\n      required: true,\r\n    },\r\n    active: {\r\n      type: Number,\r\n      required: true,\r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      allchannels: [],\r\n      isclear: false,\r\n    };\r\n  },\r\n\r\n  mounted() {},\r\n  computed: {\r\n    ...mapState([\"user\"]),\r\n    recommendChannels() {\r\n      const channels = [];\r\n      this.allchannels.forEach((channel) => {\r\n        const ret = this.mychannel.find((mychanne) => {\r\n          return mychanne.id === channel.id;\r\n        });\r\n        // 如果该频道不在我的频道 则添加进来\r\n        if (!ret) {\r\n          channels.push(channel);\r\n        }\r\n      });\r\n      return channels;\r\n    },\r\n  },\r\n  methods: {\r\n    async getChannels() {\r\n      try {\r\n        const data = await getAllChannels();\r\n\r\n        this.allchannels = data.data.data.channels;\r\n      } catch (err) {\r\n       \r\n      }\r\n    },\r\n    async onAddChannel(value) {\r\n      this.mychannel.push(value);\r\n      if (this.user) {\r\n        \r\n        try {\r\n          await addUserChannels({\r\n            id: value.id,\r\n            seq: this.mychannel.length,\r\n          });\r\n        } catch (err) {\r\n          \r\n        }\r\n      } else {\r\n        setItem(\"JIARAN_TOUTIAO\", this.mychannel);\r\n      }\r\n    },\r\n    onMychannelClick(item, index) {\r\n      if (this.isclear) {\r\n        if (index <= this.active) {\r\n          this.$emit(\"changeactive\", this.active - 1, true);\r\n        }\r\n        this.mychannel.splice(index, 1);\r\n\r\n        // 删除持久化\r\n        this.deleteChannel(item);\r\n      } else {\r\n        this.$emit(\"changeactive\", index, false);\r\n      }\r\n    },\r\n    async deleteChannel(item) {\r\n      try {\r\n        if (this.user) {\r\n          // 已登录 更新到服务器\r\n          await deleteUserChannels(item.id);\r\n        } else {\r\n          // 已登录 更新到本地\r\n          setItem(\"JIARAN_TOUTIAO\", this.mychannel);\r\n          // 直接覆盖\r\n        }\r\n      } catch (err) {\r\n        this.$toast('操作失败')\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.ediglist {\r\n  padding: 85px 0;\r\n  .title-text {\r\n    font-size: 32px;\r\n    color: #333333;\r\n  }\r\n  /deep/ .my-grid {\r\n    .van-grid-item__icon-wrapper {\r\n      position: unset;\r\n      .van-icon {\r\n        font-size: 28px;\r\n        margin-right: 6px;\r\n        position: absolute;\r\n        top: -5px;\r\n        right: -5px;\r\n        font-size: 13px;\r\n        color: #cacaca;\r\n      }\r\n    }\r\n  }\r\n\r\n  .btn {\r\n    width: 104px;\r\n    height: 48px;\r\n    font-size: 26px;\r\n    color: #f85959;\r\n    border: 1px solid #f85959;\r\n  }\r\n  /deep/ .gread-item {\r\n    width: 160px;\r\n    height: 86px;\r\n\r\n    .van-grid-item__content {\r\n      background-color: #f4f5f6;\r\n    }\r\n    .van-grid-item__text,\r\n    .text {\r\n      font-size: 28px;\r\n      color: #222;\r\n      margin-top: 0;\r\n      white-space: nowrap;\r\n    }\r\n\r\n    .activea {\r\n      color: red;\r\n    }\r\n  }\r\n  /deep/ .re-grid {\r\n    .van-grid-item__content {\r\n      flex-direction: row;\r\n      white-space: nowrap;\r\n      .van-icon {\r\n        font-size: 15px;\r\n      }\r\n    }\r\n  }\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}