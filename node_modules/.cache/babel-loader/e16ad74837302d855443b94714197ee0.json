{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport \"cropperjs/dist/cropper.css\";\nimport Cropper from \"cropperjs\";\nimport { updateUserPhoto } from \"@/api/users\";\nexport default {\n  props: {\n    img: {\n      type: [String, Object],\n      require: true\n    }\n  },\n  data: function data() {\n    return {\n      cropper: null\n    };\n  },\n  mounted: function mounted() {\n    var image = this.$refs.img;\n    this.cropper = new Cropper(image, {\n      viewMode: 1,\n      dragMode: \"move\",\n      aspectRatio: 1,\n      autoCropArea: 1,\n      cropBoxMovable: false,\n      cropBoxResizable: false,\n      background: false\n    });\n  },\n  methods: {\n    onConfirm: function onConfirm() {\n      var _this = this;\n\n      // 错误的用法\n      // 如果接口要求 Content-Type 是 application/json\n      // 则传递普通 JavaScript 对象\n      // updateUserPhoto({\n      //   photo: blob\n      // })\n      // 如果接口要求 Content-Type 是 multipart/form-data\n      // 则你必须传递 FormData 对象\n      this.cropper.getCroppedCanvas().toBlob(function (blob) {\n        return _this.updateUserPhoto(blob);\n      });\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;AAWA;AACA;AAEA;AACA;AACAA;AACAC;AACAC,4BADA;AAEAC;AAFA;AADA,GADA;AAOAC,MAPA,kBAOA;AACA;AACAC;AADA;AAGA,GAXA;AAYAC,SAZA,qBAYA;AACA;AACA;AACAC,iBADA;AAEAC,sBAFA;AAGAC,oBAHA;AAIAC,qBAJA;AAKAC,2BALA;AAMAC,6BANA;AAOAC;AAPA;AASA,GAvBA;AAwBAC;AACAC,aADA,uBACA;AAAA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AACA;AAZA;AAxBA","names":["props","img","type","require","data","cropper","mounted","viewMode","dragMode","aspectRatio","autoCropArea","cropBoxMovable","cropBoxResizable","background","methods","onConfirm"],"sourceRoot":"src/views/userProfile/components","sources":["updatePhoto.vue"],"sourcesContent":["<template>\r\n    <div class=\"photo-img\">\r\n        <img :src=\"img\" alt ref=\"img\" />\r\n        <div class=\"toobar\">\r\n            <div class=\"cancel\" @click=\"$emit('close')\">取消</div>\r\n            <div class=\"confirm\" @click=\"onConfirm\">完成</div>\r\n        </div>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport \"cropperjs/dist/cropper.css\";\r\nimport Cropper from \"cropperjs\";\r\n\r\nimport { updateUserPhoto } from \"@/api/users\";\r\nexport default {\r\n    props: {\r\n        img: {\r\n            type: [String, Object],\r\n            require: true,\r\n        },\r\n    },\r\n    data() {\r\n        return {\r\n            cropper: null,\r\n        };\r\n    },\r\n    mounted() {\r\n        const image = this.$refs.img;\r\n        this.cropper = new Cropper(image, {\r\n            viewMode: 1,\r\n            dragMode: \"move\",\r\n            aspectRatio: 1,\r\n            autoCropArea: 1,\r\n            cropBoxMovable: false,\r\n            cropBoxResizable: false,\r\n            background: false,\r\n        });\r\n    },\r\n    methods: {\r\n        onConfirm() {\r\n            // 错误的用法\r\n            // 如果接口要求 Content-Type 是 application/json\r\n            // 则传递普通 JavaScript 对象\r\n            // updateUserPhoto({\r\n            //   photo: blob\r\n            // })\r\n            // 如果接口要求 Content-Type 是 multipart/form-data\r\n            // 则你必须传递 FormData 对象\r\n\r\n            this.cropper.getCroppedCanvas().toBlob( blob=> this.updateUserPhoto(blob))\r\n        },\r\n    },\r\n};\r\n</script>\r\n\r\n<style lang=\"less\" scoped>\r\n.photo-img {\r\n    width: 100vw;\r\n    height: 100vh;\r\n    background-color: #555;\r\n    .toobar {\r\n        position: fixed;\r\n        left: 0;\r\n        right: 0;\r\n        bottom: 0;\r\n        display: flex;\r\n        justify-content: space-between;\r\n        //   align-items: center;\r\n        .cancel,\r\n        .confirm {\r\n            width: 90px;\r\n            height: 90px;\r\n            color: #fff;\r\n            display: flex;\r\n            font-size: 30px;\r\n            justify-content: center;\r\n            align-items: center;\r\n        }\r\n    }\r\n    img {\r\n        max-width: 100%;\r\n        display: block;\r\n        // height: 100%;\r\n    }\r\n}\r\n</style>\r\n"]},"metadata":{},"sourceType":"module"}