{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.object.keys.js\";\n\n/**\n * Create a basic component with common options\n */\nimport '../../locale';\nimport { isFunction } from '..';\nimport { camelize } from '../format/string';\nimport { SlotsMixin } from '../../mixins/slots';\nimport Vue from 'vue';\n\nfunction install(Vue) {\n  var name = this.name;\n  Vue.component(name, this);\n  Vue.component(camelize(\"-\" + name), this);\n} // unify slots & scopedSlots\n\n\nexport function unifySlots(context) {\n  // use data.scopedSlots in lower Vue version\n  var scopedSlots = context.scopedSlots || context.data.scopedSlots || {};\n  var slots = context.slots();\n  Object.keys(slots).forEach(function (key) {\n    if (!scopedSlots[key]) {\n      scopedSlots[key] = function () {\n        return slots[key];\n      };\n    }\n  });\n  return scopedSlots;\n} // should be removed after Vue 3\n\nfunction transformFunctionComponent(pure) {\n  return {\n    functional: true,\n    props: pure.props,\n    model: pure.model,\n    render: function render(h, context) {\n      return pure(h, context.props, unifySlots(context), context);\n    }\n  };\n}\n\nexport function createComponent(name) {\n  return function (sfc) {\n    if (isFunction(sfc)) {\n      sfc = transformFunctionComponent(sfc);\n    }\n\n    if (!sfc.functional) {\n      sfc.mixins = sfc.mixins || [];\n      sfc.mixins.push(SlotsMixin);\n    }\n\n    sfc.name = name;\n    sfc.install = install;\n    return sfc;\n  };\n}","map":{"version":3,"sources":["C:/Users/Lisp/Desktop/items/node_modules/vant/es/utils/create/component.js"],"names":["isFunction","camelize","SlotsMixin","Vue","install","name","component","unifySlots","context","scopedSlots","data","slots","Object","keys","forEach","key","transformFunctionComponent","pure","functional","props","model","render","h","createComponent","sfc","mixins","push"],"mappings":";;;;;AAAA;AACA;AACA;AACA,OAAO,cAAP;AACA,SAASA,UAAT,QAA2B,IAA3B;AACA,SAASC,QAAT,QAAyB,kBAAzB;AACA,SAASC,UAAT,QAA2B,oBAA3B;AACA,OAAOC,GAAP,MAAgB,KAAhB;;AAEA,SAASC,OAAT,CAAiBD,GAAjB,EAAsB;AACpB,MAAIE,IAAI,GAAG,KAAKA,IAAhB;AACAF,EAAAA,GAAG,CAACG,SAAJ,CAAcD,IAAd,EAAoB,IAApB;AACAF,EAAAA,GAAG,CAACG,SAAJ,CAAcL,QAAQ,CAAC,MAAMI,IAAP,CAAtB,EAAoC,IAApC;AACD,C,CAAC;;;AAGF,OAAO,SAASE,UAAT,CAAoBC,OAApB,EAA6B;AAClC;AACA,MAAIC,WAAW,GAAGD,OAAO,CAACC,WAAR,IAAuBD,OAAO,CAACE,IAAR,CAAaD,WAApC,IAAmD,EAArE;AACA,MAAIE,KAAK,GAAGH,OAAO,CAACG,KAAR,EAAZ;AACAC,EAAAA,MAAM,CAACC,IAAP,CAAYF,KAAZ,EAAmBG,OAAnB,CAA2B,UAAUC,GAAV,EAAe;AACxC,QAAI,CAACN,WAAW,CAACM,GAAD,CAAhB,EAAuB;AACrBN,MAAAA,WAAW,CAACM,GAAD,CAAX,GAAmB,YAAY;AAC7B,eAAOJ,KAAK,CAACI,GAAD,CAAZ;AACD,OAFD;AAGD;AACF,GAND;AAOA,SAAON,WAAP;AACD,C,CAAC;;AAEF,SAASO,0BAAT,CAAoCC,IAApC,EAA0C;AACxC,SAAO;AACLC,IAAAA,UAAU,EAAE,IADP;AAELC,IAAAA,KAAK,EAAEF,IAAI,CAACE,KAFP;AAGLC,IAAAA,KAAK,EAAEH,IAAI,CAACG,KAHP;AAILC,IAAAA,MAAM,EAAE,SAASA,MAAT,CAAgBC,CAAhB,EAAmBd,OAAnB,EAA4B;AAClC,aAAOS,IAAI,CAACK,CAAD,EAAId,OAAO,CAACW,KAAZ,EAAmBZ,UAAU,CAACC,OAAD,CAA7B,EAAwCA,OAAxC,CAAX;AACD;AANI,GAAP;AAQD;;AAED,OAAO,SAASe,eAAT,CAAyBlB,IAAzB,EAA+B;AACpC,SAAO,UAAUmB,GAAV,EAAe;AACpB,QAAIxB,UAAU,CAACwB,GAAD,CAAd,EAAqB;AACnBA,MAAAA,GAAG,GAAGR,0BAA0B,CAACQ,GAAD,CAAhC;AACD;;AAED,QAAI,CAACA,GAAG,CAACN,UAAT,EAAqB;AACnBM,MAAAA,GAAG,CAACC,MAAJ,GAAaD,GAAG,CAACC,MAAJ,IAAc,EAA3B;AACAD,MAAAA,GAAG,CAACC,MAAJ,CAAWC,IAAX,CAAgBxB,UAAhB;AACD;;AAEDsB,IAAAA,GAAG,CAACnB,IAAJ,GAAWA,IAAX;AACAmB,IAAAA,GAAG,CAACpB,OAAJ,GAAcA,OAAd;AACA,WAAOoB,GAAP;AACD,GAbD;AAcD","sourcesContent":["/**\n * Create a basic component with common options\n */\nimport '../../locale';\nimport { isFunction } from '..';\nimport { camelize } from '../format/string';\nimport { SlotsMixin } from '../../mixins/slots';\nimport Vue from 'vue';\n\nfunction install(Vue) {\n  var name = this.name;\n  Vue.component(name, this);\n  Vue.component(camelize(\"-\" + name), this);\n} // unify slots & scopedSlots\n\n\nexport function unifySlots(context) {\n  // use data.scopedSlots in lower Vue version\n  var scopedSlots = context.scopedSlots || context.data.scopedSlots || {};\n  var slots = context.slots();\n  Object.keys(slots).forEach(function (key) {\n    if (!scopedSlots[key]) {\n      scopedSlots[key] = function () {\n        return slots[key];\n      };\n    }\n  });\n  return scopedSlots;\n} // should be removed after Vue 3\n\nfunction transformFunctionComponent(pure) {\n  return {\n    functional: true,\n    props: pure.props,\n    model: pure.model,\n    render: function render(h, context) {\n      return pure(h, context.props, unifySlots(context), context);\n    }\n  };\n}\n\nexport function createComponent(name) {\n  return function (sfc) {\n    if (isFunction(sfc)) {\n      sfc = transformFunctionComponent(sfc);\n    }\n\n    if (!sfc.functional) {\n      sfc.mixins = sfc.mixins || [];\n      sfc.mixins.push(SlotsMixin);\n    }\n\n    sfc.name = name;\n    sfc.install = install;\n    return sfc;\n  };\n}"]},"metadata":{},"sourceType":"module"}