{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport { isDef, createNamespace } from '../utils';\nimport { isNumeric } from '../utils/validate/number';\n\nvar _createNamespace = createNamespace('badge'),\n    createComponent = _createNamespace[0],\n    bem = _createNamespace[1];\n\nexport default createComponent({\n  props: {\n    dot: Boolean,\n    max: [Number, String],\n    color: String,\n    content: [Number, String],\n    tag: {\n      type: String,\n      default: 'div'\n    }\n  },\n  methods: {\n    hasContent: function hasContent() {\n      return !!(this.$scopedSlots.content || isDef(this.content) && this.content !== '');\n    },\n    renderContent: function renderContent() {\n      var dot = this.dot,\n          max = this.max,\n          content = this.content;\n\n      if (!dot && this.hasContent()) {\n        if (this.$scopedSlots.content) {\n          return this.$scopedSlots.content();\n        }\n\n        if (isDef(max) && isNumeric(content) && +content > max) {\n          return max + \"+\";\n        }\n\n        return content;\n      }\n    },\n    renderBadge: function renderBadge() {\n      var h = this.$createElement;\n\n      if (this.hasContent() || this.dot) {\n        return h(\"div\", {\n          \"class\": bem({\n            dot: this.dot,\n            fixed: !!this.$scopedSlots.default\n          }),\n          \"style\": {\n            background: this.color\n          }\n        }, [this.renderContent()]);\n      }\n    }\n  },\n  render: function render() {\n    var h = arguments[0];\n\n    if (this.$scopedSlots.default) {\n      var tag = this.tag;\n      return h(tag, {\n        \"class\": bem('wrapper')\n      }, [this.$scopedSlots.default(), this.renderBadge()]);\n    }\n\n    return this.renderBadge();\n  }\n});","map":{"version":3,"sources":["C:/Users/Lisp/Desktop/items/node_modules/vant/es/badge/index.js"],"names":["isDef","createNamespace","isNumeric","_createNamespace","createComponent","bem","props","dot","Boolean","max","Number","String","color","content","tag","type","default","methods","hasContent","$scopedSlots","renderContent","renderBadge","h","$createElement","fixed","background","render","arguments"],"mappings":";AAAA,SAASA,KAAT,EAAgBC,eAAhB,QAAuC,UAAvC;AACA,SAASC,SAAT,QAA0B,0BAA1B;;AAEA,IAAIC,gBAAgB,GAAGF,eAAe,CAAC,OAAD,CAAtC;AAAA,IACIG,eAAe,GAAGD,gBAAgB,CAAC,CAAD,CADtC;AAAA,IAEIE,GAAG,GAAGF,gBAAgB,CAAC,CAAD,CAF1B;;AAIA,eAAeC,eAAe,CAAC;AAC7BE,EAAAA,KAAK,EAAE;AACLC,IAAAA,GAAG,EAAEC,OADA;AAELC,IAAAA,GAAG,EAAE,CAACC,MAAD,EAASC,MAAT,CAFA;AAGLC,IAAAA,KAAK,EAAED,MAHF;AAILE,IAAAA,OAAO,EAAE,CAACH,MAAD,EAASC,MAAT,CAJJ;AAKLG,IAAAA,GAAG,EAAE;AACHC,MAAAA,IAAI,EAAEJ,MADH;AAEHK,MAAAA,OAAO,EAAE;AAFN;AALA,GADsB;AAW7BC,EAAAA,OAAO,EAAE;AACPC,IAAAA,UAAU,EAAE,SAASA,UAAT,GAAsB;AAChC,aAAO,CAAC,EAAE,KAAKC,YAAL,CAAkBN,OAAlB,IAA6Bb,KAAK,CAAC,KAAKa,OAAN,CAAL,IAAuB,KAAKA,OAAL,KAAiB,EAAvE,CAAR;AACD,KAHM;AAIPO,IAAAA,aAAa,EAAE,SAASA,aAAT,GAAyB;AACtC,UAAIb,GAAG,GAAG,KAAKA,GAAf;AAAA,UACIE,GAAG,GAAG,KAAKA,GADf;AAAA,UAEII,OAAO,GAAG,KAAKA,OAFnB;;AAIA,UAAI,CAACN,GAAD,IAAQ,KAAKW,UAAL,EAAZ,EAA+B;AAC7B,YAAI,KAAKC,YAAL,CAAkBN,OAAtB,EAA+B;AAC7B,iBAAO,KAAKM,YAAL,CAAkBN,OAAlB,EAAP;AACD;;AAED,YAAIb,KAAK,CAACS,GAAD,CAAL,IAAcP,SAAS,CAACW,OAAD,CAAvB,IAAoC,CAACA,OAAD,GAAWJ,GAAnD,EAAwD;AACtD,iBAAOA,GAAG,GAAG,GAAb;AACD;;AAED,eAAOI,OAAP;AACD;AACF,KApBM;AAqBPQ,IAAAA,WAAW,EAAE,SAASA,WAAT,GAAuB;AAClC,UAAIC,CAAC,GAAG,KAAKC,cAAb;;AAEA,UAAI,KAAKL,UAAL,MAAqB,KAAKX,GAA9B,EAAmC;AACjC,eAAOe,CAAC,CAAC,KAAD,EAAQ;AACd,mBAASjB,GAAG,CAAC;AACXE,YAAAA,GAAG,EAAE,KAAKA,GADC;AAEXiB,YAAAA,KAAK,EAAE,CAAC,CAAC,KAAKL,YAAL,CAAkBH;AAFhB,WAAD,CADE;AAKd,mBAAS;AACPS,YAAAA,UAAU,EAAE,KAAKb;AADV;AALK,SAAR,EAQL,CAAC,KAAKQ,aAAL,EAAD,CARK,CAAR;AASD;AACF;AAnCM,GAXoB;AAgD7BM,EAAAA,MAAM,EAAE,SAASA,MAAT,GAAkB;AACxB,QAAIJ,CAAC,GAAGK,SAAS,CAAC,CAAD,CAAjB;;AAEA,QAAI,KAAKR,YAAL,CAAkBH,OAAtB,EAA+B;AAC7B,UAAIF,GAAG,GAAG,KAAKA,GAAf;AACA,aAAOQ,CAAC,CAACR,GAAD,EAAM;AACZ,iBAAST,GAAG,CAAC,SAAD;AADA,OAAN,EAEL,CAAC,KAAKc,YAAL,CAAkBH,OAAlB,EAAD,EAA8B,KAAKK,WAAL,EAA9B,CAFK,CAAR;AAGD;;AAED,WAAO,KAAKA,WAAL,EAAP;AACD;AA3D4B,CAAD,CAA9B","sourcesContent":["import { isDef, createNamespace } from '../utils';\nimport { isNumeric } from '../utils/validate/number';\n\nvar _createNamespace = createNamespace('badge'),\n    createComponent = _createNamespace[0],\n    bem = _createNamespace[1];\n\nexport default createComponent({\n  props: {\n    dot: Boolean,\n    max: [Number, String],\n    color: String,\n    content: [Number, String],\n    tag: {\n      type: String,\n      default: 'div'\n    }\n  },\n  methods: {\n    hasContent: function hasContent() {\n      return !!(this.$scopedSlots.content || isDef(this.content) && this.content !== '');\n    },\n    renderContent: function renderContent() {\n      var dot = this.dot,\n          max = this.max,\n          content = this.content;\n\n      if (!dot && this.hasContent()) {\n        if (this.$scopedSlots.content) {\n          return this.$scopedSlots.content();\n        }\n\n        if (isDef(max) && isNumeric(content) && +content > max) {\n          return max + \"+\";\n        }\n\n        return content;\n      }\n    },\n    renderBadge: function renderBadge() {\n      var h = this.$createElement;\n\n      if (this.hasContent() || this.dot) {\n        return h(\"div\", {\n          \"class\": bem({\n            dot: this.dot,\n            fixed: !!this.$scopedSlots.default\n          }),\n          \"style\": {\n            background: this.color\n          }\n        }, [this.renderContent()]);\n      }\n    }\n  },\n  render: function render() {\n    var h = arguments[0];\n\n    if (this.$scopedSlots.default) {\n      var tag = this.tag;\n      return h(tag, {\n        \"class\": bem('wrapper')\n      }, [this.$scopedSlots.default(), this.renderBadge()]);\n    }\n\n    return this.renderBadge();\n  }\n});"]},"metadata":{},"sourceType":"module"}