{"ast":null,"code":"import \"core-js/modules/es.array.map.js\";\nimport { createNamespace } from '../utils';\n\nvar _createNamespace = createNamespace('calendar'),\n    createComponent = _createNamespace[0],\n    bem = _createNamespace[1],\n    t = _createNamespace[2];\n\nexport { createComponent, bem, t };\nexport function formatMonthTitle(date) {\n  return t('monthTitle', date.getFullYear(), date.getMonth() + 1);\n}\nexport function compareMonth(date1, date2) {\n  var year1 = date1.getFullYear();\n  var year2 = date2.getFullYear();\n  var month1 = date1.getMonth();\n  var month2 = date2.getMonth();\n\n  if (year1 === year2) {\n    return month1 === month2 ? 0 : month1 > month2 ? 1 : -1;\n  }\n\n  return year1 > year2 ? 1 : -1;\n}\nexport function compareDay(day1, day2) {\n  var compareMonthResult = compareMonth(day1, day2);\n\n  if (compareMonthResult === 0) {\n    var date1 = day1.getDate();\n    var date2 = day2.getDate();\n    return date1 === date2 ? 0 : date1 > date2 ? 1 : -1;\n  }\n\n  return compareMonthResult;\n}\nexport function getDayByOffset(date, offset) {\n  date = new Date(date);\n  date.setDate(date.getDate() + offset);\n  return date;\n}\nexport function getPrevDay(date) {\n  return getDayByOffset(date, -1);\n}\nexport function getNextDay(date) {\n  return getDayByOffset(date, 1);\n}\nexport function calcDateNum(date) {\n  var day1 = date[0].getTime();\n  var day2 = date[1].getTime();\n  return (day2 - day1) / (1000 * 60 * 60 * 24) + 1;\n}\nexport function copyDate(dates) {\n  return new Date(dates);\n}\nexport function copyDates(dates) {\n  if (Array.isArray(dates)) {\n    return dates.map(function (date) {\n      if (date === null) {\n        return date;\n      }\n\n      return copyDate(date);\n    });\n  }\n\n  return copyDate(dates);\n}","map":{"version":3,"sources":["C:/Users/Lisp/Desktop/items/node_modules/vant/es/calendar/utils.js"],"names":["createNamespace","_createNamespace","createComponent","bem","t","formatMonthTitle","date","getFullYear","getMonth","compareMonth","date1","date2","year1","year2","month1","month2","compareDay","day1","day2","compareMonthResult","getDate","getDayByOffset","offset","Date","setDate","getPrevDay","getNextDay","calcDateNum","getTime","copyDate","dates","copyDates","Array","isArray","map"],"mappings":"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","sourcesContent":["import { createNamespace } from '../utils';\n\nvar _createNamespace = createNamespace('calendar'),\n    createComponent = _createNamespace[0],\n    bem = _createNamespace[1],\n    t = _createNamespace[2];\n\nexport { createComponent, bem, t };\nexport function formatMonthTitle(date) {\n  return t('monthTitle', date.getFullYear(), date.getMonth() + 1);\n}\nexport function compareMonth(date1, date2) {\n  var year1 = date1.getFullYear();\n  var year2 = date2.getFullYear();\n  var month1 = date1.getMonth();\n  var month2 = date2.getMonth();\n\n  if (year1 === year2) {\n    return month1 === month2 ? 0 : month1 > month2 ? 1 : -1;\n  }\n\n  return year1 > year2 ? 1 : -1;\n}\nexport function compareDay(day1, day2) {\n  var compareMonthResult = compareMonth(day1, day2);\n\n  if (compareMonthResult === 0) {\n    var date1 = day1.getDate();\n    var date2 = day2.getDate();\n    return date1 === date2 ? 0 : date1 > date2 ? 1 : -1;\n  }\n\n  return compareMonthResult;\n}\nexport function getDayByOffset(date, offset) {\n  date = new Date(date);\n  date.setDate(date.getDate() + offset);\n  return date;\n}\nexport function getPrevDay(date) {\n  return getDayByOffset(date, -1);\n}\nexport function getNextDay(date) {\n  return getDayByOffset(date, 1);\n}\nexport function calcDateNum(date) {\n  var day1 = date[0].getTime();\n  var day2 = date[1].getTime();\n  return (day2 - day1) / (1000 * 60 * 60 * 24) + 1;\n}\nexport function copyDate(dates) {\n  return new Date(dates);\n}\nexport function copyDates(dates) {\n  if (Array.isArray(dates)) {\n    return dates.map(function (date) {\n      if (date === null) {\n        return date;\n      }\n\n      return copyDate(date);\n    });\n  }\n\n  return copyDate(dates);\n}"]},"metadata":{},"sourceType":"module"}