{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\n// Utils\nimport { bem } from './shared';\nimport { range } from '../utils/format/number';\nimport { preventDefault } from '../utils/dom/event'; // Mixins\n\nimport { TouchMixin } from '../mixins/touch'; // Component\n\nimport Image from '../image';\nimport Loading from '../loading';\nimport SwipeItem from '../swipe-item';\n\nfunction getDistance(touches) {\n  return Math.sqrt(Math.pow(touches[0].clientX - touches[1].clientX, 2) + Math.pow(touches[0].clientY - touches[1].clientY, 2));\n}\n\nexport default {\n  mixins: [TouchMixin],\n  props: {\n    src: String,\n    show: Boolean,\n    active: Number,\n    minZoom: [Number, String],\n    maxZoom: [Number, String],\n    rootWidth: Number,\n    rootHeight: Number\n  },\n  data: function data() {\n    return {\n      scale: 1,\n      moveX: 0,\n      moveY: 0,\n      moving: false,\n      zooming: false,\n      imageRatio: 0,\n      displayWidth: 0,\n      displayHeight: 0\n    };\n  },\n  computed: {\n    vertical: function vertical() {\n      var rootWidth = this.rootWidth,\n          rootHeight = this.rootHeight;\n      var rootRatio = rootHeight / rootWidth;\n      return this.imageRatio > rootRatio;\n    },\n    imageStyle: function imageStyle() {\n      var scale = this.scale;\n      var style = {\n        transitionDuration: this.zooming || this.moving ? '0s' : '.3s'\n      };\n\n      if (scale !== 1) {\n        var offsetX = this.moveX / scale;\n        var offsetY = this.moveY / scale;\n        style.transform = \"scale(\" + scale + \", \" + scale + \") translate(\" + offsetX + \"px, \" + offsetY + \"px)\";\n      }\n\n      return style;\n    },\n    maxMoveX: function maxMoveX() {\n      if (this.imageRatio) {\n        var displayWidth = this.vertical ? this.rootHeight / this.imageRatio : this.rootWidth;\n        return Math.max(0, (this.scale * displayWidth - this.rootWidth) / 2);\n      }\n\n      return 0;\n    },\n    maxMoveY: function maxMoveY() {\n      if (this.imageRatio) {\n        var displayHeight = this.vertical ? this.rootHeight : this.rootWidth * this.imageRatio;\n        return Math.max(0, (this.scale * displayHeight - this.rootHeight) / 2);\n      }\n\n      return 0;\n    }\n  },\n  watch: {\n    active: 'resetScale',\n    show: function show(val) {\n      if (!val) {\n        this.resetScale();\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.bindTouchEvent(this.$el);\n  },\n  methods: {\n    resetScale: function resetScale() {\n      this.setScale(1);\n      this.moveX = 0;\n      this.moveY = 0;\n    },\n    setScale: function setScale(scale) {\n      scale = range(scale, +this.minZoom, +this.maxZoom);\n\n      if (scale !== this.scale) {\n        this.scale = scale;\n        this.$emit('scale', {\n          scale: this.scale,\n          index: this.active\n        });\n      }\n    },\n    toggleScale: function toggleScale() {\n      var scale = this.scale > 1 ? 1 : 2;\n      this.setScale(scale);\n      this.moveX = 0;\n      this.moveY = 0;\n    },\n    onTouchStart: function onTouchStart(event) {\n      var touches = event.touches;\n      var _this$offsetX = this.offsetX,\n          offsetX = _this$offsetX === void 0 ? 0 : _this$offsetX;\n      this.touchStart(event);\n      this.touchStartTime = new Date();\n      this.fingerNum = touches.length;\n      this.startMoveX = this.moveX;\n      this.startMoveY = this.moveY;\n      this.moving = this.fingerNum === 1 && this.scale !== 1;\n      this.zooming = this.fingerNum === 2 && !offsetX;\n\n      if (this.zooming) {\n        this.startScale = this.scale;\n        this.startDistance = getDistance(event.touches);\n      }\n    },\n    onTouchMove: function onTouchMove(event) {\n      var touches = event.touches;\n      this.touchMove(event);\n\n      if (this.moving || this.zooming) {\n        preventDefault(event, true);\n      }\n\n      if (this.moving) {\n        var moveX = this.deltaX + this.startMoveX;\n        var moveY = this.deltaY + this.startMoveY;\n        this.moveX = range(moveX, -this.maxMoveX, this.maxMoveX);\n        this.moveY = range(moveY, -this.maxMoveY, this.maxMoveY);\n      }\n\n      if (this.zooming && touches.length === 2) {\n        var distance = getDistance(touches);\n        var scale = this.startScale * distance / this.startDistance;\n        this.setScale(scale);\n      }\n    },\n    onTouchEnd: function onTouchEnd(event) {\n      var stopPropagation = false;\n      /* istanbul ignore else */\n\n      if (this.moving || this.zooming) {\n        stopPropagation = true;\n\n        if (this.moving && this.startMoveX === this.moveX && this.startMoveY === this.moveY) {\n          stopPropagation = false;\n        }\n\n        if (!event.touches.length) {\n          if (this.zooming) {\n            this.moveX = range(this.moveX, -this.maxMoveX, this.maxMoveX);\n            this.moveY = range(this.moveY, -this.maxMoveY, this.maxMoveY);\n            this.zooming = false;\n          }\n\n          this.moving = false;\n          this.startMoveX = 0;\n          this.startMoveY = 0;\n          this.startScale = 1;\n\n          if (this.scale < 1) {\n            this.resetScale();\n          }\n        }\n      } // eliminate tap delay on safari\n\n\n      preventDefault(event, stopPropagation);\n      this.checkTap();\n      this.resetTouchStatus();\n    },\n    checkTap: function checkTap() {\n      var _this = this;\n\n      if (this.fingerNum > 1) {\n        return;\n      }\n\n      var _this$offsetX2 = this.offsetX,\n          offsetX = _this$offsetX2 === void 0 ? 0 : _this$offsetX2,\n          _this$offsetY = this.offsetY,\n          offsetY = _this$offsetY === void 0 ? 0 : _this$offsetY;\n      var deltaTime = new Date() - this.touchStartTime;\n      var TAP_TIME = 250;\n      var TAP_OFFSET = 5;\n\n      if (offsetX < TAP_OFFSET && offsetY < TAP_OFFSET && deltaTime < TAP_TIME) {\n        if (this.doubleTapTimer) {\n          clearTimeout(this.doubleTapTimer);\n          this.doubleTapTimer = null;\n          this.toggleScale();\n        } else {\n          this.doubleTapTimer = setTimeout(function () {\n            _this.$emit('close');\n\n            _this.doubleTapTimer = null;\n          }, TAP_TIME);\n        }\n      }\n    },\n    onLoad: function onLoad(event) {\n      var _event$target = event.target,\n          naturalWidth = _event$target.naturalWidth,\n          naturalHeight = _event$target.naturalHeight;\n      this.imageRatio = naturalHeight / naturalWidth;\n    }\n  },\n  render: function render() {\n    var h = arguments[0];\n    var imageSlots = {\n      loading: function loading() {\n        return h(Loading, {\n          \"attrs\": {\n            \"type\": \"spinner\"\n          }\n        });\n      }\n    };\n    return h(SwipeItem, {\n      \"class\": bem('swipe-item')\n    }, [h(Image, {\n      \"attrs\": {\n        \"src\": this.src,\n        \"fit\": \"contain\"\n      },\n      \"class\": bem('image', {\n        vertical: this.vertical\n      }),\n      \"style\": this.imageStyle,\n      \"scopedSlots\": imageSlots,\n      \"on\": {\n        \"load\": this.onLoad\n      }\n    })]);\n  }\n};","map":{"version":3,"sources":["C:/Users/Lisp/Desktop/Vue-app/items/node_modules/vant/es/image-preview/ImagePreviewItem.js"],"names":["bem","range","preventDefault","TouchMixin","Image","Loading","SwipeItem","getDistance","touches","Math","sqrt","pow","clientX","clientY","mixins","props","src","String","show","Boolean","active","Number","minZoom","maxZoom","rootWidth","rootHeight","data","scale","moveX","moveY","moving","zooming","imageRatio","displayWidth","displayHeight","computed","vertical","rootRatio","imageStyle","style","transitionDuration","offsetX","offsetY","transform","maxMoveX","max","maxMoveY","watch","val","resetScale","mounted","bindTouchEvent","$el","methods","setScale","$emit","index","toggleScale","onTouchStart","event","_this$offsetX","touchStart","touchStartTime","Date","fingerNum","length","startMoveX","startMoveY","startScale","startDistance","onTouchMove","touchMove","deltaX","deltaY","distance","onTouchEnd","stopPropagation","checkTap","resetTouchStatus","_this","_this$offsetX2","_this$offsetY","deltaTime","TAP_TIME","TAP_OFFSET","doubleTapTimer","clearTimeout","setTimeout","onLoad","_event$target","target","naturalWidth","naturalHeight","render","h","arguments","imageSlots","loading"],"mappings":"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","sourcesContent":["// Utils\nimport { bem } from './shared';\nimport { range } from '../utils/format/number';\nimport { preventDefault } from '../utils/dom/event'; // Mixins\n\nimport { TouchMixin } from '../mixins/touch'; // Component\n\nimport Image from '../image';\nimport Loading from '../loading';\nimport SwipeItem from '../swipe-item';\n\nfunction getDistance(touches) {\n  return Math.sqrt(Math.pow(touches[0].clientX - touches[1].clientX, 2) + Math.pow(touches[0].clientY - touches[1].clientY, 2));\n}\n\nexport default {\n  mixins: [TouchMixin],\n  props: {\n    src: String,\n    show: Boolean,\n    active: Number,\n    minZoom: [Number, String],\n    maxZoom: [Number, String],\n    rootWidth: Number,\n    rootHeight: Number\n  },\n  data: function data() {\n    return {\n      scale: 1,\n      moveX: 0,\n      moveY: 0,\n      moving: false,\n      zooming: false,\n      imageRatio: 0,\n      displayWidth: 0,\n      displayHeight: 0\n    };\n  },\n  computed: {\n    vertical: function vertical() {\n      var rootWidth = this.rootWidth,\n          rootHeight = this.rootHeight;\n      var rootRatio = rootHeight / rootWidth;\n      return this.imageRatio > rootRatio;\n    },\n    imageStyle: function imageStyle() {\n      var scale = this.scale;\n      var style = {\n        transitionDuration: this.zooming || this.moving ? '0s' : '.3s'\n      };\n\n      if (scale !== 1) {\n        var offsetX = this.moveX / scale;\n        var offsetY = this.moveY / scale;\n        style.transform = \"scale(\" + scale + \", \" + scale + \") translate(\" + offsetX + \"px, \" + offsetY + \"px)\";\n      }\n\n      return style;\n    },\n    maxMoveX: function maxMoveX() {\n      if (this.imageRatio) {\n        var displayWidth = this.vertical ? this.rootHeight / this.imageRatio : this.rootWidth;\n        return Math.max(0, (this.scale * displayWidth - this.rootWidth) / 2);\n      }\n\n      return 0;\n    },\n    maxMoveY: function maxMoveY() {\n      if (this.imageRatio) {\n        var displayHeight = this.vertical ? this.rootHeight : this.rootWidth * this.imageRatio;\n        return Math.max(0, (this.scale * displayHeight - this.rootHeight) / 2);\n      }\n\n      return 0;\n    }\n  },\n  watch: {\n    active: 'resetScale',\n    show: function show(val) {\n      if (!val) {\n        this.resetScale();\n      }\n    }\n  },\n  mounted: function mounted() {\n    this.bindTouchEvent(this.$el);\n  },\n  methods: {\n    resetScale: function resetScale() {\n      this.setScale(1);\n      this.moveX = 0;\n      this.moveY = 0;\n    },\n    setScale: function setScale(scale) {\n      scale = range(scale, +this.minZoom, +this.maxZoom);\n\n      if (scale !== this.scale) {\n        this.scale = scale;\n        this.$emit('scale', {\n          scale: this.scale,\n          index: this.active\n        });\n      }\n    },\n    toggleScale: function toggleScale() {\n      var scale = this.scale > 1 ? 1 : 2;\n      this.setScale(scale);\n      this.moveX = 0;\n      this.moveY = 0;\n    },\n    onTouchStart: function onTouchStart(event) {\n      var touches = event.touches;\n      var _this$offsetX = this.offsetX,\n          offsetX = _this$offsetX === void 0 ? 0 : _this$offsetX;\n      this.touchStart(event);\n      this.touchStartTime = new Date();\n      this.fingerNum = touches.length;\n      this.startMoveX = this.moveX;\n      this.startMoveY = this.moveY;\n      this.moving = this.fingerNum === 1 && this.scale !== 1;\n      this.zooming = this.fingerNum === 2 && !offsetX;\n\n      if (this.zooming) {\n        this.startScale = this.scale;\n        this.startDistance = getDistance(event.touches);\n      }\n    },\n    onTouchMove: function onTouchMove(event) {\n      var touches = event.touches;\n      this.touchMove(event);\n\n      if (this.moving || this.zooming) {\n        preventDefault(event, true);\n      }\n\n      if (this.moving) {\n        var moveX = this.deltaX + this.startMoveX;\n        var moveY = this.deltaY + this.startMoveY;\n        this.moveX = range(moveX, -this.maxMoveX, this.maxMoveX);\n        this.moveY = range(moveY, -this.maxMoveY, this.maxMoveY);\n      }\n\n      if (this.zooming && touches.length === 2) {\n        var distance = getDistance(touches);\n        var scale = this.startScale * distance / this.startDistance;\n        this.setScale(scale);\n      }\n    },\n    onTouchEnd: function onTouchEnd(event) {\n      var stopPropagation = false;\n      /* istanbul ignore else */\n\n      if (this.moving || this.zooming) {\n        stopPropagation = true;\n\n        if (this.moving && this.startMoveX === this.moveX && this.startMoveY === this.moveY) {\n          stopPropagation = false;\n        }\n\n        if (!event.touches.length) {\n          if (this.zooming) {\n            this.moveX = range(this.moveX, -this.maxMoveX, this.maxMoveX);\n            this.moveY = range(this.moveY, -this.maxMoveY, this.maxMoveY);\n            this.zooming = false;\n          }\n\n          this.moving = false;\n          this.startMoveX = 0;\n          this.startMoveY = 0;\n          this.startScale = 1;\n\n          if (this.scale < 1) {\n            this.resetScale();\n          }\n        }\n      } // eliminate tap delay on safari\n\n\n      preventDefault(event, stopPropagation);\n      this.checkTap();\n      this.resetTouchStatus();\n    },\n    checkTap: function checkTap() {\n      var _this = this;\n\n      if (this.fingerNum > 1) {\n        return;\n      }\n\n      var _this$offsetX2 = this.offsetX,\n          offsetX = _this$offsetX2 === void 0 ? 0 : _this$offsetX2,\n          _this$offsetY = this.offsetY,\n          offsetY = _this$offsetY === void 0 ? 0 : _this$offsetY;\n      var deltaTime = new Date() - this.touchStartTime;\n      var TAP_TIME = 250;\n      var TAP_OFFSET = 5;\n\n      if (offsetX < TAP_OFFSET && offsetY < TAP_OFFSET && deltaTime < TAP_TIME) {\n        if (this.doubleTapTimer) {\n          clearTimeout(this.doubleTapTimer);\n          this.doubleTapTimer = null;\n          this.toggleScale();\n        } else {\n          this.doubleTapTimer = setTimeout(function () {\n            _this.$emit('close');\n\n            _this.doubleTapTimer = null;\n          }, TAP_TIME);\n        }\n      }\n    },\n    onLoad: function onLoad(event) {\n      var _event$target = event.target,\n          naturalWidth = _event$target.naturalWidth,\n          naturalHeight = _event$target.naturalHeight;\n      this.imageRatio = naturalHeight / naturalWidth;\n    }\n  },\n  render: function render() {\n    var h = arguments[0];\n    var imageSlots = {\n      loading: function loading() {\n        return h(Loading, {\n          \"attrs\": {\n            \"type\": \"spinner\"\n          }\n        });\n      }\n    };\n    return h(SwipeItem, {\n      \"class\": bem('swipe-item')\n    }, [h(Image, {\n      \"attrs\": {\n        \"src\": this.src,\n        \"fit\": \"contain\"\n      },\n      \"class\": bem('image', {\n        vertical: this.vertical\n      }),\n      \"style\": this.imageStyle,\n      \"scopedSlots\": imageSlots,\n      \"on\": {\n        \"load\": this.onLoad\n      }\n    })]);\n  }\n};"]},"metadata":{},"sourceType":"module"}