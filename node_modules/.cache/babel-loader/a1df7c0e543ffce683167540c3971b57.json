{"ast":null,"code":"import \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/web.dom-collections.for-each.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.keys.js\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { UNSELECTED_SKU_VALUE_ID } from '../constants';\n/*\n  normalize sku tree\n\n  [\n    {\n      count: 2,\n      k: \"品种\", // 规格名称 skuKeyName\n      k_id: \"1200\", // skuKeyId\n      k_s: \"s1\" // skuKeyStr\n      v: [ // skuValues\n        { // skuValue\n          id: \"1201\", // skuValueId\n          name: \"萌\" // 具体的规格值 skuValueName\n        }, {\n          id: \"973\",\n          name: \"帅\"\n        }\n      ]\n    },\n    ...\n  ]\n                |\n                v\n  {\n    s1: [{\n      id: \"1201\",\n      name: \"萌\"\n    }, {\n      id: \"973\",\n      name: \"帅\"\n    }],\n    ...\n  }\n */\n\nexport var normalizeSkuTree = function normalizeSkuTree(skuTree) {\n  var normalizedTree = {};\n  skuTree.forEach(function (treeItem) {\n    normalizedTree[treeItem.k_s] = treeItem.v;\n  });\n  return normalizedTree;\n};\nexport var normalizePropList = function normalizePropList(propList) {\n  var normalizedProp = {};\n  propList.forEach(function (item) {\n    var itemObj = {};\n    item.v.forEach(function (it) {\n      itemObj[it.id] = it;\n    });\n    normalizedProp[item.k_id] = itemObj;\n  });\n  return normalizedProp;\n}; // 判断是否所有的sku都已经选中\n\nexport var isAllSelected = function isAllSelected(skuTree, selectedSku) {\n  // 筛选selectedSku对象中key值不为空的值\n  var selected = Object.keys(selectedSku).filter(function (skuKeyStr) {\n    return selectedSku[skuKeyStr] !== UNSELECTED_SKU_VALUE_ID;\n  });\n  return skuTree.length === selected.length;\n}; // 根据已选择的 sku 获取 skuComb\n\nexport var getSkuComb = function getSkuComb(skuList, selectedSku) {\n  var skuComb = skuList.filter(function (item) {\n    return Object.keys(selectedSku).every(function (skuKeyStr) {\n      return String(item[skuKeyStr]) === String(selectedSku[skuKeyStr]);\n    });\n  });\n  return skuComb[0];\n}; // 获取已选择的sku名称\n\nexport var getSelectedSkuValues = function getSelectedSkuValues(skuTree, selectedSku) {\n  var normalizedTree = normalizeSkuTree(skuTree);\n  return Object.keys(selectedSku).reduce(function (selectedValues, skuKeyStr) {\n    var skuValues = normalizedTree[skuKeyStr];\n    var skuValueId = selectedSku[skuKeyStr];\n\n    if (skuValueId !== UNSELECTED_SKU_VALUE_ID) {\n      var skuValue = skuValues.filter(function (value) {\n        return value.id === skuValueId;\n      })[0];\n      skuValue && selectedValues.push(skuValue);\n    }\n\n    return selectedValues;\n  }, []);\n}; // 判断sku是否可选\n\nexport var isSkuChoosable = function isSkuChoosable(skuList, selectedSku, skuToChoose) {\n  var _extends2;\n\n  var key = skuToChoose.key,\n      valueId = skuToChoose.valueId; // 先假设sku已选中，拼入已选中sku对象中\n\n  var matchedSku = _extends({}, selectedSku, (_extends2 = {}, _extends2[key] = valueId, _extends2)); // 再判断剩余sku是否全部不可选，若不可选则当前sku不可选中\n\n\n  var skusToCheck = Object.keys(matchedSku).filter(function (skuKey) {\n    return matchedSku[skuKey] !== UNSELECTED_SKU_VALUE_ID;\n  });\n  var filteredSku = skuList.filter(function (sku) {\n    return skusToCheck.every(function (skuKey) {\n      return String(matchedSku[skuKey]) === String(sku[skuKey]);\n    });\n  });\n  var stock = filteredSku.reduce(function (total, sku) {\n    total += sku.stock_num;\n    return total;\n  }, 0);\n  return stock > 0;\n};\nexport var getSelectedPropValues = function getSelectedPropValues(propList, selectedProp) {\n  var normalizeProp = normalizePropList(propList);\n  return Object.keys(selectedProp).reduce(function (acc, cur) {\n    selectedProp[cur].forEach(function (it) {\n      acc.push(_extends({}, normalizeProp[cur][it]));\n    });\n    return acc;\n  }, []);\n};\nexport var getSelectedProperties = function getSelectedProperties(propList, selectedProp) {\n  var list = [];\n  (propList || []).forEach(function (prop) {\n    if (selectedProp[prop.k_id] && selectedProp[prop.k_id].length > 0) {\n      var v = [];\n      prop.v.forEach(function (it) {\n        if (selectedProp[prop.k_id].indexOf(it.id) > -1) {\n          v.push(_extends({}, it));\n        }\n      });\n      list.push(_extends({}, prop, {\n        v: v\n      }));\n    }\n  });\n  return list;\n};\nexport default {\n  normalizeSkuTree: normalizeSkuTree,\n  getSkuComb: getSkuComb,\n  getSelectedSkuValues: getSelectedSkuValues,\n  isAllSelected: isAllSelected,\n  isSkuChoosable: isSkuChoosable,\n  getSelectedPropValues: getSelectedPropValues,\n  getSelectedProperties: getSelectedProperties\n};","map":{"version":3,"sources":["C:/Users/Lisp/Desktop/Vue-app/items/node_modules/vant/es/sku/utils/sku-helper.js"],"names":["_extends","UNSELECTED_SKU_VALUE_ID","normalizeSkuTree","skuTree","normalizedTree","forEach","treeItem","k_s","v","normalizePropList","propList","normalizedProp","item","itemObj","it","id","k_id","isAllSelected","selectedSku","selected","Object","keys","filter","skuKeyStr","length","getSkuComb","skuList","skuComb","every","String","getSelectedSkuValues","reduce","selectedValues","skuValues","skuValueId","skuValue","value","push","isSkuChoosable","skuToChoose","_extends2","key","valueId","matchedSku","skusToCheck","skuKey","filteredSku","sku","stock","total","stock_num","getSelectedPropValues","selectedProp","normalizeProp","acc","cur","getSelectedProperties","list","prop","indexOf"],"mappings":"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","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport { UNSELECTED_SKU_VALUE_ID } from '../constants';\n/*\n  normalize sku tree\n\n  [\n    {\n      count: 2,\n      k: \"品种\", // 规格名称 skuKeyName\n      k_id: \"1200\", // skuKeyId\n      k_s: \"s1\" // skuKeyStr\n      v: [ // skuValues\n        { // skuValue\n          id: \"1201\", // skuValueId\n          name: \"萌\" // 具体的规格值 skuValueName\n        }, {\n          id: \"973\",\n          name: \"帅\"\n        }\n      ]\n    },\n    ...\n  ]\n                |\n                v\n  {\n    s1: [{\n      id: \"1201\",\n      name: \"萌\"\n    }, {\n      id: \"973\",\n      name: \"帅\"\n    }],\n    ...\n  }\n */\n\nexport var normalizeSkuTree = function normalizeSkuTree(skuTree) {\n  var normalizedTree = {};\n  skuTree.forEach(function (treeItem) {\n    normalizedTree[treeItem.k_s] = treeItem.v;\n  });\n  return normalizedTree;\n};\nexport var normalizePropList = function normalizePropList(propList) {\n  var normalizedProp = {};\n  propList.forEach(function (item) {\n    var itemObj = {};\n    item.v.forEach(function (it) {\n      itemObj[it.id] = it;\n    });\n    normalizedProp[item.k_id] = itemObj;\n  });\n  return normalizedProp;\n}; // 判断是否所有的sku都已经选中\n\nexport var isAllSelected = function isAllSelected(skuTree, selectedSku) {\n  // 筛选selectedSku对象中key值不为空的值\n  var selected = Object.keys(selectedSku).filter(function (skuKeyStr) {\n    return selectedSku[skuKeyStr] !== UNSELECTED_SKU_VALUE_ID;\n  });\n  return skuTree.length === selected.length;\n}; // 根据已选择的 sku 获取 skuComb\n\nexport var getSkuComb = function getSkuComb(skuList, selectedSku) {\n  var skuComb = skuList.filter(function (item) {\n    return Object.keys(selectedSku).every(function (skuKeyStr) {\n      return String(item[skuKeyStr]) === String(selectedSku[skuKeyStr]);\n    });\n  });\n  return skuComb[0];\n}; // 获取已选择的sku名称\n\nexport var getSelectedSkuValues = function getSelectedSkuValues(skuTree, selectedSku) {\n  var normalizedTree = normalizeSkuTree(skuTree);\n  return Object.keys(selectedSku).reduce(function (selectedValues, skuKeyStr) {\n    var skuValues = normalizedTree[skuKeyStr];\n    var skuValueId = selectedSku[skuKeyStr];\n\n    if (skuValueId !== UNSELECTED_SKU_VALUE_ID) {\n      var skuValue = skuValues.filter(function (value) {\n        return value.id === skuValueId;\n      })[0];\n      skuValue && selectedValues.push(skuValue);\n    }\n\n    return selectedValues;\n  }, []);\n}; // 判断sku是否可选\n\nexport var isSkuChoosable = function isSkuChoosable(skuList, selectedSku, skuToChoose) {\n  var _extends2;\n\n  var key = skuToChoose.key,\n      valueId = skuToChoose.valueId; // 先假设sku已选中，拼入已选中sku对象中\n\n  var matchedSku = _extends({}, selectedSku, (_extends2 = {}, _extends2[key] = valueId, _extends2)); // 再判断剩余sku是否全部不可选，若不可选则当前sku不可选中\n\n\n  var skusToCheck = Object.keys(matchedSku).filter(function (skuKey) {\n    return matchedSku[skuKey] !== UNSELECTED_SKU_VALUE_ID;\n  });\n  var filteredSku = skuList.filter(function (sku) {\n    return skusToCheck.every(function (skuKey) {\n      return String(matchedSku[skuKey]) === String(sku[skuKey]);\n    });\n  });\n  var stock = filteredSku.reduce(function (total, sku) {\n    total += sku.stock_num;\n    return total;\n  }, 0);\n  return stock > 0;\n};\nexport var getSelectedPropValues = function getSelectedPropValues(propList, selectedProp) {\n  var normalizeProp = normalizePropList(propList);\n  return Object.keys(selectedProp).reduce(function (acc, cur) {\n    selectedProp[cur].forEach(function (it) {\n      acc.push(_extends({}, normalizeProp[cur][it]));\n    });\n    return acc;\n  }, []);\n};\nexport var getSelectedProperties = function getSelectedProperties(propList, selectedProp) {\n  var list = [];\n  (propList || []).forEach(function (prop) {\n    if (selectedProp[prop.k_id] && selectedProp[prop.k_id].length > 0) {\n      var v = [];\n      prop.v.forEach(function (it) {\n        if (selectedProp[prop.k_id].indexOf(it.id) > -1) {\n          v.push(_extends({}, it));\n        }\n      });\n      list.push(_extends({}, prop, {\n        v: v\n      }));\n    }\n  });\n  return list;\n};\nexport default {\n  normalizeSkuTree: normalizeSkuTree,\n  getSkuComb: getSkuComb,\n  getSelectedSkuValues: getSelectedSkuValues,\n  isAllSelected: isAllSelected,\n  isSkuChoosable: isSkuChoosable,\n  getSelectedPropValues: getSelectedPropValues,\n  getSelectedProperties: getSelectedProperties\n};"]},"metadata":{},"sourceType":"module"}