{"ast":null,"code":"import \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.string.replace.js\";\nimport { isDef, inBrowser } from '..';\nimport { isNumeric } from '../validate/number';\nexport function addUnit(value) {\n  if (!isDef(value)) {\n    return undefined;\n  }\n\n  value = String(value);\n  return isNumeric(value) ? value + \"px\" : value;\n} // cache\n\nvar rootFontSize;\n\nfunction getRootFontSize() {\n  if (!rootFontSize) {\n    var doc = document.documentElement;\n    var fontSize = doc.style.fontSize || window.getComputedStyle(doc).fontSize;\n    rootFontSize = parseFloat(fontSize);\n  }\n\n  return rootFontSize;\n}\n\nfunction convertRem(value) {\n  value = value.replace(/rem/g, '');\n  return +value * getRootFontSize();\n}\n\nfunction convertVw(value) {\n  value = value.replace(/vw/g, '');\n  return +value * window.innerWidth / 100;\n}\n\nfunction convertVh(value) {\n  value = value.replace(/vh/g, '');\n  return +value * window.innerHeight / 100;\n}\n\nexport function unitToPx(value) {\n  if (typeof value === 'number') {\n    return value;\n  }\n\n  if (inBrowser) {\n    if (value.indexOf('rem') !== -1) {\n      return convertRem(value);\n    }\n\n    if (value.indexOf('vw') !== -1) {\n      return convertVw(value);\n    }\n\n    if (value.indexOf('vh') !== -1) {\n      return convertVh(value);\n    }\n  }\n\n  return parseFloat(value);\n}","map":{"version":3,"sources":["C:/Users/Lisp/Desktop/Vue-app/items/node_modules/vant/es/utils/format/unit.js"],"names":["isDef","inBrowser","isNumeric","addUnit","value","undefined","String","rootFontSize","getRootFontSize","doc","document","documentElement","fontSize","style","window","getComputedStyle","parseFloat","convertRem","replace","convertVw","innerWidth","convertVh","innerHeight","unitToPx","indexOf"],"mappings":";;AAAA,SAASA,KAAT,EAAgBC,SAAhB,QAAiC,IAAjC;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,OAAO,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAC7B,MAAI,CAACJ,KAAK,CAACI,KAAD,CAAV,EAAmB;AACjB,WAAOC,SAAP;AACD;;AAEDD,EAAAA,KAAK,GAAGE,MAAM,CAACF,KAAD,CAAd;AACA,SAAOF,SAAS,CAACE,KAAD,CAAT,GAAmBA,KAAK,GAAG,IAA3B,GAAkCA,KAAzC;AACD,C,CAAC;;AAEF,IAAIG,YAAJ;;AAEA,SAASC,eAAT,GAA2B;AACzB,MAAI,CAACD,YAAL,EAAmB;AACjB,QAAIE,GAAG,GAAGC,QAAQ,CAACC,eAAnB;AACA,QAAIC,QAAQ,GAAGH,GAAG,CAACI,KAAJ,CAAUD,QAAV,IAAsBE,MAAM,CAACC,gBAAP,CAAwBN,GAAxB,EAA6BG,QAAlE;AACAL,IAAAA,YAAY,GAAGS,UAAU,CAACJ,QAAD,CAAzB;AACD;;AAED,SAAOL,YAAP;AACD;;AAED,SAASU,UAAT,CAAoBb,KAApB,EAA2B;AACzBA,EAAAA,KAAK,GAAGA,KAAK,CAACc,OAAN,CAAc,MAAd,EAAsB,EAAtB,CAAR;AACA,SAAO,CAACd,KAAD,GAASI,eAAe,EAA/B;AACD;;AAED,SAASW,SAAT,CAAmBf,KAAnB,EAA0B;AACxBA,EAAAA,KAAK,GAAGA,KAAK,CAACc,OAAN,CAAc,KAAd,EAAqB,EAArB,CAAR;AACA,SAAO,CAACd,KAAD,GAASU,MAAM,CAACM,UAAhB,GAA6B,GAApC;AACD;;AAED,SAASC,SAAT,CAAmBjB,KAAnB,EAA0B;AACxBA,EAAAA,KAAK,GAAGA,KAAK,CAACc,OAAN,CAAc,KAAd,EAAqB,EAArB,CAAR;AACA,SAAO,CAACd,KAAD,GAASU,MAAM,CAACQ,WAAhB,GAA8B,GAArC;AACD;;AAED,OAAO,SAASC,QAAT,CAAkBnB,KAAlB,EAAyB;AAC9B,MAAI,OAAOA,KAAP,KAAiB,QAArB,EAA+B;AAC7B,WAAOA,KAAP;AACD;;AAED,MAAIH,SAAJ,EAAe;AACb,QAAIG,KAAK,CAACoB,OAAN,CAAc,KAAd,MAAyB,CAAC,CAA9B,EAAiC;AAC/B,aAAOP,UAAU,CAACb,KAAD,CAAjB;AACD;;AAED,QAAIA,KAAK,CAACoB,OAAN,CAAc,IAAd,MAAwB,CAAC,CAA7B,EAAgC;AAC9B,aAAOL,SAAS,CAACf,KAAD,CAAhB;AACD;;AAED,QAAIA,KAAK,CAACoB,OAAN,CAAc,IAAd,MAAwB,CAAC,CAA7B,EAAgC;AAC9B,aAAOH,SAAS,CAACjB,KAAD,CAAhB;AACD;AACF;;AAED,SAAOY,UAAU,CAACZ,KAAD,CAAjB;AACD","sourcesContent":["import { isDef, inBrowser } from '..';\nimport { isNumeric } from '../validate/number';\nexport function addUnit(value) {\n  if (!isDef(value)) {\n    return undefined;\n  }\n\n  value = String(value);\n  return isNumeric(value) ? value + \"px\" : value;\n} // cache\n\nvar rootFontSize;\n\nfunction getRootFontSize() {\n  if (!rootFontSize) {\n    var doc = document.documentElement;\n    var fontSize = doc.style.fontSize || window.getComputedStyle(doc).fontSize;\n    rootFontSize = parseFloat(fontSize);\n  }\n\n  return rootFontSize;\n}\n\nfunction convertRem(value) {\n  value = value.replace(/rem/g, '');\n  return +value * getRootFontSize();\n}\n\nfunction convertVw(value) {\n  value = value.replace(/vw/g, '');\n  return +value * window.innerWidth / 100;\n}\n\nfunction convertVh(value) {\n  value = value.replace(/vh/g, '');\n  return +value * window.innerHeight / 100;\n}\n\nexport function unitToPx(value) {\n  if (typeof value === 'number') {\n    return value;\n  }\n\n  if (inBrowser) {\n    if (value.indexOf('rem') !== -1) {\n      return convertRem(value);\n    }\n\n    if (value.indexOf('vw') !== -1) {\n      return convertVw(value);\n    }\n\n    if (value.indexOf('vh') !== -1) {\n      return convertVh(value);\n    }\n  }\n\n  return parseFloat(value);\n}"]},"metadata":{},"sourceType":"module"}