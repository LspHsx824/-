{"ast":null,"code":"/**\n * requestAnimationFrame polyfill\n */\nimport { isServer } from '..';\nvar prev = Date.now();\n/* istanbul ignore next */\n\nfunction fallback(fn) {\n  var curr = Date.now();\n  var ms = Math.max(0, 16 - (curr - prev));\n  var id = setTimeout(fn, ms);\n  prev = curr + ms;\n  return id;\n}\n/* istanbul ignore next */\n\n\nvar root = isServer ? global : window;\n/* istanbul ignore next */\n\nvar iRaf = root.requestAnimationFrame || fallback;\n/* istanbul ignore next */\n\nvar iCancel = root.cancelAnimationFrame || root.clearTimeout;\nexport function raf(fn) {\n  return iRaf.call(root, fn);\n} // double raf for animation\n\nexport function doubleRaf(fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\nexport function cancelRaf(id) {\n  iCancel.call(root, id);\n}","map":{"version":3,"sources":["C:/Users/Lisp/Desktop/items/node_modules/vant/es/utils/dom/raf.js"],"names":["isServer","prev","Date","now","fallback","fn","curr","ms","Math","max","id","setTimeout","root","global","window","iRaf","requestAnimationFrame","iCancel","cancelAnimationFrame","clearTimeout","raf","call","doubleRaf","cancelRaf"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,QAAT,QAAyB,IAAzB;AACA,IAAIC,IAAI,GAAGC,IAAI,CAACC,GAAL,EAAX;AACA;;AAEA,SAASC,QAAT,CAAkBC,EAAlB,EAAsB;AACpB,MAAIC,IAAI,GAAGJ,IAAI,CAACC,GAAL,EAAX;AACA,MAAII,EAAE,GAAGC,IAAI,CAACC,GAAL,CAAS,CAAT,EAAY,MAAMH,IAAI,GAAGL,IAAb,CAAZ,CAAT;AACA,MAAIS,EAAE,GAAGC,UAAU,CAACN,EAAD,EAAKE,EAAL,CAAnB;AACAN,EAAAA,IAAI,GAAGK,IAAI,GAAGC,EAAd;AACA,SAAOG,EAAP;AACD;AACD;;;AAGA,IAAIE,IAAI,GAAGZ,QAAQ,GAAGa,MAAH,GAAYC,MAA/B;AACA;;AAEA,IAAIC,IAAI,GAAGH,IAAI,CAACI,qBAAL,IAA8BZ,QAAzC;AACA;;AAEA,IAAIa,OAAO,GAAGL,IAAI,CAACM,oBAAL,IAA6BN,IAAI,CAACO,YAAhD;AACA,OAAO,SAASC,GAAT,CAAaf,EAAb,EAAiB;AACtB,SAAOU,IAAI,CAACM,IAAL,CAAUT,IAAV,EAAgBP,EAAhB,CAAP;AACD,C,CAAC;;AAEF,OAAO,SAASiB,SAAT,CAAmBjB,EAAnB,EAAuB;AAC5Be,EAAAA,GAAG,CAAC,YAAY;AACdA,IAAAA,GAAG,CAACf,EAAD,CAAH;AACD,GAFE,CAAH;AAGD;AACD,OAAO,SAASkB,SAAT,CAAmBb,EAAnB,EAAuB;AAC5BO,EAAAA,OAAO,CAACI,IAAR,CAAaT,IAAb,EAAmBF,EAAnB;AACD","sourcesContent":["/**\n * requestAnimationFrame polyfill\n */\nimport { isServer } from '..';\nvar prev = Date.now();\n/* istanbul ignore next */\n\nfunction fallback(fn) {\n  var curr = Date.now();\n  var ms = Math.max(0, 16 - (curr - prev));\n  var id = setTimeout(fn, ms);\n  prev = curr + ms;\n  return id;\n}\n/* istanbul ignore next */\n\n\nvar root = isServer ? global : window;\n/* istanbul ignore next */\n\nvar iRaf = root.requestAnimationFrame || fallback;\n/* istanbul ignore next */\n\nvar iCancel = root.cancelAnimationFrame || root.clearTimeout;\nexport function raf(fn) {\n  return iRaf.call(root, fn);\n} // double raf for animation\n\nexport function doubleRaf(fn) {\n  raf(function () {\n    raf(fn);\n  });\n}\nexport function cancelRaf(id) {\n  iCancel.call(root, id);\n}"]},"metadata":{},"sourceType":"module"}