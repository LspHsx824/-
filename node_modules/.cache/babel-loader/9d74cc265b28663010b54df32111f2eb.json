{"ast":null,"code":"import \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.concat.js\";\nimport { sortChildren } from '../utils/vnodes';\nexport function ChildrenMixin(_parent, options) {\n  var _inject, _computed;\n\n  if (options === void 0) {\n    options = {};\n  }\n\n  var indexKey = options.indexKey || 'index';\n  return {\n    inject: (_inject = {}, _inject[_parent] = {\n      default: null\n    }, _inject),\n    computed: (_computed = {\n      parent: function parent() {\n        if (this.disableBindRelation) {\n          return null;\n        }\n\n        return this[_parent];\n      }\n    }, _computed[indexKey] = function () {\n      this.bindRelation();\n\n      if (this.parent) {\n        return this.parent.children.indexOf(this);\n      }\n\n      return null;\n    }, _computed),\n    watch: {\n      disableBindRelation: function disableBindRelation(val) {\n        if (!val) {\n          this.bindRelation();\n        }\n      }\n    },\n    mounted: function mounted() {\n      this.bindRelation();\n    },\n    beforeDestroy: function beforeDestroy() {\n      var _this = this;\n\n      if (this.parent) {\n        this.parent.children = this.parent.children.filter(function (item) {\n          return item !== _this;\n        });\n      }\n    },\n    methods: {\n      bindRelation: function bindRelation() {\n        if (!this.parent || this.parent.children.indexOf(this) !== -1) {\n          return;\n        }\n\n        var children = [].concat(this.parent.children, [this]);\n        sortChildren(children, this.parent);\n        this.parent.children = children;\n      }\n    }\n  };\n}\nexport function ParentMixin(parent) {\n  return {\n    provide: function provide() {\n      var _ref;\n\n      return _ref = {}, _ref[parent] = this, _ref;\n    },\n    data: function data() {\n      return {\n        children: []\n      };\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/Lisp/Desktop/items/node_modules/vant/es/mixins/relation.js"],"names":["sortChildren","ChildrenMixin","_parent","options","_inject","_computed","indexKey","inject","default","computed","parent","disableBindRelation","bindRelation","children","indexOf","watch","val","mounted","beforeDestroy","_this","filter","item","methods","concat","ParentMixin","provide","_ref","data"],"mappings":";;;AAAA,SAASA,YAAT,QAA6B,iBAA7B;AACA,OAAO,SAASC,aAAT,CAAuBC,OAAvB,EAAgCC,OAAhC,EAAyC;AAC9C,MAAIC,OAAJ,EAAaC,SAAb;;AAEA,MAAIF,OAAO,KAAK,KAAK,CAArB,EAAwB;AACtBA,IAAAA,OAAO,GAAG,EAAV;AACD;;AAED,MAAIG,QAAQ,GAAGH,OAAO,CAACG,QAAR,IAAoB,OAAnC;AACA,SAAO;AACLC,IAAAA,MAAM,GAAGH,OAAO,GAAG,EAAV,EAAcA,OAAO,CAACF,OAAD,CAAP,GAAmB;AACxCM,MAAAA,OAAO,EAAE;AAD+B,KAAjC,EAENJ,OAFG,CADD;AAILK,IAAAA,QAAQ,GAAGJ,SAAS,GAAG;AACrBK,MAAAA,MAAM,EAAE,SAASA,MAAT,GAAkB;AACxB,YAAI,KAAKC,mBAAT,EAA8B;AAC5B,iBAAO,IAAP;AACD;;AAED,eAAO,KAAKT,OAAL,CAAP;AACD;AAPoB,KAAZ,EAQRG,SAAS,CAACC,QAAD,CAAT,GAAsB,YAAY;AACnC,WAAKM,YAAL;;AAEA,UAAI,KAAKF,MAAT,EAAiB;AACf,eAAO,KAAKA,MAAL,CAAYG,QAAZ,CAAqBC,OAArB,CAA6B,IAA7B,CAAP;AACD;;AAED,aAAO,IAAP;AACD,KAhBU,EAgBRT,SAhBK,CAJH;AAqBLU,IAAAA,KAAK,EAAE;AACLJ,MAAAA,mBAAmB,EAAE,SAASA,mBAAT,CAA6BK,GAA7B,EAAkC;AACrD,YAAI,CAACA,GAAL,EAAU;AACR,eAAKJ,YAAL;AACD;AACF;AALI,KArBF;AA4BLK,IAAAA,OAAO,EAAE,SAASA,OAAT,GAAmB;AAC1B,WAAKL,YAAL;AACD,KA9BI;AA+BLM,IAAAA,aAAa,EAAE,SAASA,aAAT,GAAyB;AACtC,UAAIC,KAAK,GAAG,IAAZ;;AAEA,UAAI,KAAKT,MAAT,EAAiB;AACf,aAAKA,MAAL,CAAYG,QAAZ,GAAuB,KAAKH,MAAL,CAAYG,QAAZ,CAAqBO,MAArB,CAA4B,UAAUC,IAAV,EAAgB;AACjE,iBAAOA,IAAI,KAAKF,KAAhB;AACD,SAFsB,CAAvB;AAGD;AACF,KAvCI;AAwCLG,IAAAA,OAAO,EAAE;AACPV,MAAAA,YAAY,EAAE,SAASA,YAAT,GAAwB;AACpC,YAAI,CAAC,KAAKF,MAAN,IAAgB,KAAKA,MAAL,CAAYG,QAAZ,CAAqBC,OAArB,CAA6B,IAA7B,MAAuC,CAAC,CAA5D,EAA+D;AAC7D;AACD;;AAED,YAAID,QAAQ,GAAG,GAAGU,MAAH,CAAU,KAAKb,MAAL,CAAYG,QAAtB,EAAgC,CAAC,IAAD,CAAhC,CAAf;AACAb,QAAAA,YAAY,CAACa,QAAD,EAAW,KAAKH,MAAhB,CAAZ;AACA,aAAKA,MAAL,CAAYG,QAAZ,GAAuBA,QAAvB;AACD;AATM;AAxCJ,GAAP;AAoDD;AACD,OAAO,SAASW,WAAT,CAAqBd,MAArB,EAA6B;AAClC,SAAO;AACLe,IAAAA,OAAO,EAAE,SAASA,OAAT,GAAmB;AAC1B,UAAIC,IAAJ;;AAEA,aAAOA,IAAI,GAAG,EAAP,EAAWA,IAAI,CAAChB,MAAD,CAAJ,GAAe,IAA1B,EAAgCgB,IAAvC;AACD,KALI;AAMLC,IAAAA,IAAI,EAAE,SAASA,IAAT,GAAgB;AACpB,aAAO;AACLd,QAAAA,QAAQ,EAAE;AADL,OAAP;AAGD;AAVI,GAAP;AAYD","sourcesContent":["import { sortChildren } from '../utils/vnodes';\nexport function ChildrenMixin(_parent, options) {\n  var _inject, _computed;\n\n  if (options === void 0) {\n    options = {};\n  }\n\n  var indexKey = options.indexKey || 'index';\n  return {\n    inject: (_inject = {}, _inject[_parent] = {\n      default: null\n    }, _inject),\n    computed: (_computed = {\n      parent: function parent() {\n        if (this.disableBindRelation) {\n          return null;\n        }\n\n        return this[_parent];\n      }\n    }, _computed[indexKey] = function () {\n      this.bindRelation();\n\n      if (this.parent) {\n        return this.parent.children.indexOf(this);\n      }\n\n      return null;\n    }, _computed),\n    watch: {\n      disableBindRelation: function disableBindRelation(val) {\n        if (!val) {\n          this.bindRelation();\n        }\n      }\n    },\n    mounted: function mounted() {\n      this.bindRelation();\n    },\n    beforeDestroy: function beforeDestroy() {\n      var _this = this;\n\n      if (this.parent) {\n        this.parent.children = this.parent.children.filter(function (item) {\n          return item !== _this;\n        });\n      }\n    },\n    methods: {\n      bindRelation: function bindRelation() {\n        if (!this.parent || this.parent.children.indexOf(this) !== -1) {\n          return;\n        }\n\n        var children = [].concat(this.parent.children, [this]);\n        sortChildren(children, this.parent);\n        this.parent.children = children;\n      }\n    }\n  };\n}\nexport function ParentMixin(parent) {\n  return {\n    provide: function provide() {\n      var _ref;\n\n      return _ref = {}, _ref[parent] = this, _ref;\n    },\n    data: function data() {\n      return {\n        children: []\n      };\n    }\n  };\n}"]},"metadata":{},"sourceType":"module"}