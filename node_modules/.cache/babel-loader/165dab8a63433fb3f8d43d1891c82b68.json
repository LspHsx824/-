{"ast":null,"code":"import _toConsumableArray from \"C:/Users/Lisp/Desktop/items/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";\nimport _asyncToGenerator from \"C:/Users/Lisp/Desktop/items/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\nimport \"core-js/modules/es.array.concat.js\";\n//\n//\n//\n//\n//\n//\n//\n//\nimport { getArticleList } from \"@/api/getListApi\";\nexport default {\n  data: function data() {\n    return {\n      list: [],\n      loading: false,\n      finished: false,\n      timestamp: null\n    };\n  },\n  props: [\"item\"],\n  methods: {\n    onLoad: function onLoad() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _this$timestamp, _yield$getArticleList, data;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return getArticleList({\n                  channel_id: _this.item.id,\n                  timestamp: (_this$timestamp = _this.timestamp) !== null && _this$timestamp !== void 0 ? _this$timestamp : Date.now()\n                });\n\n              case 3:\n                _yield$getArticleList = _context.sent;\n                data = _yield$getArticleList.data;\n                _this.list = [].concat(_toConsumableArray(_this.list), _toConsumableArray(data.data.results));\n                console.log(_this.list);\n                _this.loading = false;\n                _this.timestamp = data.data.results.pre_timestamp;\n\n                if (data.data.results.length === 0) {\n                  _this.finished = true;\n                }\n\n                _context.next = 15;\n                break;\n\n              case 12:\n                _context.prev = 12;\n                _context.t0 = _context[\"catch\"](0);\n\n                _this.$toast(\"获取数据失败，未知错误\");\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 12]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;AASA;AAEA;AACAA,MADA,kBACA;AACA;AACAC,cADA;AAEAC,oBAFA;AAGAC,qBAHA;AAIAC;AAJA;AAMA,GARA;AASAC,iBATA;AAUAC;AACAC,UADA,oBACA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAKAC;AACAC,2CADA;AAEAL;AAFA,kBALA;;AAAA;AAAA;AAKAJ,oBALA,yBAKAA,IALA;AASA;AACAU;AAEA;AACA;;AACA;AACA;AACA;;AAhBA;AAAA;;AAAA;AAAA;AAAA;;AAqBA;;AArBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAsCA;AAvCA;AAVA","names":["data","list","loading","finished","timestamp","props","methods","onLoad","getArticleList","channel_id","console"],"sourceRoot":"src/views/Home/component","sources":["article-list.vue"],"sourcesContent":["<template>\r\n    <div class=\"list-container\">\r\n        <van-list v-model=\"loading\" :finished=\"finished\" finished-text=\"没有更多了\" @load=\"onLoad\">\r\n            <van-cell v-for=\"(item,index) in list\" :key=\"index\" :title=\"item.title\" />\r\n        </van-list>\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { getArticleList } from \"@/api/getListApi\";\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            list: [],\r\n            loading: false,\r\n            finished: false,\r\n            timestamp:null\r\n        };\r\n    },\r\n    props: [\"item\"],\r\n    methods: {\r\n        async onLoad() {\r\n            // 异步更新数据\r\n            // let params = { channel_id: this.item.id, timestamp: Date.now() };\r\n            try {\r\n                //  let { data } = await getArticleList(0,Date.now());\r\n                let { data } = await getArticleList({\r\n                    channel_id:this.item.id,\r\n                    timestamp:this.timestamp ??  Date.now()\r\n                });\r\n                this.list =[...this.list,...data.data.results] \r\n                console.log(this.list);\r\n                \r\n                this.loading = false;\r\n                this.timestamp = data.data.results.pre_timestamp;\r\n                if(data.data.results.length===0){\r\n                    this.finished = true;\r\n                }\r\n\r\n\r\n\r\n            } catch (err) {\r\n                this.$toast(\"获取数据失败，未知错误\");\r\n            }\r\n            //   console.log(this.item);\r\n            //   // setTimeout 仅做示例，真实场景中一般为 ajax 请求\r\n            //   setTimeout(() => {\r\n            //     for (let i = 0; i < 10; i++) {\r\n            //       this.list.push(this.list.length + 1);\r\n            //     }\r\n\r\n            //     // 加载状态结束\r\n            //     this.loading = false;\r\n\r\n            //     // 数据全部加载完成\r\n            //     if (this.list.length >= 40) {\r\n            //       this.finished = true;\r\n            //     }\r\n            //   }, 1000);\r\n        },\r\n    },\r\n};\r\n</script>\r\n\r\n<style></style>\r\n"]},"metadata":{},"sourceType":"module"}