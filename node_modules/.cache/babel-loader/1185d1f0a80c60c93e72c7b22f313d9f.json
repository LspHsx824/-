{"ast":null,"code":"//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n// 按需导入 API 接口\n// import { getArticleListAPI } from '@/api/articleAPI.js'\n// 导入需要的组件\n// import ArticleInfo from '@/components/Article/ArticleInfo.vue'\nexport default {\n  name: 'my-Home',\n  data: function data() {\n    return {\n      // 页码值\n      page: 1,\n      // 每页显示多少条数据\n      limit: 10,\n      // 文章的数组\n      artlist: [],\n      // 是否正在加载下一页数据，如果 loading 为 true，则不会反复触发 load 事件\n      // 每当下一页数据请求回来之后，千万要记得，把 loading 从 true 改为 false\n      loading: true,\n      // 所有数据是否加载完毕了，如果没有更多数据了，一定要把 finished 改成 true\n      finished: false,\n      // 是否正在下拉刷新\n      isLoading: false\n    };\n  },\n  created: function created() {// this.initArticleList()\n  },\n  methods: {// 封装获取文章列表数据的方法\n    // async initArticleList(isRefresh) {\n    //   // 发起 GET 请求，获取文章的列表数据\n    //   const { data: res } = await getArticleListAPI(this.page, this.limit)\n    //   if (isRefresh) {\n    //     // 证明是下拉刷新；新数据在前，旧数据在后\n    //     // this.artlist = [新数据在后, 旧数据在前]\n    //     this.artlist = [...res, ...this.artlist]\n    //     this.isLoading = false\n    //   } else {\n    //     // 证明是上拉加载更多；旧数据在前，新数据在后\n    //     // this.artlist = [旧数据在前, 新数据在后]\n    //     this.artlist = [...this.artlist, ...res]\n    //     this.loading = false\n    //   }\n    //   if (res.length === 0) {\n    //     // 证明没有下一页数据了，直接把 finished 改为 true，表示数据加载完了！\n    //     this.finished = true\n    //   }\n    // },\n    // 只要 onLoad 被调用，就应该请求下一页数据\n    // onLoad() {\n    //   console.log('触发了 load 事件！')\n    //   // 1. 让页码值 +1\n    //   this.page++\n    //   // 2. 重新请求接口获取数据\n    //   this.initArticleList()\n    // },\n    // // 下拉刷新的处理函数\n    // onRefresh() {\n    //   console.log('触发了下拉刷新！')\n    //   // 1. 让页码值 +1\n    //   this.page++\n    //   // 2. 重新请求接口获取数据\n    //   this.initArticleList(true)\n    // }\n  },\n  // 注册组件\n  components: {// ArticleInfo\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AA4BA;AACA;AAEA;AACA;AAEA;AACAA,iBADA;AAEAC,MAFA,kBAEA;AACA;AACA;AACAC,aAFA;AAGA;AACAC,eAJA;AAKA;AACAC,iBANA;AAOA;AACA;AACAC,mBATA;AAUA;AACAC,qBAXA;AAYA;AACAC;AAbA;AAeA,GAlBA;AAmBAC,SAnBA,qBAmBA,CACA;AACA,GArBA;AAsBAC,YACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtCA,GAtBA;AA8DA;AACAC,eACA;AADA;AA/DA","names":["name","data","page","limit","artlist","loading","finished","isLoading","created","methods","components"],"sourceRoot":"src/views/Home","sources":["Home.vue"],"sourcesContent":["<template>\n  <div class=\"home-container\">\n    <!-- 头部区域 -->\n    <van-nav-bar >\n        <van-button>朴素按钮</van-button>\n    </van-nav-bar>\n\n    <!-- 导入，注册，并使用 ArticleInfo 组件 -->\n    <!-- 在使用组件的时候，如果某个属性名是“小驼峰”形式，则绑定属性的时候，建议改写成“连字符”格式。例如： -->\n    <!-- cmtCount 建议写成 cmt-count -->\n    \n    <!-- <van-pull-refresh v-model=\"isLoading\" :disabled=\"finished\" @refresh=\"onRefresh\">\n      <van-list v-model=\"loading\" :finished=\"finished\" finished-text=\"没有更多了\" @load=\"onLoad\">\n        <ArticleInfo\n          v-for=\"item in artlist\"\n          :key=\"item.id\"\n          :title=\"item.title\"\n          :author=\"item.aut_name\"\n          :cmt-count=\"item.comm_count\"\n          :time=\"item.pubdate\"\n          :cover=\"item.cover\"\n        ></ArticleInfo>\n      </van-list>\n    </van-pull-refresh> -->\n  </div>\n</template>\n\n<script>\n// 按需导入 API 接口\n// import { getArticleListAPI } from '@/api/articleAPI.js'\n\n// 导入需要的组件\n// import ArticleInfo from '@/components/Article/ArticleInfo.vue'\n\nexport default {\n  name: 'my-Home',\n  data() {\n    return {\n      // 页码值\n      page: 1,\n      // 每页显示多少条数据\n      limit: 10,\n      // 文章的数组\n      artlist: [],\n      // 是否正在加载下一页数据，如果 loading 为 true，则不会反复触发 load 事件\n      // 每当下一页数据请求回来之后，千万要记得，把 loading 从 true 改为 false\n      loading: true,\n      // 所有数据是否加载完毕了，如果没有更多数据了，一定要把 finished 改成 true\n      finished: false,\n      // 是否正在下拉刷新\n      isLoading: false\n    }\n  },\n  created() {\n    // this.initArticleList()\n  },\n  methods: {\n    // 封装获取文章列表数据的方法\n    // async initArticleList(isRefresh) {\n    //   // 发起 GET 请求，获取文章的列表数据\n    //   const { data: res } = await getArticleListAPI(this.page, this.limit)\n\n    //   if (isRefresh) {\n    //     // 证明是下拉刷新；新数据在前，旧数据在后\n    //     // this.artlist = [新数据在后, 旧数据在前]\n    //     this.artlist = [...res, ...this.artlist]\n    //     this.isLoading = false\n    //   } else {\n    //     // 证明是上拉加载更多；旧数据在前，新数据在后\n    //     // this.artlist = [旧数据在前, 新数据在后]\n    //     this.artlist = [...this.artlist, ...res]\n    //     this.loading = false\n    //   }\n\n    //   if (res.length === 0) {\n    //     // 证明没有下一页数据了，直接把 finished 改为 true，表示数据加载完了！\n    //     this.finished = true\n    //   }\n    // },\n    // 只要 onLoad 被调用，就应该请求下一页数据\n    // onLoad() {\n    //   console.log('触发了 load 事件！')\n    //   // 1. 让页码值 +1\n    //   this.page++\n    //   // 2. 重新请求接口获取数据\n    //   this.initArticleList()\n    // },\n    // // 下拉刷新的处理函数\n    // onRefresh() {\n    //   console.log('触发了下拉刷新！')\n    //   // 1. 让页码值 +1\n    //   this.page++\n    //   // 2. 重新请求接口获取数据\n    //   this.initArticleList(true)\n    // }\n  },\n  // 注册组件\n  components: {\n    // ArticleInfo\n  }\n}\n</script>\n\n<style lang=\"less\" scoped>\n// .home-container {\n//   padding: 46px 0 50px 0;\n// }\n</style>\n"]},"metadata":{},"sourceType":"module"}