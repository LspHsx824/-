{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport { createNamespace, inBrowser } from '../utils';\nimport { raf, cancelRaf } from '../utils/dom/raf';\nimport { isSameSecond, parseTimeData, parseFormat } from './utils';\n\nvar _createNamespace = createNamespace('count-down'),\n    createComponent = _createNamespace[0],\n    bem = _createNamespace[1];\n\nexport default createComponent({\n  props: {\n    millisecond: Boolean,\n    time: {\n      type: [Number, String],\n      default: 0\n    },\n    format: {\n      type: String,\n      default: 'HH:mm:ss'\n    },\n    autoStart: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data: function data() {\n    return {\n      remain: 0\n    };\n  },\n  computed: {\n    timeData: function timeData() {\n      return parseTimeData(this.remain);\n    },\n    formattedTime: function formattedTime() {\n      return parseFormat(this.format, this.timeData);\n    }\n  },\n  watch: {\n    time: {\n      immediate: true,\n      handler: 'reset'\n    }\n  },\n  activated: function activated() {\n    if (this.keepAlivePaused) {\n      this.counting = true;\n      this.keepAlivePaused = false;\n      this.tick();\n    }\n  },\n  deactivated: function deactivated() {\n    if (this.counting) {\n      this.pause();\n      this.keepAlivePaused = true;\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.pause();\n  },\n  methods: {\n    // @exposed-api\n    start: function start() {\n      if (this.counting) {\n        return;\n      }\n\n      this.counting = true;\n      this.endTime = Date.now() + this.remain;\n      this.tick();\n    },\n    // @exposed-api\n    pause: function pause() {\n      this.counting = false;\n      cancelRaf(this.rafId);\n    },\n    // @exposed-api\n    reset: function reset() {\n      this.pause();\n      this.remain = +this.time;\n\n      if (this.autoStart) {\n        this.start();\n      }\n    },\n    tick: function tick() {\n      // should not start counting in server\n      // see: https://github.com/youzan/vant/issues/7807\n      if (!inBrowser) {\n        return;\n      }\n\n      if (this.millisecond) {\n        this.microTick();\n      } else {\n        this.macroTick();\n      }\n    },\n    microTick: function microTick() {\n      var _this = this;\n\n      this.rafId = raf(function () {\n        /* istanbul ignore if */\n        // in case of call reset immediately after finish\n        if (!_this.counting) {\n          return;\n        }\n\n        _this.setRemain(_this.getRemain());\n\n        if (_this.remain > 0) {\n          _this.microTick();\n        }\n      });\n    },\n    macroTick: function macroTick() {\n      var _this2 = this;\n\n      this.rafId = raf(function () {\n        /* istanbul ignore if */\n        // in case of call reset immediately after finish\n        if (!_this2.counting) {\n          return;\n        }\n\n        var remain = _this2.getRemain();\n\n        if (!isSameSecond(remain, _this2.remain) || remain === 0) {\n          _this2.setRemain(remain);\n        }\n\n        if (_this2.remain > 0) {\n          _this2.macroTick();\n        }\n      });\n    },\n    getRemain: function getRemain() {\n      return Math.max(this.endTime - Date.now(), 0);\n    },\n    setRemain: function setRemain(remain) {\n      this.remain = remain;\n      this.$emit('change', this.timeData);\n\n      if (remain === 0) {\n        this.pause();\n        this.$emit('finish');\n      }\n    }\n  },\n  render: function render() {\n    var h = arguments[0];\n    return h(\"div\", {\n      \"class\": bem()\n    }, [this.slots('default', this.timeData) || this.formattedTime]);\n  }\n});","map":{"version":3,"sources":["C:/Users/Lisp/Desktop/items/node_modules/vant/es/count-down/index.js"],"names":["createNamespace","inBrowser","raf","cancelRaf","isSameSecond","parseTimeData","parseFormat","_createNamespace","createComponent","bem","props","millisecond","Boolean","time","type","Number","String","default","format","autoStart","data","remain","computed","timeData","formattedTime","watch","immediate","handler","activated","keepAlivePaused","counting","tick","deactivated","pause","beforeDestroy","methods","start","endTime","Date","now","rafId","reset","microTick","macroTick","_this","setRemain","getRemain","_this2","Math","max","$emit","render","h","arguments","slots"],"mappings":"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","sourcesContent":["import { createNamespace, inBrowser } from '../utils';\nimport { raf, cancelRaf } from '../utils/dom/raf';\nimport { isSameSecond, parseTimeData, parseFormat } from './utils';\n\nvar _createNamespace = createNamespace('count-down'),\n    createComponent = _createNamespace[0],\n    bem = _createNamespace[1];\n\nexport default createComponent({\n  props: {\n    millisecond: Boolean,\n    time: {\n      type: [Number, String],\n      default: 0\n    },\n    format: {\n      type: String,\n      default: 'HH:mm:ss'\n    },\n    autoStart: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data: function data() {\n    return {\n      remain: 0\n    };\n  },\n  computed: {\n    timeData: function timeData() {\n      return parseTimeData(this.remain);\n    },\n    formattedTime: function formattedTime() {\n      return parseFormat(this.format, this.timeData);\n    }\n  },\n  watch: {\n    time: {\n      immediate: true,\n      handler: 'reset'\n    }\n  },\n  activated: function activated() {\n    if (this.keepAlivePaused) {\n      this.counting = true;\n      this.keepAlivePaused = false;\n      this.tick();\n    }\n  },\n  deactivated: function deactivated() {\n    if (this.counting) {\n      this.pause();\n      this.keepAlivePaused = true;\n    }\n  },\n  beforeDestroy: function beforeDestroy() {\n    this.pause();\n  },\n  methods: {\n    // @exposed-api\n    start: function start() {\n      if (this.counting) {\n        return;\n      }\n\n      this.counting = true;\n      this.endTime = Date.now() + this.remain;\n      this.tick();\n    },\n    // @exposed-api\n    pause: function pause() {\n      this.counting = false;\n      cancelRaf(this.rafId);\n    },\n    // @exposed-api\n    reset: function reset() {\n      this.pause();\n      this.remain = +this.time;\n\n      if (this.autoStart) {\n        this.start();\n      }\n    },\n    tick: function tick() {\n      // should not start counting in server\n      // see: https://github.com/youzan/vant/issues/7807\n      if (!inBrowser) {\n        return;\n      }\n\n      if (this.millisecond) {\n        this.microTick();\n      } else {\n        this.macroTick();\n      }\n    },\n    microTick: function microTick() {\n      var _this = this;\n\n      this.rafId = raf(function () {\n        /* istanbul ignore if */\n        // in case of call reset immediately after finish\n        if (!_this.counting) {\n          return;\n        }\n\n        _this.setRemain(_this.getRemain());\n\n        if (_this.remain > 0) {\n          _this.microTick();\n        }\n      });\n    },\n    macroTick: function macroTick() {\n      var _this2 = this;\n\n      this.rafId = raf(function () {\n        /* istanbul ignore if */\n        // in case of call reset immediately after finish\n        if (!_this2.counting) {\n          return;\n        }\n\n        var remain = _this2.getRemain();\n\n        if (!isSameSecond(remain, _this2.remain) || remain === 0) {\n          _this2.setRemain(remain);\n        }\n\n        if (_this2.remain > 0) {\n          _this2.macroTick();\n        }\n      });\n    },\n    getRemain: function getRemain() {\n      return Math.max(this.endTime - Date.now(), 0);\n    },\n    setRemain: function setRemain(remain) {\n      this.remain = remain;\n      this.$emit('change', this.timeData);\n\n      if (remain === 0) {\n        this.pause();\n        this.$emit('finish');\n      }\n    }\n  },\n  render: function render() {\n    var h = arguments[0];\n    return h(\"div\", {\n      \"class\": bem()\n    }, [this.slots('default', this.timeData) || this.formattedTime]);\n  }\n});"]},"metadata":{},"sourceType":"module"}