{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Lisp/Desktop/items/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"regenerator-runtime/runtime.js\";\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { searchContent } from \"@/api/users\";\nexport default {\n  name: \"search-suggestion\",\n  data: function data() {\n    return {\n      suggestions: []\n    };\n  },\n  props: [\"keyWrod\"],\n  watch: {\n    keyWrod: {\n      immediate: true,\n      // handler() {\n      //     this.lodingData();\n      // },\n      handler: this.throttle(function () {\n        this.lodingData();\n      }, 1000)\n    }\n  },\n  methods: {\n    lodingData: function lodingData() {\n      var _this = this;\n\n      return _asyncToGenerator( /*#__PURE__*/regeneratorRuntime.mark(function _callee() {\n        var _yield$searchContent, data;\n\n        return regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return searchContent(_this.keyWrod);\n\n              case 3:\n                _yield$searchContent = _context.sent;\n                data = _yield$searchContent.data;\n                _this.suggestions = data.data.options;\n                _context.next = 11;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](0);\n\n                _this.$toast(\"获取数据失败，请重试\");\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 8]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;AAkBA;AAEA;AACAA,2BADA;AAEAC,MAFA,kBAEA;AACA;AACAC;AADA;AAGA,GANA;AAOAC,oBAPA;AAQAC;AACAC;AACAC,qBADA;AAEA;AACA;AACA;AACAC;AACA;AACA,OAFA,EAEA,IAFA;AALA;AADA,GARA;AAmBAC;AACAC,cADA,wBACA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEAC,4BAFA;;AAAA;AAAA;AAEAT,oBAFA,wBAEAA,IAFA;AAGA;AAHA;AAAA;;AAAA;AAAA;AAAA;;AAKA;;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AARA;AAnBA","names":["name","data","suggestions","props","watch","keyWrod","immediate","handler","methods","lodingData","searchContent"],"sourceRoot":"src/views/search/search-comp","sources":["search-suggestion.vue"],"sourcesContent":["<template>\r\n    <div class=\"search-suggestion\">\r\n      <template v-if=\"suggestions.length!=0\">\r\n        <van-cell v-for=\"(item,i) in suggestions\"\r\n                  :key=\"i\"\r\n                  :title=\"item\" \r\n                  icon=\"shop-o\" clickable>\r\n            <!-- 使用 right-icon 插槽来自定义右侧图标 -->\r\n            <template #right-icon>\r\n                <van-icon name=\"search\" class=\"search-icon\" />\r\n            </template>\r\n        </van-cell>        \r\n      </template>\r\n\r\n    </div>\r\n</template>\r\n\r\n<script>\r\nimport { searchContent } from \"@/api/users\";\r\n\r\nexport default {\r\n    name: \"search-suggestion\",\r\n    data() {\r\n        return {\r\n            suggestions: [],\r\n        };\r\n    },\r\n    props: [\"keyWrod\"],\r\n    watch: {\r\n        keyWrod: {\r\n            immediate: true,\r\n            // handler() {\r\n            //     this.lodingData();\r\n            // },\r\n            handler:this.throttle(function(){\r\n              this.lodingData();\r\n            },1000)\r\n        },\r\n    },\r\n    methods: {\r\n        async lodingData() {\r\n            try {\r\n                const { data } = await searchContent(this.keyWrod);\r\n                this.suggestions = data.data.options;\r\n            } catch (err) {\r\n                this.$toast(\"获取数据失败，请重试\");\r\n            }\r\n        },\r\n    },\r\n};\r\n</script>\r\n\r\n<style langg=\"less\" scoped>\r\n\r\n.van-cell{\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n}\r\n</style>"]},"metadata":{},"sourceType":"module"}