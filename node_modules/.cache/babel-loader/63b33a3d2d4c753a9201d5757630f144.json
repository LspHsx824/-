{"ast":null,"code":"import \"core-js/modules/es.number.constructor.js\";\nimport { createNamespace, addUnit } from '../utils';\nimport { BindEventMixin } from '../mixins/bind-event';\n\nvar _createNamespace = createNamespace('progress'),\n    createComponent = _createNamespace[0],\n    bem = _createNamespace[1];\n\nexport default createComponent({\n  mixins: [BindEventMixin(function (bind) {\n    bind(window, 'resize', this.resize, true);\n    bind(window, 'orientationchange', this.resize, true);\n  })],\n  props: {\n    color: String,\n    inactive: Boolean,\n    pivotText: String,\n    textColor: String,\n    pivotColor: String,\n    trackColor: String,\n    strokeWidth: [Number, String],\n    percentage: {\n      type: [Number, String],\n      required: true,\n      validator: function validator(value) {\n        return value >= 0 && value <= 100;\n      }\n    },\n    showPivot: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data: function data() {\n    return {\n      pivotWidth: 0,\n      progressWidth: 0\n    };\n  },\n  mounted: function mounted() {\n    this.resize();\n  },\n  watch: {\n    showPivot: 'resize',\n    pivotText: 'resize'\n  },\n  methods: {\n    // @exposed-api\n    resize: function resize() {\n      var _this = this;\n\n      this.$nextTick(function () {\n        _this.progressWidth = _this.$el.offsetWidth;\n        _this.pivotWidth = _this.$refs.pivot ? _this.$refs.pivot.offsetWidth : 0;\n      });\n    }\n  },\n  render: function render() {\n    var h = arguments[0];\n    var pivotText = this.pivotText,\n        percentage = this.percentage;\n    var text = pivotText != null ? pivotText : percentage + '%';\n    var showPivot = this.showPivot && text;\n    var background = this.inactive ? '#cacaca' : this.color;\n    var pivotStyle = {\n      color: this.textColor,\n      left: (this.progressWidth - this.pivotWidth) * percentage / 100 + \"px\",\n      background: this.pivotColor || background\n    };\n    var portionStyle = {\n      background: background,\n      width: this.progressWidth * percentage / 100 + 'px'\n    };\n    var wrapperStyle = {\n      background: this.trackColor,\n      height: addUnit(this.strokeWidth)\n    };\n    return h(\"div\", {\n      \"class\": bem(),\n      \"style\": wrapperStyle\n    }, [h(\"span\", {\n      \"class\": bem('portion'),\n      \"style\": portionStyle\n    }, [showPivot && h(\"span\", {\n      \"ref\": \"pivot\",\n      \"style\": pivotStyle,\n      \"class\": bem('pivot')\n    }, [text])])]);\n  }\n});","map":{"version":3,"sources":["C:/Users/Lisp/Desktop/items/node_modules/vant/es/progress/index.js"],"names":["createNamespace","addUnit","BindEventMixin","_createNamespace","createComponent","bem","mixins","bind","window","resize","props","color","String","inactive","Boolean","pivotText","textColor","pivotColor","trackColor","strokeWidth","Number","percentage","type","required","validator","value","showPivot","default","data","pivotWidth","progressWidth","mounted","watch","methods","_this","$nextTick","$el","offsetWidth","$refs","pivot","render","h","arguments","text","background","pivotStyle","left","portionStyle","width","wrapperStyle","height"],"mappings":"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","sourcesContent":["import { createNamespace, addUnit } from '../utils';\nimport { BindEventMixin } from '../mixins/bind-event';\n\nvar _createNamespace = createNamespace('progress'),\n    createComponent = _createNamespace[0],\n    bem = _createNamespace[1];\n\nexport default createComponent({\n  mixins: [BindEventMixin(function (bind) {\n    bind(window, 'resize', this.resize, true);\n    bind(window, 'orientationchange', this.resize, true);\n  })],\n  props: {\n    color: String,\n    inactive: Boolean,\n    pivotText: String,\n    textColor: String,\n    pivotColor: String,\n    trackColor: String,\n    strokeWidth: [Number, String],\n    percentage: {\n      type: [Number, String],\n      required: true,\n      validator: function validator(value) {\n        return value >= 0 && value <= 100;\n      }\n    },\n    showPivot: {\n      type: Boolean,\n      default: true\n    }\n  },\n  data: function data() {\n    return {\n      pivotWidth: 0,\n      progressWidth: 0\n    };\n  },\n  mounted: function mounted() {\n    this.resize();\n  },\n  watch: {\n    showPivot: 'resize',\n    pivotText: 'resize'\n  },\n  methods: {\n    // @exposed-api\n    resize: function resize() {\n      var _this = this;\n\n      this.$nextTick(function () {\n        _this.progressWidth = _this.$el.offsetWidth;\n        _this.pivotWidth = _this.$refs.pivot ? _this.$refs.pivot.offsetWidth : 0;\n      });\n    }\n  },\n  render: function render() {\n    var h = arguments[0];\n    var pivotText = this.pivotText,\n        percentage = this.percentage;\n    var text = pivotText != null ? pivotText : percentage + '%';\n    var showPivot = this.showPivot && text;\n    var background = this.inactive ? '#cacaca' : this.color;\n    var pivotStyle = {\n      color: this.textColor,\n      left: (this.progressWidth - this.pivotWidth) * percentage / 100 + \"px\",\n      background: this.pivotColor || background\n    };\n    var portionStyle = {\n      background: background,\n      width: this.progressWidth * percentage / 100 + 'px'\n    };\n    var wrapperStyle = {\n      background: this.trackColor,\n      height: addUnit(this.strokeWidth)\n    };\n    return h(\"div\", {\n      \"class\": bem(),\n      \"style\": wrapperStyle\n    }, [h(\"span\", {\n      \"class\": bem('portion'),\n      \"style\": portionStyle\n    }, [showPivot && h(\"span\", {\n      \"ref\": \"pivot\",\n      \"style\": pivotStyle,\n      \"class\": bem('pivot')\n    }, [text])])]);\n  }\n});"]},"metadata":{},"sourceType":"module"}