{"ast":null,"code":"import \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.number.constructor.js\";\nimport _mergeJSXProps from \"@vue/babel-helper-vue-jsx-merge-props\"; // Utils\n\nimport { createNamespace, addUnit } from '../utils';\nimport { inherit } from '../utils/functional'; // Components\n\nimport Info from '../info'; // Types\n\nvar _createNamespace = createNamespace('icon'),\n    createComponent = _createNamespace[0],\n    bem = _createNamespace[1];\n\nfunction isImage(name) {\n  return name ? name.indexOf('/') !== -1 : false;\n} // compatible with legacy usage, should be removed in next major version\n\n\nvar LEGACY_MAP = {\n  medel: 'medal',\n  'medel-o': 'medal-o',\n  'calender-o': 'calendar-o'\n};\n\nfunction correctName(name) {\n  return name && LEGACY_MAP[name] || name;\n}\n\nfunction Icon(h, props, slots, ctx) {\n  var _props$badge;\n\n  var name = correctName(props.name);\n  var imageIcon = isImage(name);\n\n  if (process.env.NODE_ENV === 'development' && props.info) {\n    console.warn('[Vant] Icon: \"info\" prop is deprecated, use \"badge\" prop instead.');\n  }\n\n  return h(props.tag, _mergeJSXProps([{\n    \"class\": [props.classPrefix, imageIcon ? '' : props.classPrefix + \"-\" + name],\n    \"style\": {\n      color: props.color,\n      fontSize: addUnit(props.size)\n    }\n  }, inherit(ctx, true)]), [slots.default && slots.default(), imageIcon && h(\"img\", {\n    \"class\": bem('image'),\n    \"attrs\": {\n      \"src\": name\n    }\n  }), h(Info, {\n    \"attrs\": {\n      \"dot\": props.dot,\n      \"info\": (_props$badge = props.badge) != null ? _props$badge : props.info\n    }\n  })]);\n}\n\nIcon.props = {\n  dot: Boolean,\n  name: String,\n  size: [Number, String],\n  // @deprecated\n  // should be removed in next major version\n  info: [Number, String],\n  badge: [Number, String],\n  color: String,\n  tag: {\n    type: String,\n    default: 'i'\n  },\n  classPrefix: {\n    type: String,\n    default: bem()\n  }\n};\nexport default createComponent(Icon);","map":{"version":3,"sources":["C:/Users/Lisp/Desktop/items/node_modules/vant/es/icon/index.js"],"names":["_mergeJSXProps","createNamespace","addUnit","inherit","Info","_createNamespace","createComponent","bem","isImage","name","indexOf","LEGACY_MAP","medel","correctName","Icon","h","props","slots","ctx","_props$badge","imageIcon","process","env","NODE_ENV","info","console","warn","tag","classPrefix","color","fontSize","size","default","dot","badge","Boolean","String","Number","type"],"mappings":"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","sourcesContent":["import _mergeJSXProps from \"@vue/babel-helper-vue-jsx-merge-props\";\n// Utils\nimport { createNamespace, addUnit } from '../utils';\nimport { inherit } from '../utils/functional'; // Components\n\nimport Info from '../info'; // Types\n\nvar _createNamespace = createNamespace('icon'),\n    createComponent = _createNamespace[0],\n    bem = _createNamespace[1];\n\nfunction isImage(name) {\n  return name ? name.indexOf('/') !== -1 : false;\n} // compatible with legacy usage, should be removed in next major version\n\n\nvar LEGACY_MAP = {\n  medel: 'medal',\n  'medel-o': 'medal-o',\n  'calender-o': 'calendar-o'\n};\n\nfunction correctName(name) {\n  return name && LEGACY_MAP[name] || name;\n}\n\nfunction Icon(h, props, slots, ctx) {\n  var _props$badge;\n\n  var name = correctName(props.name);\n  var imageIcon = isImage(name);\n\n  if (process.env.NODE_ENV === 'development' && props.info) {\n    console.warn('[Vant] Icon: \"info\" prop is deprecated, use \"badge\" prop instead.');\n  }\n\n  return h(props.tag, _mergeJSXProps([{\n    \"class\": [props.classPrefix, imageIcon ? '' : props.classPrefix + \"-\" + name],\n    \"style\": {\n      color: props.color,\n      fontSize: addUnit(props.size)\n    }\n  }, inherit(ctx, true)]), [slots.default && slots.default(), imageIcon && h(\"img\", {\n    \"class\": bem('image'),\n    \"attrs\": {\n      \"src\": name\n    }\n  }), h(Info, {\n    \"attrs\": {\n      \"dot\": props.dot,\n      \"info\": (_props$badge = props.badge) != null ? _props$badge : props.info\n    }\n  })]);\n}\n\nIcon.props = {\n  dot: Boolean,\n  name: String,\n  size: [Number, String],\n  // @deprecated\n  // should be removed in next major version\n  info: [Number, String],\n  badge: [Number, String],\n  color: String,\n  tag: {\n    type: String,\n    default: 'i'\n  },\n  classPrefix: {\n    type: String,\n    default: bem()\n  }\n};\nexport default createComponent(Icon);"]},"metadata":{},"sourceType":"module"}